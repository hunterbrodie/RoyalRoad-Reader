{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15","program":"/home/hunter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"proc-macro-hack\"","--cfg","feature=\"proc-macro-nested\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=0fc69a6bfccc4695","-C","extra-filename=-0fc69a6bfccc4695","--out-dir","/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps","-L","dependency=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps","--extern","futures_core=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libfutures_core-bd808c1718c9988e.rmeta","--extern","futures_io=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libfutures_io-dfae5bba884e8a68.rmeta","--extern","futures_macro=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libfutures_macro-3d9e6068daf598ab.so","--extern","futures_task=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libfutures_task-857c170035d28b27.rmeta","--extern","memchr=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libmemchr-97075d83c92e4097.rmeta","--extern","pin_project_lite=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libpin_project_lite-42d82ba4e3590262.rmeta","--extern","pin_utils=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libpin_utils-ce7ed2cea79f2964.rmeta","--extern","proc_macro_hack=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libproc_macro_hack-14db1f8b33b148e2.so","--extern","proc_macro_nested=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libproc_macro_nested-356955576d349c13.rmeta","--extern","slab=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libslab-3c51f68fbb9ca793.rmeta","--cap-lints","allow","--cfg","fn_like_proc_macro","--error-format=json","--sysroot","/home/hunter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libfutures_util-0fc69a6bfccc4695.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[430647066263604541,3636392751668028369]},"crate_root":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src","external_crates":[{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":18,"id":{"name":"futures_core","disambiguator":[12473945594977338609,8761349039756584384]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","num":19,"id":{"name":"pin_utils","disambiguator":[13444118050061961394,15792921254750249749]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/join_mod.rs","num":20,"id":{"name":"futures_macro","disambiguator":[9864378928089839233,3760361187789320130]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","num":21,"id":{"name":"futures_task","disambiguator":[295946836602184129,4991965866800874793]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[6242653208481502721,5903162098939332941]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","num":23,"id":{"name":"slab","disambiguator":[5268162591656699566,745019238838488434]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","num":24,"id":{"name":"futures_io","disambiguator":[13856397715711251463,8814630602107160259]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","num":25,"id":{"name":"memchr","disambiguator":[16594110361271237996,15540981891740082964]}}],"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":131},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1182,"byte_end":1187,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":7},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1208,"byte_end":1215,"line_start":25,"line_end":25,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1354,"byte_end":1355,"line_start":32,"line_end":32,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1463,"byte_end":1464,"line_start":38,"line_end":38,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34651},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1502,"byte_end":1508,"line_start":40,"line_end":40,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34653},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1517,"byte_end":1521,"line_start":40,"line_end":40,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34654},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1517,"byte_end":1521,"line_start":40,"line_end":40,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":2,"index":34655},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1523,"byte_end":1527,"line_start":40,"line_end":40,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34656},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1523,"byte_end":1527,"line_start":40,"line_end":40,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":34796},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1543,"byte_end":1546,"line_start":41,"line_end":41,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34816},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1573,"byte_end":1576,"line_start":42,"line_end":42,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34817},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1573,"byte_end":1576,"line_start":42,"line_end":42,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":2,"index":34813},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1578,"byte_end":1580,"line_start":42,"line_end":42,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34814},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1578,"byte_end":1580,"line_start":42,"line_end":42,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":89}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1653,"byte_end":1654,"line_start":46,"line_end":46,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":90}},{"kind":"Use","ref_id":{"krate":2,"index":9578},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35368,"byte_end":35374,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":18,"index":11},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35434,"byte_end":35443,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":18,"index":14},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35445,"byte_end":35459,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":18,"index":17},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35493,"byte_end":35504,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":18,"index":32},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35506,"byte_end":35515,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":21,"index":111},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35541,"byte_end":35550,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":21,"index":77},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35552,"byte_end":35566,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":21,"index":132},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35568,"byte_end":35583,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4782},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41243,"byte_end":41254,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":112}},{"kind":"Use","ref_id":{"krate":0,"index":4280},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35698,"byte_end":35705,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4194},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35707,"byte_end":35711,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35713,"byte_end":35722,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4623},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35724,"byte_end":35731,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4438},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35733,"byte_end":35743,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4378},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35745,"byte_end":35748,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4488},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35750,"byte_end":35757,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4683},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35759,"byte_end":35769,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4550},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35771,"byte_end":35775,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4731},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35777,"byte_end":35786,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4328},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35882,"byte_end":35895,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4782},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35944,"byte_end":35955,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36155,"byte_end":36161,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":273},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36163,"byte_end":36173,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5118},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36225,"byte_end":36232,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5265},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36234,"byte_end":36241,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5448},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36243,"byte_end":36253,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5387},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36255,"byte_end":36264,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4818},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36266,"byte_end":36276,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5570},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36278,"byte_end":36284,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5509},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36286,"byte_end":36291,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5632},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36293,"byte_end":36304,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5326},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36306,"byte_end":36312,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5192},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36318,"byte_end":36324,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":4946},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36326,"byte_end":36336,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5067},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36338,"byte_end":36354,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36356,"byte_end":36368,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5705},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36370,"byte_end":36382,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36554,"byte_end":36558,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5763},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36560,"byte_end":36564,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36605,"byte_end":36612,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5769},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36614,"byte_end":36621,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36668,"byte_end":36678,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5775},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36680,"byte_end":36689,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36744,"byte_end":36758,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5788},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36760,"byte_end":36772,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5806},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36810,"byte_end":36822,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":697},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36862,"byte_end":36869,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36871,"byte_end":36877,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36914,"byte_end":36917,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":734},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36919,"byte_end":36921,"line_start":72,"line_end":72,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":732},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36923,"byte_end":36928,"line_start":72,"line_end":72,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5840},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36930,"byte_end":36935,"line_start":72,"line_end":72,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36970,"byte_end":36974,"line_start":75,"line_end":75,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":763},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36976,"byte_end":36981,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":767},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36983,"byte_end":36988,"line_start":75,"line_end":75,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36990,"byte_end":36995,"line_start":75,"line_end":75,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5942},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":36997,"byte_end":37001,"line_start":75,"line_end":75,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":5987},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37003,"byte_end":37008,"line_start":75,"line_end":75,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6044},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37010,"byte_end":37015,"line_start":75,"line_end":75,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6113},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37017,"byte_end":37022,"line_start":75,"line_end":75,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":811},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37117,"byte_end":37125,"line_start":80,"line_end":80,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":805},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37127,"byte_end":37134,"line_start":80,"line_end":80,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37173,"byte_end":37179,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6194},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37181,"byte_end":37187,"line_start":83,"line_end":83,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":868},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37286,"byte_end":37296,"line_start":88,"line_end":88,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6202},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37298,"byte_end":37307,"line_start":88,"line_end":88,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":900},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37355,"byte_end":37363,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":903},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37365,"byte_end":37374,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":907},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37376,"byte_end":37385,"line_start":92,"line_end":92,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":912},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37387,"byte_end":37396,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6278},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37398,"byte_end":37405,"line_start":92,"line_end":92,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6323},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37407,"byte_end":37415,"line_start":92,"line_end":92,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6380},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37417,"byte_end":37425,"line_start":92,"line_end":92,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6449},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37427,"byte_end":37435,"line_start":92,"line_end":92,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37540,"byte_end":37552,"line_start":98,"line_end":98,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":955},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37554,"byte_end":37564,"line_start":98,"line_end":98,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":989},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37611,"byte_end":37621,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6530},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37623,"byte_end":37632,"line_start":101,"line_end":101,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":1015},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37729,"byte_end":37738,"line_start":106,"line_end":106,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6538},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37740,"byte_end":37748,"line_start":106,"line_end":106,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":6544},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37786,"byte_end":37792,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":11380},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37930,"byte_end":37939,"line_start":115,"line_end":115,"column_start":32,"column_end":41},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":11137},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37941,"byte_end":37952,"line_start":115,"line_end":115,"column_start":43,"column_end":54},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":11133},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37954,"byte_end":37971,"line_start":115,"line_end":115,"column_start":56,"column_end":73},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":11148},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37973,"byte_end":37980,"line_start":115,"line_end":115,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":11149},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":37973,"byte_end":37980,"line_start":115,"line_end":115,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":6574}},{"kind":"Use","ref_id":{"krate":0,"index":6568},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":38036,"byte_end":38045,"line_start":117,"line_end":117,"column_start":24,"column_end":33},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":2,"index":9578},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11285,"byte_end":11291,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11293,"byte_end":11302,"line_start":303,"line_end":303,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":32},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11304,"byte_end":11313,"line_start":303,"line_end":303,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11315,"byte_end":11327,"line_start":303,"line_end":303,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":62},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164258,"byte_end":164267,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":18,"index":65},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164269,"byte_end":164283,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":18,"index":82},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164317,"byte_end":164328,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":18,"index":68},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164330,"byte_end":164336,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":18,"index":97},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164338,"byte_end":164347,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8076},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172177,"byte_end":172183,"line_start":160,"line_end":160,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1129}},{"kind":"Use","ref_id":{"krate":0,"index":8124},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":172360,"byte_end":172371,"line_start":166,"line_end":166,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1129}},{"kind":"Use","ref_id":{"krate":0,"index":8343},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173712,"byte_end":173723,"line_start":206,"line_end":206,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1129}},{"kind":"Use","ref_id":{"krate":0,"index":6583},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164463,"byte_end":164468,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":6632},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164470,"byte_end":164477,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":6741},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164479,"byte_end":164485,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":6781},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164487,"byte_end":164492,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":6821},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164494,"byte_end":164503,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":6860},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164505,"byte_end":164511,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":6925},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164513,"byte_end":164522,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7392},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164524,"byte_end":164531,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7041},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164533,"byte_end":164540,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7094},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164542,"byte_end":164546,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7163},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164548,"byte_end":164555,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7225},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164561,"byte_end":164565,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7273},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164567,"byte_end":164574,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7339},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164576,"byte_end":164579,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7471},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164581,"byte_end":164585,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7572},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164587,"byte_end":164593,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7621},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164595,"byte_end":164603,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7531},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164605,"byte_end":164609,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7492},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164611,"byte_end":164619,"line_start":22,"line_end":22,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8167},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164621,"byte_end":164625,"line_start":22,"line_end":22,"column_start":65,"column_end":69},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7479},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164627,"byte_end":164641,"line_start":22,"line_end":22,"column_start":71,"column_end":85},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7675},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164643,"byte_end":164647,"line_start":22,"line_end":22,"column_start":87,"column_end":91},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7714},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164653,"byte_end":164662,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2056},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164664,"byte_end":164673,"line_start":23,"line_end":23,"column_start":16,"column_end":25},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7264},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164675,"byte_end":164687,"line_start":23,"line_end":23,"column_start":27,"column_end":39},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7788},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164689,"byte_end":164693,"line_start":23,"line_end":23,"column_start":41,"column_end":45},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7896},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164695,"byte_end":164704,"line_start":23,"line_end":23,"column_start":47,"column_end":56},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7827},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164706,"byte_end":164715,"line_start":23,"line_end":23,"column_start":58,"column_end":67},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":7953},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164717,"byte_end":164721,"line_start":23,"line_end":23,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":6683},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164723,"byte_end":164728,"line_start":23,"line_end":23,"column_start":75,"column_end":80},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8021},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164730,"byte_end":164733,"line_start":23,"line_end":23,"column_start":82,"column_end":85},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8343},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164785,"byte_end":164796,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8076},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164847,"byte_end":164853,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8124},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164904,"byte_end":164915,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11767},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165107,"byte_end":165122,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11726},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165124,"byte_end":165132,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11665},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165134,"byte_end":165151,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9576},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299630,"byte_end":299643,"line_start":140,"line_end":140,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":2175}},{"kind":"Use","ref_id":{"krate":0,"index":2541},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165400,"byte_end":165410,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8382},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165412,"byte_end":165419,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8446},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165421,"byte_end":165428,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8584},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165430,"byte_end":165440,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8515},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165442,"byte_end":165451,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8655},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165453,"byte_end":165463,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8762},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165465,"byte_end":165471,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8693},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165473,"byte_end":165478,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8828},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165480,"byte_end":165486,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9131},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165492,"byte_end":165502,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9178},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165504,"byte_end":165513,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8954},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165515,"byte_end":165524,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9019},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165526,"byte_end":165538,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9085},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165540,"byte_end":165550,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9213},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165552,"byte_end":165559,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8897},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165561,"byte_end":165571,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":8889},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165573,"byte_end":165580,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9339},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165586,"byte_end":165598,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2669},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165600,"byte_end":165612,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9408},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165614,"byte_end":165626,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9282},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165628,"byte_end":165637,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9576},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165762,"byte_end":165775,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11626},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165866,"byte_end":165884,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11582},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165886,"byte_end":165897,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11516},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165899,"byte_end":165919,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2758},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165976,"byte_end":165980,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9595},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":165982,"byte_end":165986,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2777},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166025,"byte_end":166031,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9604},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166033,"byte_end":166039,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2814},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166088,"byte_end":166099,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9613},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166101,"byte_end":166111,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2830},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166148,"byte_end":166153,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9622},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166155,"byte_end":166160,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2860},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166195,"byte_end":166199,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9633},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166201,"byte_end":166205,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2886},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166246,"byte_end":166253,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9664},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166255,"byte_end":166262,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2920},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166303,"byte_end":166310,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2912},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166312,"byte_end":166318,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2944},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166357,"byte_end":166363,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9677},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166365,"byte_end":166371,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":2983},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166410,"byte_end":166416,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9723},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166418,"byte_end":166424,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":9814},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166573,"byte_end":166587,"line_start":98,"line_end":98,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":10272},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666329,"byte_end":10666337,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":9852}},{"kind":"Use","ref_id":{"krate":0,"index":10263},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666339,"byte_end":10666343,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":9852}},{"kind":"Use","ref_id":{"krate":0,"index":10264},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666339,"byte_end":10666343,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":9953}},{"kind":"Use","ref_id":{"krate":0,"index":10243},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666345,"byte_end":10666352,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":9852}},{"kind":"Use","ref_id":{"krate":0,"index":10244},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666345,"byte_end":10666352,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":9954}},{"kind":"Use","ref_id":{"krate":0,"index":10233},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666354,"byte_end":10666364,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":9852}},{"kind":"Use","ref_id":{"krate":0,"index":10252},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666366,"byte_end":10666376,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":9852}},{"kind":"Use","ref_id":{"krate":0,"index":10038},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166737,"byte_end":166753,"line_start":104,"line_end":104,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":10166},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166871,"byte_end":166881,"line_start":109,"line_end":109,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11443},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166883,"byte_end":166892,"line_start":109,"line_end":109,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11380},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":167006,"byte_end":167015,"line_start":114,"line_end":114,"column_start":32,"column_end":41},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11137},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":167017,"byte_end":167028,"line_start":114,"line_end":114,"column_start":43,"column_end":54},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11133},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":167030,"byte_end":167047,"line_start":114,"line_end":114,"column_start":56,"column_end":73},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11148},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":167049,"byte_end":167056,"line_start":114,"line_end":114,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":0,"index":11149},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":167049,"byte_end":167056,"line_start":114,"line_end":114,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":10231}},{"kind":"Use","ref_id":{"krate":0,"index":10225},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":167112,"byte_end":167121,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1121}},{"kind":"Use","ref_id":{"krate":18,"index":68},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11386,"byte_end":11392,"line_start":307,"line_end":307,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2056},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11394,"byte_end":11403,"line_start":307,"line_end":307,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":97},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11405,"byte_end":11414,"line_start":307,"line_end":307,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2669},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11416,"byte_end":11428,"line_start":307,"line_end":307,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":9753},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389690,"byte_end":389697,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":2,"index":37301},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389699,"byte_end":389703,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":2,"index":37341},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389705,"byte_end":389713,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":2,"index":37350},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389715,"byte_end":389729,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":2,"index":9763},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389731,"byte_end":389736,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":111},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389763,"byte_end":389772,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":77},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389774,"byte_end":389788,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":13},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389790,"byte_end":389800,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":10},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389802,"byte_end":389807,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":16},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389809,"byte_end":389819,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":132},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389821,"byte_end":389836,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":236},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389862,"byte_end":389872,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":237},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389920,"byte_end":389934,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":263},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":390018,"byte_end":390025,"line_start":24,"line_end":24,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":277},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":390084,"byte_end":390089,"line_start":27,"line_end":27,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":307},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":390149,"byte_end":390158,"line_start":30,"line_end":30,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":21,"index":312},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":390160,"byte_end":390168,"line_start":30,"line_end":30,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":18,"index":142},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":390216,"byte_end":390227,"line_start":32,"line_end":32,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":390265,"byte_end":390278,"line_start":36,"line_end":36,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":0,"index":3047},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":390280,"byte_end":390288,"line_start":36,"line_end":36,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":3017}},{"kind":"Use","ref_id":{"krate":1,"index":2782},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398305,"byte_end":398310,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":1,"index":7187},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398312,"byte_end":398321,"line_start":33,"line_end":33,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":1,"index":7246},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398323,"byte_end":398330,"line_start":33,"line_end":33,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":1,"index":3210},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398332,"byte_end":398342,"line_start":33,"line_end":33,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":1,"index":2780},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398344,"byte_end":398350,"line_start":33,"line_end":33,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":1,"index":7260},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398352,"byte_end":398360,"line_start":33,"line_end":33,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":24,"index":27},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398385,"byte_end":398397,"line_start":35,"line_end":35,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398399,"byte_end":398408,"line_start":35,"line_end":35,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":24,"index":25},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398410,"byte_end":398419,"line_start":35,"line_end":35,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":24,"index":20},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":398421,"byte_end":398431,"line_start":35,"line_end":35,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10285},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399029,"byte_end":399039,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10322},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399084,"byte_end":399093,"line_start":59,"line_end":59,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10375},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399138,"byte_end":399147,"line_start":62,"line_end":62,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10424},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399182,"byte_end":399187,"line_start":65,"line_end":65,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10473},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399222,"byte_end":399227,"line_start":68,"line_end":68,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3302},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399261,"byte_end":399265,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10490},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399267,"byte_end":399271,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3325},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399314,"byte_end":399322,"line_start":74,"line_end":74,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10544},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399324,"byte_end":399331,"line_start":74,"line_end":74,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10597},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399369,"byte_end":399375,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3387},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399411,"byte_end":399416,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3385},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399418,"byte_end":399423,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10625},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399465,"byte_end":399472,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10633},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399507,"byte_end":399512,"line_start":86,"line_end":86,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10646},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399744,"byte_end":399749,"line_start":96,"line_end":96,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10689},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399782,"byte_end":399786,"line_start":99,"line_end":99,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10698},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399837,"byte_end":399849,"line_start":102,"line_end":102,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10707},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399894,"byte_end":399903,"line_start":105,"line_end":105,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10716},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":399946,"byte_end":399954,"line_start":108,"line_end":108,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10727},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400001,"byte_end":400010,"line_start":111,"line_end":111,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10737},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400063,"byte_end":400075,"line_start":114,"line_end":114,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10748},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400120,"byte_end":400129,"line_start":117,"line_end":117,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3637},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400167,"byte_end":400173,"line_start":120,"line_end":120,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3635},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400175,"byte_end":400181,"line_start":120,"line_end":120,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10759},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400215,"byte_end":400219,"line_start":123,"line_end":123,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3679},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400253,"byte_end":400257,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3677},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400259,"byte_end":400263,"line_start":126,"line_end":126,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10768},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400300,"byte_end":400308,"line_start":129,"line_end":129,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3735},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400310,"byte_end":400322,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3736},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400310,"byte_end":400322,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3750}},{"kind":"Use","ref_id":{"krate":0,"index":10774},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400324,"byte_end":400333,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10785},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400367,"byte_end":400371,"line_start":132,"line_end":132,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10824},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400408,"byte_end":400414,"line_start":135,"line_end":135,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10831},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400449,"byte_end":400454,"line_start":138,"line_end":138,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10840},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400507,"byte_end":400520,"line_start":141,"line_end":141,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":10849},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400563,"byte_end":400571,"line_start":144,"line_end":144,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":24,"index":27},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11915,"byte_end":11927,"line_start":332,"line_end":332,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3894},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11929,"byte_end":11944,"line_start":332,"line_end":332,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11946,"byte_end":11955,"line_start":332,"line_end":332,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3861},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11957,"byte_end":11969,"line_start":332,"line_end":332,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":25},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11971,"byte_end":11980,"line_start":332,"line_end":332,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3889},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11982,"byte_end":11994,"line_start":332,"line_end":332,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":20},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11996,"byte_end":12006,"line_start":332,"line_end":332,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3878},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":12012,"byte_end":12025,"line_start":333,"line_end":333,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10959},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":495311,"byte_end":495327,"line_start":10,"line_end":10,"column_start":27,"column_end":43},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":3917}},{"kind":"Use","ref_id":{"krate":0,"index":10880},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":495329,"byte_end":495334,"line_start":10,"line_end":10,"column_start":45,"column_end":50},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":3917}},{"kind":"Use","ref_id":{"krate":0,"index":10917},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":495336,"byte_end":495351,"line_start":10,"line_end":10,"column_start":52,"column_end":67},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":3917}},{"kind":"Use","ref_id":{"krate":0,"index":10936},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":495353,"byte_end":495363,"line_start":10,"line_end":10,"column_start":69,"column_end":79},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":3917}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":100},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3056},{"krate":0,"index":3058},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":11093},{"krate":0,"index":3918},{"krate":0,"index":4126}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":313,"byte_end":401,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":569,"byte_end":590,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14362,"byte_end":14366,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"pub fn poll<F: Future + Unpin>(F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14507,"byte_end":14515,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14441,"byte_end":14480,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15576,"byte_end":15588,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"pub fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15713,"byte_end":15724,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":40}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15647,"byte_end":15686,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/random.rs","byte_start":33832,"byte_end":33839,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"pub fn shuffle<T>(&mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13377,"byte_end":13389,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"pub fn assert_unpin<T: Unpin>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13352,"byte_end":13369,"line_start":42,"line_end":42,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13451,"byte_end":13470,"line_start":47,"line_end":47,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"pub fn assert_fused_future<T: Future + FusedFuture>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13426,"byte_end":13443,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13547,"byte_end":13566,"line_start":51,"line_end":51,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"pub fn assert_fused_stream<T: Stream + FusedStream>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/mod.rs","byte_start":13522,"byte_end":13539,"line_start":50,"line_end":50,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1432,"byte_end":1441,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":11860},{"krate":0,"index":85},{"krate":0,"index":11862},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":11866},{"krate":0,"index":89},{"krate":0,"index":11868},{"krate":0,"index":90}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1377,"byte_end":1408,"line_start":35,"line_end":35,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":90},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1603,"byte_end":1614,"line_start":45,"line_end":45,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":91}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":100},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1112},{"krate":0,"index":6561},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6574},{"krate":0,"index":12580},{"krate":0,"index":6575},{"krate":0,"index":1113}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34901,"byte_end":34925,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34926,"byte_end":34929,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34930,"byte_end":34955,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34956,"byte_end":34959,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34960,"byte_end":34987,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":34988,"byte_end":35067,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35068,"byte_end":35105,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35106,"byte_end":35185,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35186,"byte_end":35261,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/mod.rs","byte_start":35262,"byte_end":35326,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":4149},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58570,"byte_end":58575,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4151},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58604,"byte_end":58610,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4153},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58639,"byte_end":58644,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4146},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58540,"byte_end":58547,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4149},{"krate":0,"index":4151},{"krate":0,"index":4153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4194},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63001,"byte_end":63005,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4196}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64824,"byte_end":64834,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63202,"byte_end":63270,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63275,"byte_end":63278,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63283,"byte_end":63351,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63356,"byte_end":63401,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63406,"byte_end":63409,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63414,"byte_end":63428,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63433,"byte_end":63436,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63441,"byte_end":63448,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63453,"byte_end":63494,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63499,"byte_end":63530,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63535,"byte_end":63591,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63596,"byte_end":63620,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63625,"byte_end":63660,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63665,"byte_end":63690,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63695,"byte_end":63698,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63703,"byte_end":63752,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63757,"byte_end":63760,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63765,"byte_end":63807,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63812,"byte_end":63851,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63856,"byte_end":63895,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63900,"byte_end":63917,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63922,"byte_end":63925,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63930,"byte_end":64000,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64005,"byte_end":64044,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64049,"byte_end":64090,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64095,"byte_end":64121,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64126,"byte_end":64129,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64134,"byte_end":64144,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64149,"byte_end":64166,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64171,"byte_end":64205,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64210,"byte_end":64257,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64262,"byte_end":64311,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64316,"byte_end":64378,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64383,"byte_end":64407,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64412,"byte_end":64455,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64460,"byte_end":64517,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64522,"byte_end":64597,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64602,"byte_end":64632,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64637,"byte_end":64654,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64659,"byte_end":64673,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64678,"byte_end":64762,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64767,"byte_end":64776,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64781,"byte_end":64786,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64791,"byte_end":64800,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64805,"byte_end":64812,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":4232},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":65892,"byte_end":65902,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4235},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":65986,"byte_end":65994,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4229},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":65870,"byte_end":65873,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4235}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10533577,"byte_end":10533586,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4280},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":38996,"byte_end":39003,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4282}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4328},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":39254,"byte_end":39267,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4330}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4378},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":39607,"byte_end":39610,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4381}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4438},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":39817,"byte_end":39827,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4440}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4488},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40033,"byte_end":40040,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":4491}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4550},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40233,"byte_end":40237,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4554}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4623},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40482,"byte_end":40489,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4626}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4683},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40730,"byte_end":40740,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":4685}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4731},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":40953,"byte_end":40962,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":4733}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4782},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67590,"byte_end":67601,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":4784}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":68604,"byte_end":68610,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":68461,"byte_end":68524,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":68525,"byte_end":68592,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":273},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":68984,"byte_end":68994,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":68895,"byte_end":68972,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71096,"byte_end":71100,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":70827,"byte_end":70901,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":70906,"byte_end":70979,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":70984,"byte_end":71052,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71057,"byte_end":71084,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71595,"byte_end":71604,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71452,"byte_end":71505,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71510,"byte_end":71513,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71518,"byte_end":71583,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72198,"byte_end":72210,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71786,"byte_end":71844,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71849,"byte_end":71852,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71857,"byte_end":71922,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71927,"byte_end":71930,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71935,"byte_end":71947,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71952,"byte_end":71955,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":71960,"byte_end":72053,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72058,"byte_end":72152,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72157,"byte_end":72186,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72718,"byte_end":72728,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72310,"byte_end":72366,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72371,"byte_end":72374,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72379,"byte_end":72444,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72449,"byte_end":72452,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72457,"byte_end":72469,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72474,"byte_end":72477,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72482,"byte_end":72575,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72580,"byte_end":72672,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72677,"byte_end":72706,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":79178,"byte_end":79185,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78988,"byte_end":79050,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":79055,"byte_end":79058,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":79063,"byte_end":79143,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":79148,"byte_end":79166,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":355},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41944,"byte_end":41953,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41845,"byte_end":41919,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41920,"byte_end":41933,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42785,"byte_end":42788,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41968,"byte_end":42043,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42048,"byte_end":42071,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42076,"byte_end":42079,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42084,"byte_end":42158,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42163,"byte_end":42234,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42239,"byte_end":42301,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42306,"byte_end":42309,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42314,"byte_end":42385,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42390,"byte_end":42461,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42466,"byte_end":42487,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42492,"byte_end":42495,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42500,"byte_end":42514,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42519,"byte_end":42522,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42527,"byte_end":42534,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42539,"byte_end":42580,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42585,"byte_end":42620,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42625,"byte_end":42628,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42633,"byte_end":42662,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42667,"byte_end":42710,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42715,"byte_end":42751,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42756,"byte_end":42765,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42770,"byte_end":42777,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43185,"byte_end":43193,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":42958,"byte_end":43033,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43038,"byte_end":43061,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43066,"byte_end":43069,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43074,"byte_end":43152,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43157,"byte_end":43177,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44205,"byte_end":44209,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43352,"byte_end":43428,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43433,"byte_end":43476,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43481,"byte_end":43484,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43489,"byte_end":43560,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43565,"byte_end":43639,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43644,"byte_end":43660,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43665,"byte_end":43668,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43673,"byte_end":43748,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43753,"byte_end":43764,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43769,"byte_end":43772,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43777,"byte_end":43848,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43853,"byte_end":43879,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43884,"byte_end":43887,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43892,"byte_end":43906,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43911,"byte_end":43914,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43919,"byte_end":43926,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43931,"byte_end":43972,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":43977,"byte_end":44012,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44017,"byte_end":44020,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44025,"byte_end":44059,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44064,"byte_end":44129,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44134,"byte_end":44171,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44176,"byte_end":44185,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44190,"byte_end":44197,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45079,"byte_end":45090,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44421,"byte_end":44496,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44501,"byte_end":44522,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44527,"byte_end":44530,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44535,"byte_end":44615,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44620,"byte_end":44692,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44697,"byte_end":44700,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44705,"byte_end":44719,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44724,"byte_end":44727,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44732,"byte_end":44739,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44744,"byte_end":44785,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44790,"byte_end":44825,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44830,"byte_end":44833,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44838,"byte_end":44852,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44857,"byte_end":44885,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44890,"byte_end":44926,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44931,"byte_end":44943,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44948,"byte_end":44986,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":44991,"byte_end":44997,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45002,"byte_end":45005,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45010,"byte_end":45045,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45050,"byte_end":45059,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45064,"byte_end":45071,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45929,"byte_end":45941,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45270,"byte_end":45346,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45351,"byte_end":45372,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45377,"byte_end":45380,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45385,"byte_end":45464,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45469,"byte_end":45541,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45546,"byte_end":45549,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45554,"byte_end":45568,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45573,"byte_end":45576,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45581,"byte_end":45588,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45593,"byte_end":45634,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45639,"byte_end":45674,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45679,"byte_end":45682,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45687,"byte_end":45701,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45706,"byte_end":45734,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45739,"byte_end":45775,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45780,"byte_end":45792,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45797,"byte_end":45835,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45840,"byte_end":45846,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45851,"byte_end":45854,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45859,"byte_end":45895,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45900,"byte_end":45909,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":45914,"byte_end":45921,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46720,"byte_end":46731,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46122,"byte_end":46175,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46180,"byte_end":46183,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46188,"byte_end":46262,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46267,"byte_end":46330,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46335,"byte_end":46338,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46343,"byte_end":46357,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46362,"byte_end":46365,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46370,"byte_end":46377,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46382,"byte_end":46423,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46428,"byte_end":46463,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46468,"byte_end":46503,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46508,"byte_end":46511,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46516,"byte_end":46546,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46551,"byte_end":46589,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46594,"byte_end":46645,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46650,"byte_end":46686,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46691,"byte_end":46700,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46705,"byte_end":46712,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47596,"byte_end":47603,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46870,"byte_end":46934,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46939,"byte_end":46975,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46980,"byte_end":46983,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":46988,"byte_end":47057,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47062,"byte_end":47099,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47104,"byte_end":47107,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47112,"byte_end":47172,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47177,"byte_end":47180,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47185,"byte_end":47256,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47261,"byte_end":47287,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47292,"byte_end":47295,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47300,"byte_end":47314,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47319,"byte_end":47322,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47327,"byte_end":47334,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47339,"byte_end":47380,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47385,"byte_end":47420,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47425,"byte_end":47428,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47433,"byte_end":47479,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47484,"byte_end":47525,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47530,"byte_end":47562,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47567,"byte_end":47576,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47581,"byte_end":47588,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48708,"byte_end":48722,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47817,"byte_end":47892,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47897,"byte_end":47920,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47925,"byte_end":47928,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":47933,"byte_end":48005,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48010,"byte_end":48083,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48088,"byte_end":48102,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48107,"byte_end":48110,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48115,"byte_end":48185,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48190,"byte_end":48208,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48213,"byte_end":48216,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48221,"byte_end":48235,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48240,"byte_end":48243,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48248,"byte_end":48255,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48260,"byte_end":48301,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48306,"byte_end":48341,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48346,"byte_end":48389,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48394,"byte_end":48397,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48402,"byte_end":48442,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48447,"byte_end":48513,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48518,"byte_end":48521,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48526,"byte_end":48579,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48584,"byte_end":48630,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48635,"byte_end":48674,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48679,"byte_end":48688,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48693,"byte_end":48700,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49810,"byte_end":49814,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48915,"byte_end":48988,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":48993,"byte_end":49059,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49064,"byte_end":49082,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49087,"byte_end":49090,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49095,"byte_end":49162,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49167,"byte_end":49232,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49237,"byte_end":49309,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49314,"byte_end":49388,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49393,"byte_end":49419,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49424,"byte_end":49427,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49432,"byte_end":49503,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49508,"byte_end":49583,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49588,"byte_end":49642,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49647,"byte_end":49650,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49655,"byte_end":49729,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49734,"byte_end":49802,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50654,"byte_end":50661,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":49960,"byte_end":50026,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50031,"byte_end":50034,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50039,"byte_end":50114,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50119,"byte_end":50192,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50197,"byte_end":50266,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50271,"byte_end":50321,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50326,"byte_end":50329,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50334,"byte_end":50348,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50353,"byte_end":50356,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50361,"byte_end":50368,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50373,"byte_end":50414,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50419,"byte_end":50454,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50459,"byte_end":50462,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50467,"byte_end":50496,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50501,"byte_end":50579,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50584,"byte_end":50620,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50625,"byte_end":50634,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50639,"byte_end":50646,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52199,"byte_end":52211,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50843,"byte_end":50897,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50902,"byte_end":50905,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50910,"byte_end":50985,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":50990,"byte_end":51064,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51069,"byte_end":51143,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51148,"byte_end":51199,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51204,"byte_end":51207,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51212,"byte_end":51287,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51292,"byte_end":51362,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51367,"byte_end":51434,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51439,"byte_end":51514,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51519,"byte_end":51591,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51596,"byte_end":51599,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51604,"byte_end":51668,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51673,"byte_end":51730,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51735,"byte_end":51738,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51743,"byte_end":51757,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51762,"byte_end":51765,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51770,"byte_end":51777,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51782,"byte_end":51823,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51828,"byte_end":51878,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51883,"byte_end":51886,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51891,"byte_end":51925,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51930,"byte_end":51979,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51984,"byte_end":51987,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":51992,"byte_end":52041,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52046,"byte_end":52070,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52075,"byte_end":52082,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52087,"byte_end":52137,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52142,"byte_end":52151,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52156,"byte_end":52163,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52168,"byte_end":52191,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53963,"byte_end":53969,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52441,"byte_end":52516,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52521,"byte_end":52544,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52549,"byte_end":52552,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52557,"byte_end":52631,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52636,"byte_end":52709,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52714,"byte_end":52726,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52731,"byte_end":52734,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52739,"byte_end":52803,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52808,"byte_end":52865,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52870,"byte_end":52873,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52878,"byte_end":52892,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52897,"byte_end":52900,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52905,"byte_end":52912,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52917,"byte_end":52958,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":52963,"byte_end":52998,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53003,"byte_end":53006,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53011,"byte_end":53040,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53045,"byte_end":53079,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53084,"byte_end":53118,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53123,"byte_end":53126,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53131,"byte_end":53164,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53169,"byte_end":53202,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53207,"byte_end":53216,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53221,"byte_end":53228,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53233,"byte_end":53236,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53241,"byte_end":53248,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53253,"byte_end":53322,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53327,"byte_end":53402,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53407,"byte_end":53438,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53443,"byte_end":53446,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53451,"byte_end":53492,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53497,"byte_end":53532,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53537,"byte_end":53573,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53578,"byte_end":53598,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53603,"byte_end":53606,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53611,"byte_end":53640,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53645,"byte_end":53679,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53684,"byte_end":53718,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53723,"byte_end":53768,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53773,"byte_end":53814,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53819,"byte_end":53826,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53831,"byte_end":53864,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53869,"byte_end":53901,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53906,"byte_end":53915,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53920,"byte_end":53927,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":53932,"byte_end":53955,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55131,"byte_end":55136,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54902,"byte_end":54943,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54948,"byte_end":54951,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":54956,"byte_end":55031,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55036,"byte_end":55093,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55098,"byte_end":55123,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55596,"byte_end":55607,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55295,"byte_end":55336,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55341,"byte_end":55344,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55349,"byte_end":55408,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55413,"byte_end":55416,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55421,"byte_end":55496,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55501,"byte_end":55558,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55563,"byte_end":55588,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55897,"byte_end":55907,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55764,"byte_end":55813,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":55818,"byte_end":55889,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56192,"byte_end":56203,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56056,"byte_end":56105,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56110,"byte_end":56184,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56434,"byte_end":56444,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56357,"byte_end":56426,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57840,"byte_end":57852,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56580,"byte_end":56652,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56657,"byte_end":56720,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56725,"byte_end":56728,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56733,"byte_end":56799,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56804,"byte_end":56807,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56812,"byte_end":56885,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56890,"byte_end":56959,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":56964,"byte_end":57034,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57039,"byte_end":57042,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57047,"byte_end":57061,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57066,"byte_end":57069,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57074,"byte_end":57081,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57086,"byte_end":57116,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57121,"byte_end":57171,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57176,"byte_end":57215,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57220,"byte_end":57271,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57276,"byte_end":57279,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57284,"byte_end":57344,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57349,"byte_end":57401,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57406,"byte_end":57413,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57418,"byte_end":57421,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57426,"byte_end":57495,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57500,"byte_end":57573,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57578,"byte_end":57610,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57615,"byte_end":57618,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57623,"byte_end":57630,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57635,"byte_end":57682,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57687,"byte_end":57726,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57731,"byte_end":57734,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57739,"byte_end":57820,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":57825,"byte_end":57832,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4818},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":101329,"byte_end":101339,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":4820}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":4856},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102313,"byte_end":102318,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":4853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4858},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102347,"byte_end":102353,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":4853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4860},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102382,"byte_end":102387,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":4853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4853},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102280,"byte_end":102290,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4856},{"krate":0,"index":4858},{"krate":0,"index":4860}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4903},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107256,"byte_end":107261,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4905},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107290,"byte_end":107296,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4907},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107325,"byte_end":107330,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":4900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4900},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107220,"byte_end":107233,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4903},{"krate":0,"index":4905},{"krate":0,"index":4907}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4946},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":80164,"byte_end":80174,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4949}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5007},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":80422,"byte_end":80435,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5010}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5067},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":80703,"byte_end":80719,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":5069}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5118},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":81307,"byte_end":81314,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5122}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5192},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":81554,"byte_end":81560,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5196}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5265},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":81810,"byte_end":81817,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5268}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5326},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":82025,"byte_end":82031,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5329}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5387},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":82250,"byte_end":82259,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5390}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5448},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":82531,"byte_end":82541,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5451}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5509},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":82914,"byte_end":82919,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":5512}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5570},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":83160,"byte_end":83166,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5573}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5632},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":83423,"byte_end":83434,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5636}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5705},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":83718,"byte_end":83730,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5708}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":506},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":84020,"byte_end":84032,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":83956,"byte_end":84009,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86792,"byte_end":86798,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85420,"byte_end":85478,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85483,"byte_end":85486,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85491,"byte_end":85566,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85571,"byte_end":85641,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85646,"byte_end":85719,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85724,"byte_end":85753,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85758,"byte_end":85761,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85766,"byte_end":85841,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85846,"byte_end":85921,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85926,"byte_end":85973,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85978,"byte_end":85981,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":85986,"byte_end":86061,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86066,"byte_end":86092,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86097,"byte_end":86100,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86105,"byte_end":86119,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86124,"byte_end":86127,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86132,"byte_end":86139,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86144,"byte_end":86182,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86187,"byte_end":86190,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86195,"byte_end":86236,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86241,"byte_end":86286,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86291,"byte_end":86333,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86338,"byte_end":86374,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86379,"byte_end":86388,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86393,"byte_end":86400,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86405,"byte_end":86408,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86413,"byte_end":86485,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86490,"byte_end":86501,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86506,"byte_end":86509,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86514,"byte_end":86521,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86526,"byte_end":86564,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86569,"byte_end":86572,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86577,"byte_end":86618,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86623,"byte_end":86669,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86674,"byte_end":86716,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86721,"byte_end":86758,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86763,"byte_end":86772,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86777,"byte_end":86784,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88357,"byte_end":88371,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":86989,"byte_end":87106,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87111,"byte_end":87114,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87119,"byte_end":87241,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87246,"byte_end":87296,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87301,"byte_end":87304,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87309,"byte_end":87384,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87389,"byte_end":87464,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87469,"byte_end":87516,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87521,"byte_end":87524,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87529,"byte_end":87604,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87609,"byte_end":87684,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87689,"byte_end":87736,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87741,"byte_end":87744,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87749,"byte_end":87824,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87829,"byte_end":87855,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87860,"byte_end":87863,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87868,"byte_end":87882,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87887,"byte_end":87890,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87895,"byte_end":87902,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87907,"byte_end":87945,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87950,"byte_end":87953,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":87958,"byte_end":87999,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88004,"byte_end":88049,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88054,"byte_end":88115,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88120,"byte_end":88152,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88157,"byte_end":88160,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88165,"byte_end":88211,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88216,"byte_end":88277,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88282,"byte_end":88315,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88320,"byte_end":88329,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88334,"byte_end":88341,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88346,"byte_end":88349,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90054,"byte_end":90061,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88605,"byte_end":88661,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88666,"byte_end":88669,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88674,"byte_end":88748,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88753,"byte_end":88814,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88819,"byte_end":88889,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88894,"byte_end":88969,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":88974,"byte_end":89009,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89014,"byte_end":89017,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89022,"byte_end":89097,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89102,"byte_end":89177,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89182,"byte_end":89229,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89234,"byte_end":89237,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89242,"byte_end":89317,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89322,"byte_end":89348,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89353,"byte_end":89356,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89361,"byte_end":89375,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89380,"byte_end":89383,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89388,"byte_end":89395,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89400,"byte_end":89438,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89443,"byte_end":89446,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89451,"byte_end":89492,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89497,"byte_end":89543,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89548,"byte_end":89591,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89596,"byte_end":89633,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89638,"byte_end":89647,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89652,"byte_end":89659,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89664,"byte_end":89667,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89672,"byte_end":89745,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89750,"byte_end":89764,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89769,"byte_end":89772,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89777,"byte_end":89784,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89789,"byte_end":89827,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89832,"byte_end":89835,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89840,"byte_end":89881,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89886,"byte_end":89931,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89936,"byte_end":89979,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":89984,"byte_end":90020,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90025,"byte_end":90034,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90039,"byte_end":90046,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91151,"byte_end":91159,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90254,"byte_end":90324,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90329,"byte_end":90378,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90383,"byte_end":90386,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90391,"byte_end":90454,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90459,"byte_end":90527,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90532,"byte_end":90605,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90610,"byte_end":90686,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90691,"byte_end":90736,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90741,"byte_end":90744,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90749,"byte_end":90824,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90829,"byte_end":90855,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90860,"byte_end":90863,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90868,"byte_end":90882,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90887,"byte_end":90890,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90895,"byte_end":90902,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90907,"byte_end":90945,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90950,"byte_end":90953,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":90958,"byte_end":90999,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91004,"byte_end":91055,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91060,"byte_end":91117,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91122,"byte_end":91131,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91136,"byte_end":91143,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91455,"byte_end":91462,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91335,"byte_end":91393,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91398,"byte_end":91447,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93017,"byte_end":93025,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91636,"byte_end":91705,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91710,"byte_end":91784,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91789,"byte_end":91792,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91797,"byte_end":91872,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91877,"byte_end":91947,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":91952,"byte_end":92017,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92022,"byte_end":92088,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92093,"byte_end":92127,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92132,"byte_end":92135,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92140,"byte_end":92215,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92220,"byte_end":92246,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92251,"byte_end":92254,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92259,"byte_end":92273,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92278,"byte_end":92281,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92286,"byte_end":92293,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92298,"byte_end":92336,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92341,"byte_end":92344,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92349,"byte_end":92390,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92395,"byte_end":92440,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92445,"byte_end":92520,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92525,"byte_end":92561,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92566,"byte_end":92575,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92580,"byte_end":92587,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92592,"byte_end":92595,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92600,"byte_end":92676,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92681,"byte_end":92692,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92697,"byte_end":92700,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92705,"byte_end":92712,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92717,"byte_end":92755,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92760,"byte_end":92763,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92768,"byte_end":92809,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92814,"byte_end":92860,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92865,"byte_end":92941,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92946,"byte_end":92983,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":92988,"byte_end":92997,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93002,"byte_end":93009,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94646,"byte_end":94653,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93279,"byte_end":93344,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93349,"byte_end":93421,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93426,"byte_end":93429,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93434,"byte_end":93509,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93514,"byte_end":93584,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93589,"byte_end":93654,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93659,"byte_end":93735,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93740,"byte_end":93758,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93763,"byte_end":93766,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93771,"byte_end":93846,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93851,"byte_end":93877,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93882,"byte_end":93885,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93890,"byte_end":93904,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93909,"byte_end":93912,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93917,"byte_end":93924,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93929,"byte_end":93967,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93972,"byte_end":93975,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":93980,"byte_end":94021,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94026,"byte_end":94072,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94077,"byte_end":94152,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94157,"byte_end":94194,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94199,"byte_end":94208,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94213,"byte_end":94220,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94225,"byte_end":94228,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94233,"byte_end":94306,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94311,"byte_end":94325,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94330,"byte_end":94333,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94338,"byte_end":94345,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94350,"byte_end":94388,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94393,"byte_end":94396,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94401,"byte_end":94442,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94447,"byte_end":94492,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94497,"byte_end":94571,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94576,"byte_end":94612,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94617,"byte_end":94626,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94631,"byte_end":94638,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95629,"byte_end":95639,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94902,"byte_end":94975,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94980,"byte_end":94983,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":94988,"byte_end":95063,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95068,"byte_end":95141,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95146,"byte_end":95215,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95220,"byte_end":95273,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95278,"byte_end":95281,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95286,"byte_end":95300,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95305,"byte_end":95308,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95313,"byte_end":95320,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95325,"byte_end":95366,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95371,"byte_end":95409,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95414,"byte_end":95417,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95422,"byte_end":95464,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95469,"byte_end":95550,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95555,"byte_end":95595,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95600,"byte_end":95609,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95614,"byte_end":95621,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96565,"byte_end":96576,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95838,"byte_end":95909,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95914,"byte_end":95917,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":95922,"byte_end":95997,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96002,"byte_end":96075,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96080,"byte_end":96149,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96154,"byte_end":96208,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96213,"byte_end":96216,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96221,"byte_end":96235,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96240,"byte_end":96243,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96248,"byte_end":96255,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96260,"byte_end":96301,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96306,"byte_end":96344,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96349,"byte_end":96352,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96357,"byte_end":96400,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96405,"byte_end":96485,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96490,"byte_end":96531,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96536,"byte_end":96545,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96550,"byte_end":96557,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96961,"byte_end":96972,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96780,"byte_end":96855,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96860,"byte_end":96889,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96894,"byte_end":96897,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":96902,"byte_end":96953,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98151,"byte_end":98169,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97207,"byte_end":97282,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97287,"byte_end":97310,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97315,"byte_end":97318,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97323,"byte_end":97395,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97400,"byte_end":97473,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97478,"byte_end":97492,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97497,"byte_end":97500,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97505,"byte_end":97575,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97580,"byte_end":97598,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97603,"byte_end":97606,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97611,"byte_end":97625,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97630,"byte_end":97633,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97638,"byte_end":97645,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97650,"byte_end":97691,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97696,"byte_end":97734,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97739,"byte_end":97785,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97790,"byte_end":97793,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97798,"byte_end":97858,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97863,"byte_end":97942,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97947,"byte_end":97950,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":97955,"byte_end":98012,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98017,"byte_end":98069,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98074,"byte_end":98117,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98122,"byte_end":98131,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98136,"byte_end":98143,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99260,"byte_end":99274,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98429,"byte_end":98500,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98505,"byte_end":98542,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98547,"byte_end":98596,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98601,"byte_end":98604,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98609,"byte_end":98678,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98683,"byte_end":98756,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98761,"byte_end":98831,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98836,"byte_end":98854,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98859,"byte_end":98862,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98867,"byte_end":98935,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98940,"byte_end":98943,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98948,"byte_end":98962,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98967,"byte_end":98970,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98975,"byte_end":98982,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":98987,"byte_end":99025,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99030,"byte_end":99033,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99038,"byte_end":99079,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99084,"byte_end":99136,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99141,"byte_end":99188,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99193,"byte_end":99226,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99231,"byte_end":99240,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99245,"byte_end":99252,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100529,"byte_end":100540,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99828,"byte_end":99881,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99886,"byte_end":99922,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99927,"byte_end":99930,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99935,"byte_end":99984,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":99989,"byte_end":100056,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100061,"byte_end":100074,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100079,"byte_end":100082,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100087,"byte_end":100101,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100106,"byte_end":100109,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100114,"byte_end":100121,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100126,"byte_end":100185,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100190,"byte_end":100193,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100198,"byte_end":100217,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100222,"byte_end":100240,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100245,"byte_end":100317,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100322,"byte_end":100354,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100359,"byte_end":100366,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100371,"byte_end":100447,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100452,"byte_end":100455,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100460,"byte_end":100509,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100514,"byte_end":100521,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100799,"byte_end":100813,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100696,"byte_end":100769,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":100774,"byte_end":100791,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5763},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":108982,"byte_end":108986,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":5765}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":108848,"byte_end":108885,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":108903,"byte_end":108970,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":563},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109528,"byte_end":109532,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109091,"byte_end":109159,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109160,"byte_end":109163,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109164,"byte_end":109227,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109228,"byte_end":109231,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109232,"byte_end":109246,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109247,"byte_end":109250,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109251,"byte_end":109258,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109259,"byte_end":109300,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109301,"byte_end":109325,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109326,"byte_end":109329,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109330,"byte_end":109362,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109363,"byte_end":109390,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109391,"byte_end":109394,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109395,"byte_end":109432,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109433,"byte_end":109457,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109458,"byte_end":109465,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109466,"byte_end":109502,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109503,"byte_end":109512,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109513,"byte_end":109520,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5769},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110359,"byte_end":110366,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":5771}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110220,"byte_end":110262,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110280,"byte_end":110347,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":591},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110885,"byte_end":110892,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110507,"byte_end":110587,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110588,"byte_end":110601,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110602,"byte_end":110605,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110606,"byte_end":110668,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110669,"byte_end":110672,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110673,"byte_end":110687,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110688,"byte_end":110691,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110692,"byte_end":110705,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110706,"byte_end":110747,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110748,"byte_end":110772,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110773,"byte_end":110776,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110777,"byte_end":110812,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110813,"byte_end":110839,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110840,"byte_end":110859,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110860,"byte_end":110869,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110870,"byte_end":110877,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5777},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111664,"byte_end":111670,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111629,"byte_end":111659,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5780},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111737,"byte_end":111741,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111694,"byte_end":111732,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5783},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111903,"byte_end":111907,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111760,"byte_end":111826,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111831,"byte_end":111898,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":5775},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111600,"byte_end":111609,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5777},{"krate":0,"index":5780},{"krate":0,"index":5783}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111478,"byte_end":111515,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111516,"byte_end":111519,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111520,"byte_end":111573,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":618},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112428,"byte_end":112438,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111967,"byte_end":112004,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112005,"byte_end":112008,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112009,"byte_end":112023,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112024,"byte_end":112027,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112028,"byte_end":112035,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112036,"byte_end":112077,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112078,"byte_end":112102,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112103,"byte_end":112128,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112129,"byte_end":112132,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112133,"byte_end":112182,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112183,"byte_end":112204,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112205,"byte_end":112257,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112258,"byte_end":112293,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112294,"byte_end":112349,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112350,"byte_end":112402,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112403,"byte_end":112412,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112413,"byte_end":112420,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112879,"byte_end":112889,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112581,"byte_end":112666,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112671,"byte_end":112742,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112747,"byte_end":112820,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112825,"byte_end":112853,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112858,"byte_end":112867,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":113237,"byte_end":113248,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":113117,"byte_end":113183,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":113188,"byte_end":113211,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":113216,"byte_end":113225,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5790},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":114873,"byte_end":114879,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":5788},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":114838,"byte_end":114868,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5793},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":114946,"byte_end":114950,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":5788},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":114903,"byte_end":114941,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5796},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115158,"byte_end":115162,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":5788},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":114965,"byte_end":115034,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115039,"byte_end":115109,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115114,"byte_end":115153,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5788},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":114803,"byte_end":114815,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5790},{"krate":0,"index":5793},{"krate":0,"index":5796}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":114663,"byte_end":114714,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":114715,"byte_end":114718,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":114719,"byte_end":114776,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":648},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115276,"byte_end":115290,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115228,"byte_end":115268,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115777,"byte_end":115787,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115468,"byte_end":115553,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115558,"byte_end":115629,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115634,"byte_end":115718,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115723,"byte_end":115751,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115756,"byte_end":115765,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":116137,"byte_end":116148,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":116014,"byte_end":116083,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":116088,"byte_end":116111,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":116116,"byte_end":116125,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5806},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":118359,"byte_end":118371,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":5808}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119386,"byte_end":119392,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":694}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119266,"byte_end":119306,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119307,"byte_end":119374,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":697},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119979,"byte_end":119986,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119443,"byte_end":119514,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119515,"byte_end":119518,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119519,"byte_end":119585,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119586,"byte_end":119589,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119590,"byte_end":119604,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119605,"byte_end":119608,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119609,"byte_end":119616,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119617,"byte_end":119658,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119659,"byte_end":119692,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119693,"byte_end":119732,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119733,"byte_end":119736,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119737,"byte_end":119794,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119795,"byte_end":119838,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119839,"byte_end":119844,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119845,"byte_end":119848,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119849,"byte_end":119890,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119891,"byte_end":119953,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119954,"byte_end":119963,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119964,"byte_end":119971,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5840},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120756,"byte_end":120761,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120605,"byte_end":120652,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120677,"byte_end":120744,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120884,"byte_end":120894,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120801,"byte_end":120858,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120863,"byte_end":120872,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":732},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121560,"byte_end":121565,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121314,"byte_end":121374,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121375,"byte_end":121378,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121379,"byte_end":121393,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121394,"byte_end":121397,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121398,"byte_end":121405,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121406,"byte_end":121447,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121448,"byte_end":121472,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121473,"byte_end":121476,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121477,"byte_end":121506,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121507,"byte_end":121534,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121535,"byte_end":121544,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121545,"byte_end":121552,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":734},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121900,"byte_end":121902,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121634,"byte_end":121701,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121702,"byte_end":121705,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121706,"byte_end":121720,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121721,"byte_end":121724,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121725,"byte_end":121732,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121733,"byte_end":121774,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121775,"byte_end":121799,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121800,"byte_end":121803,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121804,"byte_end":121842,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121843,"byte_end":121874,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121875,"byte_end":121884,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121885,"byte_end":121892,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":737},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122233,"byte_end":122236,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121966,"byte_end":122032,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122033,"byte_end":122036,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122037,"byte_end":122051,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122052,"byte_end":122055,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122056,"byte_end":122063,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122064,"byte_end":122105,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122106,"byte_end":122130,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122131,"byte_end":122134,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122135,"byte_end":122174,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122175,"byte_end":122207,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122208,"byte_end":122217,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":122218,"byte_end":122225,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5942},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":124522,"byte_end":124526,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":5945},{"krate":0,"index":5946}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5987},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":124592,"byte_end":124597,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5993}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6044},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":124669,"byte_end":124674,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6049},{"krate":0,"index":6050},{"krate":0,"index":6051},{"krate":0,"index":6052}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6113},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":124752,"byte_end":124757,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6119},{"krate":0,"index":6120},{"krate":0,"index":6121},{"krate":0,"index":6122},{"krate":0,"index":6123}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":760},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125372,"byte_end":125376,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":124795,"byte_end":124866,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":124867,"byte_end":124870,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":124871,"byte_end":124942,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":124943,"byte_end":125018,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125019,"byte_end":125022,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125023,"byte_end":125092,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125093,"byte_end":125119,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125120,"byte_end":125123,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125124,"byte_end":125138,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125139,"byte_end":125142,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125143,"byte_end":125150,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125151,"byte_end":125192,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125193,"byte_end":125217,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125218,"byte_end":125221,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125222,"byte_end":125246,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125247,"byte_end":125271,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125272,"byte_end":125306,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125307,"byte_end":125310,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125311,"byte_end":125346,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125347,"byte_end":125356,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125357,"byte_end":125364,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":763},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125922,"byte_end":125927,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125583,"byte_end":125635,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125636,"byte_end":125639,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125640,"byte_end":125654,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125655,"byte_end":125658,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125659,"byte_end":125666,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125667,"byte_end":125708,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125709,"byte_end":125733,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125734,"byte_end":125737,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125738,"byte_end":125762,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125763,"byte_end":125787,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125788,"byte_end":125812,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125813,"byte_end":125852,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125853,"byte_end":125856,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125857,"byte_end":125896,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125897,"byte_end":125906,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":125907,"byte_end":125914,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":767},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126589,"byte_end":126594,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126219,"byte_end":126271,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126272,"byte_end":126275,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126276,"byte_end":126290,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126291,"byte_end":126294,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126295,"byte_end":126302,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126303,"byte_end":126344,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126345,"byte_end":126369,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126370,"byte_end":126373,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126374,"byte_end":126398,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126399,"byte_end":126423,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126424,"byte_end":126448,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126449,"byte_end":126473,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126474,"byte_end":126516,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126517,"byte_end":126520,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126521,"byte_end":126563,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126564,"byte_end":126573,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126574,"byte_end":126581,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":772},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127359,"byte_end":127364,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":126958,"byte_end":127010,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127011,"byte_end":127014,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127015,"byte_end":127029,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127030,"byte_end":127033,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127034,"byte_end":127041,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127042,"byte_end":127083,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127084,"byte_end":127108,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127109,"byte_end":127112,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127113,"byte_end":127137,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127138,"byte_end":127162,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127163,"byte_end":127187,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127188,"byte_end":127212,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127213,"byte_end":127237,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127238,"byte_end":127283,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127284,"byte_end":127287,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127288,"byte_end":127333,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127334,"byte_end":127343,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join.rs","byte_start":127344,"byte_end":127351,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":128631,"byte_end":128638,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":807}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":128510,"byte_end":128551,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":128552,"byte_end":128619,"line_start":23,"line_end":23,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":811},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130252,"byte_end":130260,"line_start":78,"line_end":78,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":128945,"byte_end":129025,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129026,"byte_end":129036,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129037,"byte_end":129040,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129041,"byte_end":129120,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129121,"byte_end":129201,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129202,"byte_end":129220,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129221,"byte_end":129224,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129225,"byte_end":129302,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129303,"byte_end":129360,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129361,"byte_end":129364,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129365,"byte_end":129379,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129380,"byte_end":129383,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129384,"byte_end":129459,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129460,"byte_end":129508,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129509,"byte_end":129586,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129587,"byte_end":129657,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129658,"byte_end":129661,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129662,"byte_end":129731,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129732,"byte_end":129735,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129736,"byte_end":129804,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129805,"byte_end":129808,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129809,"byte_end":129886,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129887,"byte_end":129968,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129969,"byte_end":129972,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129973,"byte_end":129987,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129988,"byte_end":129991,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":129992,"byte_end":129999,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130000,"byte_end":130041,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130042,"byte_end":130076,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130077,"byte_end":130080,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130081,"byte_end":130118,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130119,"byte_end":130122,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130123,"byte_end":130170,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130171,"byte_end":130174,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130175,"byte_end":130226,"line_start":75,"line_end":75,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130227,"byte_end":130236,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130237,"byte_end":130244,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6194},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131619,"byte_end":131625,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6197}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131481,"byte_end":131522,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131523,"byte_end":131590,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":840},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133889,"byte_end":133895,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131716,"byte_end":131786,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131787,"byte_end":131790,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131791,"byte_end":131869,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131870,"byte_end":131946,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131947,"byte_end":132019,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132020,"byte_end":132023,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132024,"byte_end":132096,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132097,"byte_end":132125,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132126,"byte_end":132129,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132130,"byte_end":132197,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132198,"byte_end":132262,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132263,"byte_end":132313,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132314,"byte_end":132317,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132318,"byte_end":132332,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132333,"byte_end":132336,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132337,"byte_end":132357,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132358,"byte_end":132361,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132362,"byte_end":132369,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132370,"byte_end":132411,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132412,"byte_end":132430,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132431,"byte_end":132447,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132448,"byte_end":132471,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132472,"byte_end":132493,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132494,"byte_end":132500,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132501,"byte_end":132504,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132505,"byte_end":132596,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132597,"byte_end":132622,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132623,"byte_end":132682,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132683,"byte_end":132692,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132693,"byte_end":132699,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132700,"byte_end":132725,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132726,"byte_end":132756,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132757,"byte_end":132763,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132764,"byte_end":132767,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132768,"byte_end":132814,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132815,"byte_end":132837,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132838,"byte_end":132860,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132861,"byte_end":132864,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132865,"byte_end":132927,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":132928,"byte_end":133012,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133013,"byte_end":133086,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133087,"byte_end":133171,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133172,"byte_end":133245,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133246,"byte_end":133252,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133253,"byte_end":133256,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133257,"byte_end":133281,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133282,"byte_end":133291,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133292,"byte_end":133299,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133300,"byte_end":133303,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133304,"byte_end":133330,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133331,"byte_end":133334,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133335,"byte_end":133342,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133343,"byte_end":133402,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133403,"byte_end":133406,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133407,"byte_end":133460,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133461,"byte_end":133464,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133465,"byte_end":133540,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133541,"byte_end":133573,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133574,"byte_end":133606,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133607,"byte_end":133612,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133613,"byte_end":133657,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133658,"byte_end":133684,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133685,"byte_end":133762,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133763,"byte_end":133842,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133843,"byte_end":133856,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133857,"byte_end":133867,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133868,"byte_end":133873,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":133874,"byte_end":133881,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6202},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135352,"byte_end":135361,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6204}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135212,"byte_end":135255,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135273,"byte_end":135340,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":868},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136141,"byte_end":136151,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135439,"byte_end":135505,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135506,"byte_end":135509,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135510,"byte_end":135590,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135591,"byte_end":135669,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135670,"byte_end":135738,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135739,"byte_end":135742,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135743,"byte_end":135823,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135824,"byte_end":135898,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135899,"byte_end":135902,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135903,"byte_end":135980,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135981,"byte_end":136038,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136039,"byte_end":136042,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136043,"byte_end":136055,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136056,"byte_end":136059,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136060,"byte_end":136133,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136532,"byte_end":136542,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136457,"byte_end":136520,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6278},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140303,"byte_end":140310,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6281},{"krate":0,"index":6282}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6323},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140380,"byte_end":140388,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6327},{"krate":0,"index":6328},{"krate":0,"index":6329}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6380},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140464,"byte_end":140472,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6385},{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6388}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6449},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140554,"byte_end":140562,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6459}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":900},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141835,"byte_end":141843,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140600,"byte_end":140673,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140674,"byte_end":140706,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140707,"byte_end":140710,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140711,"byte_end":140782,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140783,"byte_end":140859,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140860,"byte_end":140932,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140933,"byte_end":140949,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140950,"byte_end":140953,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":140954,"byte_end":141023,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141024,"byte_end":141050,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141051,"byte_end":141054,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141055,"byte_end":141069,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141070,"byte_end":141073,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141074,"byte_end":141150,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141151,"byte_end":141187,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141188,"byte_end":141191,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141192,"byte_end":141199,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141200,"byte_end":141241,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141242,"byte_end":141266,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141267,"byte_end":141270,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141271,"byte_end":141316,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141317,"byte_end":141362,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141363,"byte_end":141401,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141402,"byte_end":141405,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141406,"byte_end":141445,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141446,"byte_end":141455,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141456,"byte_end":141463,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141464,"byte_end":141467,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141468,"byte_end":141538,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141539,"byte_end":141554,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141555,"byte_end":141558,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141559,"byte_end":141566,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141567,"byte_end":141608,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141609,"byte_end":141633,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141634,"byte_end":141637,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141638,"byte_end":141683,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141684,"byte_end":141730,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141731,"byte_end":141769,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141770,"byte_end":141773,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141774,"byte_end":141809,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141810,"byte_end":141819,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":141820,"byte_end":141827,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":903},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142499,"byte_end":142508,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142081,"byte_end":142141,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142142,"byte_end":142145,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142146,"byte_end":142160,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142161,"byte_end":142164,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142165,"byte_end":142172,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142173,"byte_end":142214,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142215,"byte_end":142239,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142240,"byte_end":142243,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142244,"byte_end":142289,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142290,"byte_end":142335,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142336,"byte_end":142381,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142382,"byte_end":142425,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142426,"byte_end":142429,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142430,"byte_end":142473,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142474,"byte_end":142483,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142484,"byte_end":142491,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":907},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143336,"byte_end":143345,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142866,"byte_end":142926,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142927,"byte_end":142930,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142931,"byte_end":142945,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142946,"byte_end":142949,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142950,"byte_end":142957,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":142958,"byte_end":142999,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143000,"byte_end":143024,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143025,"byte_end":143028,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143029,"byte_end":143074,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143075,"byte_end":143120,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143121,"byte_end":143166,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143167,"byte_end":143212,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143213,"byte_end":143259,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143260,"byte_end":143263,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143264,"byte_end":143310,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143311,"byte_end":143320,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143321,"byte_end":143328,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":912},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144317,"byte_end":144326,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143795,"byte_end":143855,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143856,"byte_end":143859,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143860,"byte_end":143874,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143875,"byte_end":143878,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143879,"byte_end":143886,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143887,"byte_end":143928,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143929,"byte_end":143953,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143954,"byte_end":143957,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":143958,"byte_end":144003,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144004,"byte_end":144049,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144050,"byte_end":144095,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144096,"byte_end":144141,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144142,"byte_end":144187,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144188,"byte_end":144237,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144238,"byte_end":144241,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144242,"byte_end":144291,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144292,"byte_end":144301,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join.rs","byte_start":144302,"byte_end":144309,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":145818,"byte_end":145828,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":957}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":145693,"byte_end":145738,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":145739,"byte_end":145806,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":961},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147421,"byte_end":147433,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146172,"byte_end":146251,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146252,"byte_end":146282,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146283,"byte_end":146286,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146287,"byte_end":146366,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146367,"byte_end":146447,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146448,"byte_end":146466,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146467,"byte_end":146470,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146471,"byte_end":146549,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146550,"byte_end":146630,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146631,"byte_end":146705,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146706,"byte_end":146729,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146730,"byte_end":146733,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146734,"byte_end":146811,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146812,"byte_end":146869,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146870,"byte_end":146873,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146874,"byte_end":146888,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146889,"byte_end":146892,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146893,"byte_end":146900,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146901,"byte_end":146942,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146943,"byte_end":146989,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146990,"byte_end":146993,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":146994,"byte_end":147017,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147018,"byte_end":147052,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147053,"byte_end":147087,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147088,"byte_end":147122,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147123,"byte_end":147129,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147130,"byte_end":147133,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147134,"byte_end":147197,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147198,"byte_end":147201,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147202,"byte_end":147225,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147226,"byte_end":147260,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147261,"byte_end":147296,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147297,"byte_end":147331,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147332,"byte_end":147338,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147339,"byte_end":147342,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147343,"byte_end":147395,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147396,"byte_end":147405,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147406,"byte_end":147413,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6530},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149331,"byte_end":149340,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":6533}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149189,"byte_end":149234,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149235,"byte_end":149302,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":989},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150925,"byte_end":150935,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149434,"byte_end":149504,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149505,"byte_end":149508,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149509,"byte_end":149587,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149588,"byte_end":149664,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149665,"byte_end":149737,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149738,"byte_end":149741,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149742,"byte_end":149814,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149815,"byte_end":149843,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149844,"byte_end":149847,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149848,"byte_end":149915,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149916,"byte_end":149987,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149988,"byte_end":150038,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150039,"byte_end":150042,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150043,"byte_end":150057,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150058,"byte_end":150061,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150062,"byte_end":150069,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150070,"byte_end":150154,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150155,"byte_end":150158,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150159,"byte_end":150216,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150217,"byte_end":150220,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150221,"byte_end":150303,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150304,"byte_end":150361,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150362,"byte_end":150419,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150420,"byte_end":150446,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150447,"byte_end":150452,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150453,"byte_end":150548,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150549,"byte_end":150572,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150573,"byte_end":150653,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150654,"byte_end":150735,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150736,"byte_end":150806,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150807,"byte_end":150878,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150879,"byte_end":150892,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150893,"byte_end":150903,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150904,"byte_end":150909,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":150910,"byte_end":150917,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6538},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152566,"byte_end":152574,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":6540}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152427,"byte_end":152469,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152487,"byte_end":152554,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1015},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153296,"byte_end":153305,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152651,"byte_end":152745,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152746,"byte_end":152749,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152750,"byte_end":152839,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152840,"byte_end":152924,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152925,"byte_end":153006,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153007,"byte_end":153052,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153053,"byte_end":153056,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153057,"byte_end":153135,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153136,"byte_end":153193,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153194,"byte_end":153197,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153198,"byte_end":153210,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153211,"byte_end":153214,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153215,"byte_end":153288,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6547},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156048,"byte_end":156052,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":6544},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156015,"byte_end":156043,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6550},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156108,"byte_end":156113,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":6544},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156074,"byte_end":156103,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":6544},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155996,"byte_end":156002,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(A),\n\n    /// Second branch of the type\n    Right(B),\n}","parent":null,"children":[{"krate":0,"index":6547},{"krate":0,"index":6550}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155473,"byte_end":155579,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155580,"byte_end":155583,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155584,"byte_end":155665,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155666,"byte_end":155669,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155670,"byte_end":155681,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155682,"byte_end":155714,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155715,"byte_end":155718,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155719,"byte_end":155760,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155761,"byte_end":155781,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155782,"byte_end":155785,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155786,"byte_end":155809,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155810,"byte_end":155849,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155850,"byte_end":155862,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155863,"byte_end":155903,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155904,"byte_end":155910,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155911,"byte_end":155914,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155915,"byte_end":155945,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155946,"byte_end":155954,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":155955,"byte_end":155962,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156667,"byte_end":156679,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156519,"byte_end":156577,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156582,"byte_end":156585,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156590,"byte_end":156655,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":157059,"byte_end":157072,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156910,"byte_end":156968,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156973,"byte_end":156976,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156981,"byte_end":157047,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":157360,"byte_end":157370,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":157287,"byte_end":157348,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":6568},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10638401,"byte_end":10638410,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10638031,"byte_end":10638118,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10638119,"byte_end":10638122,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10638123,"byte_end":10638199,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10638200,"byte_end":10638253,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10638254,"byte_end":10638257,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10638258,"byte_end":10638335,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/abortable.rs","byte_start":10638336,"byte_end":10638393,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1121},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":9776},{"krate":0,"index":9851},{"krate":0,"index":9852},{"krate":0,"index":10123},{"krate":0,"index":10124},{"krate":0,"index":10216},{"krate":0,"index":10217},{"krate":0,"index":10218},{"krate":0,"index":10219},{"krate":0,"index":10227},{"krate":0,"index":10228},{"krate":0,"index":10229},{"krate":0,"index":10230},{"krate":0,"index":10231},{"krate":0,"index":14200},{"krate":0,"index":10232},{"krate":0,"index":3009}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":163817,"byte_end":163842,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":163843,"byte_end":163846,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":163847,"byte_end":163872,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":163873,"byte_end":163876,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":163877,"byte_end":163950,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":163951,"byte_end":163976,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":163977,"byte_end":164056,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164057,"byte_end":164094,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164095,"byte_end":164168,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":164169,"byte_end":164199,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6583},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":218358,"byte_end":218363,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6586},{"krate":0,"index":6587}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6632},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":220488,"byte_end":220495,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":6635},{"krate":0,"index":6636}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6683},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":221929,"byte_end":221934,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":6687},{"krate":0,"index":6688},{"krate":0,"index":6689}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6741},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":223768,"byte_end":223774,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":6743},{"krate":0,"index":6744}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6781},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":225401,"byte_end":225406,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":6783},{"krate":0,"index":6784}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6821},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":227053,"byte_end":227062,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6823},{"krate":0,"index":6824}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6860},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":228694,"byte_end":228700,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":6864},{"krate":0,"index":6865},{"krate":0,"index":6866},{"krate":0,"index":6867}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6925},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":232094,"byte_end":232103,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":6929},{"krate":0,"index":6930},{"krate":0,"index":6931}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6993},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":235109,"byte_end":235116,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":6996},{"krate":0,"index":6997}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7041},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":169088,"byte_end":169095,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7043}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7094},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":236933,"byte_end":236937,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7099},{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7102}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7163},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":239419,"byte_end":239426,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7167},{"krate":0,"index":7168},{"krate":0,"index":7169}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7225},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241383,"byte_end":241387,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7227},{"krate":0,"index":7228}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241839,"byte_end":241846,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241570,"byte_end":241632,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241637,"byte_end":241640,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241645,"byte_end":241713,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241718,"byte_end":241784,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241789,"byte_end":241827,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7264},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243205,"byte_end":243217,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7266}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243035,"byte_end":243108,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243126,"byte_end":243193,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243780,"byte_end":243787,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243388,"byte_end":243461,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243466,"byte_end":243483,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243488,"byte_end":243491,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243496,"byte_end":243577,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243582,"byte_end":243664,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243669,"byte_end":243748,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243753,"byte_end":243768,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244398,"byte_end":244405,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243852,"byte_end":243919,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243924,"byte_end":243955,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243960,"byte_end":243963,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243968,"byte_end":244041,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244046,"byte_end":244101,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244106,"byte_end":244109,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244114,"byte_end":244195,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244200,"byte_end":244282,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244287,"byte_end":244366,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244371,"byte_end":244386,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245031,"byte_end":245042,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244478,"byte_end":244552,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244557,"byte_end":244588,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244593,"byte_end":244596,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244601,"byte_end":244674,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244679,"byte_end":244734,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244739,"byte_end":244742,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244747,"byte_end":244828,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244833,"byte_end":244915,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":244920,"byte_end":244999,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245004,"byte_end":245019,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245675,"byte_end":245685,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245155,"byte_end":245217,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245222,"byte_end":245225,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245230,"byte_end":245302,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245307,"byte_end":245378,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245383,"byte_end":245386,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245391,"byte_end":245472,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245477,"byte_end":245559,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245564,"byte_end":245643,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245648,"byte_end":245663,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7273},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170215,"byte_end":170222,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7276}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7339},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":246709,"byte_end":246712,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7342},{"krate":0,"index":7343}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7392},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":170583,"byte_end":170590,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7396}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7471},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248372,"byte_end":248376,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":7474}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248216,"byte_end":248275,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248293,"byte_end":248360,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7479},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249384,"byte_end":249398,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":7482}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249200,"byte_end":249275,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249276,"byte_end":249287,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249305,"byte_end":249372,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7492},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":250989,"byte_end":250997,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":7494},{"krate":0,"index":7495}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251437,"byte_end":251441,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251282,"byte_end":251355,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251360,"byte_end":251425,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251766,"byte_end":251775,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251528,"byte_end":251590,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251595,"byte_end":251598,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251603,"byte_end":251676,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251681,"byte_end":251754,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253739,"byte_end":253746,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252211,"byte_end":252284,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252289,"byte_end":252323,"line_start":61,"line_end":61,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252328,"byte_end":252331,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252336,"byte_end":252411,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252416,"byte_end":252456,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252461,"byte_end":252464,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252469,"byte_end":252483,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252488,"byte_end":252491,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252496,"byte_end":252536,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252541,"byte_end":252544,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252549,"byte_end":252556,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252561,"byte_end":252602,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252607,"byte_end":252650,"line_start":72,"line_end":72,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252655,"byte_end":252680,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252685,"byte_end":252688,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252693,"byte_end":252740,"line_start":75,"line_end":75,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252745,"byte_end":252766,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252771,"byte_end":252824,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252829,"byte_end":252897,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252902,"byte_end":252975,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":252980,"byte_end":253045,"line_start":80,"line_end":80,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253050,"byte_end":253134,"line_start":81,"line_end":81,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253139,"byte_end":253184,"line_start":82,"line_end":82,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253189,"byte_end":253198,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253203,"byte_end":253210,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253215,"byte_end":253218,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253223,"byte_end":253259,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253264,"byte_end":253267,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253272,"byte_end":253279,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253284,"byte_end":253325,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253330,"byte_end":253373,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253378,"byte_end":253403,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253408,"byte_end":253411,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253416,"byte_end":253464,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253469,"byte_end":253490,"line_start":94,"line_end":94,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253495,"byte_end":253534,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253539,"byte_end":253604,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253609,"byte_end":253650,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253655,"byte_end":253701,"line_start":98,"line_end":98,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253706,"byte_end":253715,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253720,"byte_end":253727,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254770,"byte_end":254780,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253912,"byte_end":253985,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":253990,"byte_end":254014,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254019,"byte_end":254022,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254027,"byte_end":254040,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254045,"byte_end":254048,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254053,"byte_end":254093,"line_start":113,"line_end":113,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254098,"byte_end":254101,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254106,"byte_end":254113,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254118,"byte_end":254159,"line_start":116,"line_end":116,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254164,"byte_end":254207,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254212,"byte_end":254237,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254242,"byte_end":254245,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254250,"byte_end":254297,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254302,"byte_end":254323,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254328,"byte_end":254381,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254386,"byte_end":254448,"line_start":123,"line_end":123,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254453,"byte_end":254526,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254531,"byte_end":254590,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254595,"byte_end":254682,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254687,"byte_end":254732,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254737,"byte_end":254746,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":254751,"byte_end":254758,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7531},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":256298,"byte_end":256302,"line_start":184,"line_end":184,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":7534}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7572},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257358,"byte_end":257364,"line_start":226,"line_end":226,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":7576}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7621},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259228,"byte_end":259236,"line_start":285,"line_end":285,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":7625}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7675},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":260853,"byte_end":260857,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7677},{"krate":0,"index":7678}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7714},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":262620,"byte_end":262629,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7718},{"krate":0,"index":7719},{"krate":0,"index":7720},{"krate":0,"index":7721},{"krate":0,"index":7722}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7788},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":266133,"byte_end":266137,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7790},{"krate":0,"index":7791}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7827},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":268173,"byte_end":268182,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7831},{"krate":0,"index":7832},{"krate":0,"index":7833},{"krate":0,"index":7834},{"krate":0,"index":7835}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7896},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":271662,"byte_end":271671,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":7899},{"krate":0,"index":7900},{"krate":0,"index":7901},{"krate":0,"index":7902}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":272955,"byte_end":272966,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":272655,"byte_end":272709,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":272714,"byte_end":272808,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":272813,"byte_end":272876,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":272881,"byte_end":272943,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274250,"byte_end":274261,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273103,"byte_end":273168,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273173,"byte_end":273230,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273235,"byte_end":273238,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273243,"byte_end":273308,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273313,"byte_end":273373,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273378,"byte_end":273381,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273386,"byte_end":273454,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273459,"byte_end":273502,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273507,"byte_end":273510,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273515,"byte_end":273529,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273534,"byte_end":273537,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273542,"byte_end":273549,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273554,"byte_end":273595,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273600,"byte_end":273624,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273629,"byte_end":273672,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273677,"byte_end":273705,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273710,"byte_end":273713,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273718,"byte_end":273756,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273761,"byte_end":273764,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273769,"byte_end":273787,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273792,"byte_end":273834,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273839,"byte_end":273854,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273859,"byte_end":273878,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273883,"byte_end":273908,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273913,"byte_end":273929,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273934,"byte_end":273967,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273972,"byte_end":273981,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273986,"byte_end":273993,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":273998,"byte_end":274001,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274006,"byte_end":274055,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274060,"byte_end":274114,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274119,"byte_end":274122,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274127,"byte_end":274174,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274179,"byte_end":274212,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274217,"byte_end":274226,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274231,"byte_end":274238,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274437,"byte_end":274447,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274340,"byte_end":274401,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274406,"byte_end":274425,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7953},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":276379,"byte_end":276383,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":7957},{"krate":0,"index":7958},{"krate":0,"index":7959}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8021},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":278923,"byte_end":278926,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8026},{"krate":0,"index":8027}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279444,"byte_end":279451,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279336,"byte_end":279410,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279415,"byte_end":279432,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279807,"byte_end":279814,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279545,"byte_end":279613,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279618,"byte_end":279649,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279654,"byte_end":279657,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279662,"byte_end":279735,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279740,"byte_end":279795,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280189,"byte_end":280200,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279920,"byte_end":279995,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280000,"byte_end":280031,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280036,"byte_end":280039,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280044,"byte_end":280117,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280122,"byte_end":280177,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280606,"byte_end":280616,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280370,"byte_end":280433,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280438,"byte_end":280441,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280446,"byte_end":280518,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280523,"byte_end":280594,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8076},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":283445,"byte_end":283451,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8078},{"krate":0,"index":8079},{"krate":0,"index":8080}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8124},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":286554,"byte_end":286565,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8126},{"krate":0,"index":8127},{"krate":0,"index":8128}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8167},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":290111,"byte_end":290115,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8172},{"krate":0,"index":8173},{"krate":0,"index":8174}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11767},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10639141,"byte_end":10639156,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11769},{"krate":0,"index":11770},{"krate":0,"index":11771}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11726},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10642467,"byte_end":10642475,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":11728},{"krate":0,"index":11729},{"krate":0,"index":11730}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11665},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10645470,"byte_end":10645487,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11669},{"krate":0,"index":11670},{"krate":0,"index":11671},{"krate":0,"index":11672}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8343},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":293463,"byte_end":293474,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8345},{"krate":0,"index":8346}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2056},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173889,"byte_end":173898,"line_start":212,"line_end":212,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2090},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2106},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2135}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173778,"byte_end":173852,"line_start":210,"line_end":210,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173853,"byte_end":173878,"line_start":211,"line_end":211,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174808,"byte_end":174812,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173913,"byte_end":173979,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173984,"byte_end":173987,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173992,"byte_end":174060,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174065,"byte_end":174140,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174145,"byte_end":174220,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174225,"byte_end":174279,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174284,"byte_end":174359,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174364,"byte_end":174374,"line_start":220,"line_end":220,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174379,"byte_end":174382,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174387,"byte_end":174401,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174406,"byte_end":174409,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174414,"byte_end":174421,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174426,"byte_end":174467,"line_start":225,"line_end":225,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174472,"byte_end":174515,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174520,"byte_end":174523,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174528,"byte_end":174569,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174574,"byte_end":174577,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174582,"byte_end":174627,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174632,"byte_end":174677,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174682,"byte_end":174727,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174732,"byte_end":174774,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174779,"byte_end":174788,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174793,"byte_end":174800,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176051,"byte_end":176062,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":174954,"byte_end":175026,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175031,"byte_end":175092,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175097,"byte_end":175100,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175105,"byte_end":175180,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175185,"byte_end":175239,"line_start":247,"line_end":247,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175244,"byte_end":175247,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175252,"byte_end":175325,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175330,"byte_end":175392,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175397,"byte_end":175472,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175477,"byte_end":175531,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175536,"byte_end":175611,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175616,"byte_end":175626,"line_start":254,"line_end":254,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175631,"byte_end":175634,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175639,"byte_end":175653,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175658,"byte_end":175661,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175666,"byte_end":175673,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175678,"byte_end":175719,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175724,"byte_end":175767,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175772,"byte_end":175775,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175780,"byte_end":175817,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175822,"byte_end":175825,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175830,"byte_end":175882,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175887,"byte_end":175917,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175922,"byte_end":175925,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175930,"byte_end":175982,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":175987,"byte_end":176017,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176022,"byte_end":176031,"line_start":269,"line_end":269,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176036,"byte_end":176043,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177063,"byte_end":177066,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176227,"byte_end":176302,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176307,"byte_end":176330,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176335,"byte_end":176338,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176343,"byte_end":176415,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176420,"byte_end":176484,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176489,"byte_end":176526,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176531,"byte_end":176534,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176539,"byte_end":176615,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176620,"byte_end":176691,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176696,"byte_end":176717,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176722,"byte_end":176725,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176730,"byte_end":176744,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176749,"byte_end":176752,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176757,"byte_end":176764,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176769,"byte_end":176810,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176815,"byte_end":176858,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176863,"byte_end":176866,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176871,"byte_end":176908,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176913,"byte_end":176952,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176957,"byte_end":176960,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":176965,"byte_end":177029,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177034,"byte_end":177043,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177048,"byte_end":177055,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178626,"byte_end":178635,"line_start":347,"line_end":347,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177233,"byte_end":177304,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177309,"byte_end":177328,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177333,"byte_end":177336,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177341,"byte_end":177406,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177411,"byte_end":177480,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177485,"byte_end":177496,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177501,"byte_end":177504,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177509,"byte_end":177584,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177589,"byte_end":177671,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177676,"byte_end":177694,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177699,"byte_end":177702,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177707,"byte_end":177730,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177735,"byte_end":177738,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177743,"byte_end":177818,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177823,"byte_end":177910,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177915,"byte_end":177971,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177976,"byte_end":177979,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":177984,"byte_end":177996,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178001,"byte_end":178004,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178009,"byte_end":178078,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178083,"byte_end":178108,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178113,"byte_end":178116,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178121,"byte_end":178135,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178140,"byte_end":178143,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178148,"byte_end":178155,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178160,"byte_end":178201,"line_start":334,"line_end":334,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178206,"byte_end":178249,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178254,"byte_end":178257,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178262,"byte_end":178313,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178318,"byte_end":178321,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178326,"byte_end":178366,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178371,"byte_end":178374,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178379,"byte_end":178431,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178436,"byte_end":178488,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178493,"byte_end":178545,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178550,"byte_end":178592,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178597,"byte_end":178606,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178611,"byte_end":178618,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179864,"byte_end":179870,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178779,"byte_end":178851,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178856,"byte_end":178883,"line_start":355,"line_end":355,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178888,"byte_end":178891,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178896,"byte_end":178971,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":178976,"byte_end":179047,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179052,"byte_end":179124,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179129,"byte_end":179203,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179208,"byte_end":179266,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179271,"byte_end":179274,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179279,"byte_end":179355,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179360,"byte_end":179434,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179439,"byte_end":179460,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179465,"byte_end":179468,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179473,"byte_end":179487,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179492,"byte_end":179495,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179500,"byte_end":179507,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179512,"byte_end":179553,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179558,"byte_end":179582,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179587,"byte_end":179630,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179635,"byte_end":179638,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179643,"byte_end":179681,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179686,"byte_end":179747,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179752,"byte_end":179755,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179760,"byte_end":179830,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179835,"byte_end":179844,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":179849,"byte_end":179856,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181195,"byte_end":181205,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180098,"byte_end":180173,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180178,"byte_end":180254,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180259,"byte_end":180262,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180267,"byte_end":180342,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180347,"byte_end":180422,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180427,"byte_end":180503,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180508,"byte_end":180573,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180578,"byte_end":180581,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180586,"byte_end":180662,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180667,"byte_end":180741,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180746,"byte_end":180771,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180776,"byte_end":180779,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180784,"byte_end":180798,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180803,"byte_end":180810,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180815,"byte_end":180856,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180861,"byte_end":180904,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180909,"byte_end":180912,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180917,"byte_end":180955,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":180960,"byte_end":181010,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181015,"byte_end":181066,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181071,"byte_end":181078,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181083,"byte_end":181086,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181091,"byte_end":181161,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181166,"byte_end":181175,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181180,"byte_end":181187,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182234,"byte_end":182238,"line_start":445,"line_end":445,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181437,"byte_end":181510,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181515,"byte_end":181543,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181548,"byte_end":181551,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181556,"byte_end":181630,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181635,"byte_end":181702,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181707,"byte_end":181752,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181757,"byte_end":181760,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181765,"byte_end":181841,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181846,"byte_end":181872,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181877,"byte_end":181880,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181885,"byte_end":181899,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181904,"byte_end":181907,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181912,"byte_end":181919,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181924,"byte_end":181965,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":181970,"byte_end":182013,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182018,"byte_end":182021,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182026,"byte_end":182063,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182068,"byte_end":182123,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182128,"byte_end":182131,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182136,"byte_end":182200,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182205,"byte_end":182214,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182219,"byte_end":182226,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183172,"byte_end":183179,"line_start":479,"line_end":479,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182447,"byte_end":182501,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182506,"byte_end":182561,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182566,"byte_end":182569,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182574,"byte_end":182642,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182647,"byte_end":182650,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182655,"byte_end":182669,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182674,"byte_end":182677,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182682,"byte_end":182689,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182694,"byte_end":182735,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182740,"byte_end":182771,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182776,"byte_end":182811,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182816,"byte_end":182836,"line_start":465,"line_end":465,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182841,"byte_end":182844,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182849,"byte_end":182886,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182891,"byte_end":182894,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182899,"byte_end":182926,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182931,"byte_end":182955,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":182960,"byte_end":183002,"line_start":471,"line_end":471,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183007,"byte_end":183016,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183021,"byte_end":183028,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183033,"byte_end":183036,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183041,"byte_end":183089,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183094,"byte_end":183138,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183143,"byte_end":183152,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183157,"byte_end":183164,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184298,"byte_end":184303,"line_start":516,"line_end":516,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183337,"byte_end":183388,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183393,"byte_end":183428,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183433,"byte_end":183436,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183441,"byte_end":183495,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183500,"byte_end":183557,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183562,"byte_end":183598,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183603,"byte_end":183606,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183611,"byte_end":183679,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183684,"byte_end":183687,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183692,"byte_end":183706,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183711,"byte_end":183714,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183719,"byte_end":183726,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183731,"byte_end":183772,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183777,"byte_end":183808,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183813,"byte_end":183848,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183853,"byte_end":183873,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183878,"byte_end":183881,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183886,"byte_end":183923,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183928,"byte_end":183931,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183936,"byte_end":183963,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":183968,"byte_end":184011,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184016,"byte_end":184059,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184064,"byte_end":184107,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184112,"byte_end":184119,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184124,"byte_end":184127,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184132,"byte_end":184186,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184191,"byte_end":184225,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184230,"byte_end":184264,"line_start":513,"line_end":513,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184269,"byte_end":184278,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184283,"byte_end":184290,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185599,"byte_end":185605,"line_start":557,"line_end":557,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184564,"byte_end":184626,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184631,"byte_end":184695,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184700,"byte_end":184703,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184708,"byte_end":184772,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184777,"byte_end":184842,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184847,"byte_end":184893,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184898,"byte_end":184901,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184906,"byte_end":184955,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":184960,"byte_end":185000,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185005,"byte_end":185008,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185013,"byte_end":185027,"line_start":535,"line_end":535,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185032,"byte_end":185035,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185040,"byte_end":185047,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185052,"byte_end":185093,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185098,"byte_end":185129,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185134,"byte_end":185169,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185174,"byte_end":185194,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185199,"byte_end":185202,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185207,"byte_end":185244,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185249,"byte_end":185252,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185257,"byte_end":185284,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185289,"byte_end":185320,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185325,"byte_end":185351,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185356,"byte_end":185422,"line_start":548,"line_end":548,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185427,"byte_end":185436,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185441,"byte_end":185448,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185453,"byte_end":185456,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185461,"byte_end":185496,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185501,"byte_end":185504,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185509,"byte_end":185565,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185570,"byte_end":185579,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185584,"byte_end":185591,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186669,"byte_end":186674,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185835,"byte_end":185866,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185871,"byte_end":185874,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185879,"byte_end":185946,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":185951,"byte_end":186023,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186028,"byte_end":186085,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186090,"byte_end":186093,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186098,"byte_end":186112,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186117,"byte_end":186120,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186125,"byte_end":186132,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186137,"byte_end":186178,"line_start":574,"line_end":574,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186183,"byte_end":186226,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186231,"byte_end":186253,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186258,"byte_end":186305,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186310,"byte_end":186313,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186318,"byte_end":186359,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186364,"byte_end":186405,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186410,"byte_end":186451,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186456,"byte_end":186497,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186502,"byte_end":186543,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186548,"byte_end":186589,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186594,"byte_end":186635,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186640,"byte_end":186649,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186654,"byte_end":186661,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187624,"byte_end":187628,"line_start":615,"line_end":615,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186809,"byte_end":186876,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186881,"byte_end":186933,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186938,"byte_end":186941,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":186946,"byte_end":187016,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187021,"byte_end":187097,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187102,"byte_end":187178,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187183,"byte_end":187253,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187258,"byte_end":187284,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187289,"byte_end":187292,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187297,"byte_end":187311,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187316,"byte_end":187319,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187324,"byte_end":187331,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187336,"byte_end":187377,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187382,"byte_end":187425,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187430,"byte_end":187433,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187438,"byte_end":187481,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187486,"byte_end":187555,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187560,"byte_end":187590,"line_start":612,"line_end":612,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187595,"byte_end":187604,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187609,"byte_end":187616,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188822,"byte_end":188829,"line_start":655,"line_end":655,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187863,"byte_end":187928,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187933,"byte_end":187936,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187941,"byte_end":187955,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187960,"byte_end":187963,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187968,"byte_end":187975,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":187980,"byte_end":188021,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188026,"byte_end":188057,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188062,"byte_end":188097,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188102,"byte_end":188122,"line_start":632,"line_end":632,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188127,"byte_end":188130,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188135,"byte_end":188174,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188179,"byte_end":188218,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188223,"byte_end":188262,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188267,"byte_end":188270,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188275,"byte_end":188302,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188307,"byte_end":188346,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188351,"byte_end":188390,"line_start":640,"line_end":640,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188395,"byte_end":188402,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188407,"byte_end":188434,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188439,"byte_end":188478,"line_start":643,"line_end":643,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188483,"byte_end":188522,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188527,"byte_end":188534,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188539,"byte_end":188566,"line_start":646,"line_end":646,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188571,"byte_end":188612,"line_start":647,"line_end":647,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188617,"byte_end":188658,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188663,"byte_end":188670,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188675,"byte_end":188678,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188683,"byte_end":188742,"line_start":651,"line_end":651,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188747,"byte_end":188788,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188793,"byte_end":188802,"line_start":653,"line_end":653,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":188807,"byte_end":188814,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190091,"byte_end":190099,"line_start":688,"line_end":688,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189006,"byte_end":189078,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189083,"byte_end":189086,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189091,"byte_end":189168,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189173,"byte_end":189248,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189253,"byte_end":189329,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189334,"byte_end":189337,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189342,"byte_end":189424,"line_start":669,"line_end":669,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189429,"byte_end":189512,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189517,"byte_end":189520,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189525,"byte_end":189601,"line_start":672,"line_end":672,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189606,"byte_end":189682,"line_start":673,"line_end":673,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189687,"byte_end":189708,"line_start":674,"line_end":674,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189713,"byte_end":189716,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189721,"byte_end":189735,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189740,"byte_end":189743,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189748,"byte_end":189755,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189760,"byte_end":189801,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189806,"byte_end":189849,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189854,"byte_end":189857,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189862,"byte_end":189899,"line_start":682,"line_end":682,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189904,"byte_end":189971,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189976,"byte_end":189979,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":189984,"byte_end":190057,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190062,"byte_end":190071,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190076,"byte_end":190083,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191111,"byte_end":191115,"line_start":721,"line_end":721,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190302,"byte_end":190373,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190378,"byte_end":190408,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190413,"byte_end":190416,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190421,"byte_end":190496,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190501,"byte_end":190572,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190577,"byte_end":190617,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190622,"byte_end":190625,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190630,"byte_end":190644,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190649,"byte_end":190652,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190657,"byte_end":190664,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190669,"byte_end":190710,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190715,"byte_end":190739,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190744,"byte_end":190787,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190792,"byte_end":190795,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190800,"byte_end":190838,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190843,"byte_end":190846,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190851,"byte_end":190895,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190900,"byte_end":190920,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190925,"byte_end":190988,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":190993,"byte_end":191000,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191005,"byte_end":191008,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191013,"byte_end":191077,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191082,"byte_end":191091,"line_start":719,"line_end":719,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191096,"byte_end":191103,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192162,"byte_end":192172,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191384,"byte_end":191458,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191463,"byte_end":191486,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191491,"byte_end":191494,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191499,"byte_end":191572,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191577,"byte_end":191649,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191654,"byte_end":191731,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191736,"byte_end":191747,"line_start":736,"line_end":736,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191752,"byte_end":191755,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191760,"byte_end":191774,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191779,"byte_end":191782,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191787,"byte_end":191794,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191799,"byte_end":191840,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191845,"byte_end":191869,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191874,"byte_end":191917,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191922,"byte_end":191925,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191930,"byte_end":191968,"line_start":745,"line_end":745,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191973,"byte_end":191976,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":191981,"byte_end":192044,"line_start":747,"line_end":747,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192049,"byte_end":192052,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192057,"byte_end":192128,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192133,"byte_end":192142,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192147,"byte_end":192154,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193161,"byte_end":193171,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192406,"byte_end":192482,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192487,"byte_end":192510,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192515,"byte_end":192518,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192523,"byte_end":192598,"line_start":764,"line_end":764,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192603,"byte_end":192675,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192680,"byte_end":192747,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192752,"byte_end":192755,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192760,"byte_end":192774,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192779,"byte_end":192782,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192787,"byte_end":192794,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192799,"byte_end":192840,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192845,"byte_end":192869,"line_start":772,"line_end":772,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192874,"byte_end":192917,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192922,"byte_end":192925,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192930,"byte_end":192968,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192973,"byte_end":192976,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":192981,"byte_end":193044,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193049,"byte_end":193052,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193057,"byte_end":193127,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193132,"byte_end":193141,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193146,"byte_end":193153,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194687,"byte_end":194697,"line_start":827,"line_end":827,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193405,"byte_end":193475,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193480,"byte_end":193483,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193488,"byte_end":193559,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193564,"byte_end":193636,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193641,"byte_end":193711,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193716,"byte_end":193719,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193724,"byte_end":193795,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193800,"byte_end":193886,"line_start":798,"line_end":798,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193891,"byte_end":193958,"line_start":799,"line_end":799,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":193963,"byte_end":194027,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194032,"byte_end":194035,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194040,"byte_end":194054,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194059,"byte_end":194062,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194067,"byte_end":194074,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194079,"byte_end":194120,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194125,"byte_end":194149,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194154,"byte_end":194197,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194202,"byte_end":194230,"line_start":808,"line_end":808,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194235,"byte_end":194238,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194243,"byte_end":194281,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194286,"byte_end":194289,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194294,"byte_end":194312,"line_start":812,"line_end":812,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194317,"byte_end":194359,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194364,"byte_end":194379,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194384,"byte_end":194403,"line_start":815,"line_end":815,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194408,"byte_end":194433,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194438,"byte_end":194454,"line_start":817,"line_end":817,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194459,"byte_end":194486,"line_start":818,"line_end":818,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194491,"byte_end":194500,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194505,"byte_end":194512,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194517,"byte_end":194520,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194525,"byte_end":194570,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194575,"byte_end":194578,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194583,"byte_end":194653,"line_start":824,"line_end":824,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194658,"byte_end":194667,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194672,"byte_end":194679,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195936,"byte_end":195944,"line_start":868,"line_end":868,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194878,"byte_end":194949,"line_start":835,"line_end":835,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":194954,"byte_end":194997,"line_start":836,"line_end":836,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195002,"byte_end":195005,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195010,"byte_end":195085,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195090,"byte_end":195160,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195165,"byte_end":195203,"line_start":840,"line_end":840,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195208,"byte_end":195211,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195216,"byte_end":195291,"line_start":842,"line_end":842,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195296,"byte_end":195339,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195344,"byte_end":195347,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195352,"byte_end":195425,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195430,"byte_end":195473,"line_start":846,"line_end":846,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195478,"byte_end":195481,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195486,"byte_end":195500,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195505,"byte_end":195508,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195513,"byte_end":195520,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195525,"byte_end":195566,"line_start":851,"line_end":851,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195571,"byte_end":195595,"line_start":852,"line_end":852,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195600,"byte_end":195643,"line_start":853,"line_end":853,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195648,"byte_end":195651,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195656,"byte_end":195674,"line_start":855,"line_end":855,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195679,"byte_end":195682,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195687,"byte_end":195692,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195697,"byte_end":195758,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195763,"byte_end":195785,"line_start":859,"line_end":859,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195790,"byte_end":195819,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195824,"byte_end":195835,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195840,"byte_end":195858,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195863,"byte_end":195868,"line_start":863,"line_end":863,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195873,"byte_end":195876,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195881,"byte_end":195902,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195907,"byte_end":195916,"line_start":866,"line_end":866,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":195921,"byte_end":195928,"line_start":867,"line_end":867,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198106,"byte_end":198125,"line_start":924,"line_end":924,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196163,"byte_end":196234,"line_start":877,"line_end":877,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196239,"byte_end":196313,"line_start":878,"line_end":878,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196318,"byte_end":196332,"line_start":879,"line_end":879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196337,"byte_end":196340,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196345,"byte_end":196408,"line_start":881,"line_end":881,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196413,"byte_end":196484,"line_start":882,"line_end":882,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196489,"byte_end":196541,"line_start":883,"line_end":883,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196546,"byte_end":196549,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196554,"byte_end":196629,"line_start":885,"line_end":885,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196634,"byte_end":196704,"line_start":886,"line_end":886,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196709,"byte_end":196773,"line_start":887,"line_end":887,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196778,"byte_end":196781,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196786,"byte_end":196857,"line_start":889,"line_end":889,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196862,"byte_end":196932,"line_start":890,"line_end":890,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":196937,"byte_end":196998,"line_start":891,"line_end":891,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197003,"byte_end":197070,"line_start":892,"line_end":892,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197075,"byte_end":197144,"line_start":893,"line_end":893,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197149,"byte_end":197221,"line_start":894,"line_end":894,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197226,"byte_end":197229,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197234,"byte_end":197309,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197314,"byte_end":197371,"line_start":897,"line_end":897,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197376,"byte_end":197379,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197384,"byte_end":197398,"line_start":899,"line_end":899,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197403,"byte_end":197406,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197411,"byte_end":197418,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197423,"byte_end":197464,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197469,"byte_end":197503,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197508,"byte_end":197551,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197556,"byte_end":197559,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197564,"byte_end":197604,"line_start":906,"line_end":906,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197609,"byte_end":197649,"line_start":907,"line_end":907,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197654,"byte_end":197694,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197699,"byte_end":197702,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197707,"byte_end":197775,"line_start":910,"line_end":910,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197780,"byte_end":197802,"line_start":911,"line_end":911,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197807,"byte_end":197832,"line_start":912,"line_end":912,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197837,"byte_end":197867,"line_start":913,"line_end":913,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197872,"byte_end":197881,"line_start":914,"line_end":914,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197886,"byte_end":197892,"line_start":915,"line_end":915,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197897,"byte_end":197923,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197928,"byte_end":197954,"line_start":917,"line_end":917,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197959,"byte_end":197985,"line_start":918,"line_end":918,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":197990,"byte_end":198004,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198009,"byte_end":198017,"line_start":920,"line_end":920,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198022,"byte_end":198029,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198034,"byte_end":198068,"line_start":922,"line_end":922,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198073,"byte_end":198098,"line_start":923,"line_end":923,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198950,"byte_end":198954,"line_start":953,"line_end":953,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198442,"byte_end":198513,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198518,"byte_end":198521,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198526,"byte_end":198599,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198604,"byte_end":198639,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198644,"byte_end":198647,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198652,"byte_end":198666,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198671,"byte_end":198674,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198679,"byte_end":198686,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198691,"byte_end":198732,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198737,"byte_end":198780,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198785,"byte_end":198788,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198793,"byte_end":198839,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198844,"byte_end":198847,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198852,"byte_end":198916,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198921,"byte_end":198930,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":198935,"byte_end":198942,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199619,"byte_end":199623,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199092,"byte_end":199164,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199169,"byte_end":199172,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199177,"byte_end":199250,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199255,"byte_end":199301,"line_start":963,"line_end":963,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199306,"byte_end":199309,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199314,"byte_end":199328,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199333,"byte_end":199336,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199341,"byte_end":199348,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199353,"byte_end":199394,"line_start":968,"line_end":968,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199399,"byte_end":199442,"line_start":969,"line_end":969,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199447,"byte_end":199450,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199455,"byte_end":199501,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199506,"byte_end":199509,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199514,"byte_end":199585,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199590,"byte_end":199599,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199604,"byte_end":199611,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201244,"byte_end":201248,"line_start":1022,"line_end":1022,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199761,"byte_end":199832,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199837,"byte_end":199910,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199915,"byte_end":199953,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199958,"byte_end":199961,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":199966,"byte_end":200020,"line_start":987,"line_end":987,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200025,"byte_end":200097,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200102,"byte_end":200178,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200183,"byte_end":200251,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200256,"byte_end":200332,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200337,"byte_end":200359,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200364,"byte_end":200367,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200372,"byte_end":200439,"line_start":994,"line_end":994,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200444,"byte_end":200512,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200517,"byte_end":200530,"line_start":996,"line_end":996,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200535,"byte_end":200538,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200543,"byte_end":200557,"line_start":998,"line_end":998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200562,"byte_end":200565,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200570,"byte_end":200577,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200582,"byte_end":200625,"line_start":1001,"line_end":1001,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200630,"byte_end":200673,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200678,"byte_end":200706,"line_start":1003,"line_end":1003,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200711,"byte_end":200714,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200719,"byte_end":200737,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200742,"byte_end":200780,"line_start":1006,"line_end":1006,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200785,"byte_end":200800,"line_start":1007,"line_end":1007,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200805,"byte_end":200822,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200827,"byte_end":200869,"line_start":1009,"line_end":1009,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200874,"byte_end":200909,"line_start":1010,"line_end":1010,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200914,"byte_end":200958,"line_start":1011,"line_end":1011,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200963,"byte_end":200972,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200977,"byte_end":200991,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":200996,"byte_end":200999,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201004,"byte_end":201047,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201052,"byte_end":201089,"line_start":1016,"line_end":1016,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201094,"byte_end":201131,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201136,"byte_end":201170,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201175,"byte_end":201209,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201214,"byte_end":201224,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201229,"byte_end":201236,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202177,"byte_end":202183,"line_start":1055,"line_end":1055,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201373,"byte_end":201420,"line_start":1029,"line_end":1029,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201425,"byte_end":201428,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201433,"byte_end":201507,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201512,"byte_end":201549,"line_start":1032,"line_end":1032,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201554,"byte_end":201557,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201562,"byte_end":201576,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201581,"byte_end":201584,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201589,"byte_end":201596,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201601,"byte_end":201642,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201647,"byte_end":201690,"line_start":1038,"line_end":1038,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201695,"byte_end":201698,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201703,"byte_end":201743,"line_start":1040,"line_end":1040,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201748,"byte_end":201751,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201756,"byte_end":201785,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201790,"byte_end":201818,"line_start":1043,"line_end":1043,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201823,"byte_end":201880,"line_start":1044,"line_end":1044,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201885,"byte_end":201912,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201917,"byte_end":201940,"line_start":1046,"line_end":1046,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201945,"byte_end":201948,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201953,"byte_end":201988,"line_start":1048,"line_end":1048,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":201993,"byte_end":202021,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202026,"byte_end":202083,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202088,"byte_end":202115,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202120,"byte_end":202143,"line_start":1052,"line_end":1052,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202148,"byte_end":202157,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202162,"byte_end":202169,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203942,"byte_end":203954,"line_start":1100,"line_end":1100,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202234,"byte_end":202288,"line_start":1059,"line_end":1059,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202293,"byte_end":202296,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202301,"byte_end":202376,"line_start":1061,"line_end":1061,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202381,"byte_end":202384,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202389,"byte_end":202464,"line_start":1063,"line_end":1063,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202469,"byte_end":202543,"line_start":1064,"line_end":1064,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202548,"byte_end":202622,"line_start":1065,"line_end":1065,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202627,"byte_end":202676,"line_start":1066,"line_end":1066,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202681,"byte_end":202684,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202689,"byte_end":202764,"line_start":1068,"line_end":1068,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202769,"byte_end":202839,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202844,"byte_end":202911,"line_start":1070,"line_end":1070,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202916,"byte_end":202988,"line_start":1071,"line_end":1071,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":202993,"byte_end":203062,"line_start":1072,"line_end":1072,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203067,"byte_end":203082,"line_start":1073,"line_end":1073,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203087,"byte_end":203090,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203095,"byte_end":203159,"line_start":1075,"line_end":1075,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203164,"byte_end":203221,"line_start":1076,"line_end":1076,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203226,"byte_end":203229,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203234,"byte_end":203248,"line_start":1078,"line_end":1078,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203253,"byte_end":203256,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203261,"byte_end":203268,"line_start":1080,"line_end":1080,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203273,"byte_end":203314,"line_start":1081,"line_end":1081,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203319,"byte_end":203362,"line_start":1082,"line_end":1082,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203367,"byte_end":203370,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203375,"byte_end":203437,"line_start":1084,"line_end":1084,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203442,"byte_end":203472,"line_start":1085,"line_end":1085,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203477,"byte_end":203531,"line_start":1086,"line_end":1086,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203536,"byte_end":203566,"line_start":1087,"line_end":1087,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203571,"byte_end":203620,"line_start":1088,"line_end":1088,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203625,"byte_end":203628,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203633,"byte_end":203695,"line_start":1090,"line_end":1090,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203700,"byte_end":203722,"line_start":1091,"line_end":1091,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203727,"byte_end":203747,"line_start":1092,"line_end":1092,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203752,"byte_end":203794,"line_start":1093,"line_end":1093,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203799,"byte_end":203804,"line_start":1094,"line_end":1094,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203809,"byte_end":203842,"line_start":1095,"line_end":1095,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203847,"byte_end":203880,"line_start":1096,"line_end":1096,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203885,"byte_end":203894,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203899,"byte_end":203906,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":203911,"byte_end":203934,"line_start":1099,"line_end":1099,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204330,"byte_end":204335,"line_start":1112,"line_end":1112,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204101,"byte_end":204142,"line_start":1107,"line_end":1107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204147,"byte_end":204150,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204155,"byte_end":204230,"line_start":1109,"line_end":1109,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204235,"byte_end":204292,"line_start":1110,"line_end":1110,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204297,"byte_end":204322,"line_start":1111,"line_end":1111,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204791,"byte_end":204802,"line_start":1126,"line_end":1126,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204490,"byte_end":204531,"line_start":1119,"line_end":1119,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204536,"byte_end":204539,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204544,"byte_end":204603,"line_start":1121,"line_end":1121,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204608,"byte_end":204611,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204616,"byte_end":204691,"line_start":1123,"line_end":1123,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204696,"byte_end":204753,"line_start":1124,"line_end":1124,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204758,"byte_end":204783,"line_start":1125,"line_end":1125,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205695,"byte_end":205703,"line_start":1147,"line_end":1147,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":204955,"byte_end":205018,"line_start":1133,"line_end":1133,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205023,"byte_end":205026,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205031,"byte_end":205106,"line_start":1135,"line_end":1135,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205111,"byte_end":205187,"line_start":1136,"line_end":1136,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205192,"byte_end":205265,"line_start":1137,"line_end":1137,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205270,"byte_end":205343,"line_start":1138,"line_end":1138,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205348,"byte_end":205390,"line_start":1139,"line_end":1139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205395,"byte_end":205398,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205403,"byte_end":205468,"line_start":1141,"line_end":1141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205473,"byte_end":205476,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205481,"byte_end":205556,"line_start":1143,"line_end":1143,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205561,"byte_end":205618,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205623,"byte_end":205657,"line_start":1145,"line_end":1145,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205662,"byte_end":205687,"line_start":1146,"line_end":1146,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207383,"byte_end":207399,"line_start":1192,"line_end":1192,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205897,"byte_end":205972,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205977,"byte_end":205980,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":205985,"byte_end":206060,"line_start":1157,"line_end":1157,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206065,"byte_end":206139,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206144,"byte_end":206216,"line_start":1159,"line_end":1159,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206221,"byte_end":206295,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206300,"byte_end":206329,"line_start":1161,"line_end":1161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206334,"byte_end":206337,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206342,"byte_end":206407,"line_start":1163,"line_end":1163,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206412,"byte_end":206415,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206420,"byte_end":206495,"line_start":1165,"line_end":1165,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206500,"byte_end":206557,"line_start":1166,"line_end":1166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206562,"byte_end":206565,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206570,"byte_end":206584,"line_start":1168,"line_end":1168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206589,"byte_end":206592,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206597,"byte_end":206604,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206609,"byte_end":206650,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206655,"byte_end":206689,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206694,"byte_end":206737,"line_start":1173,"line_end":1173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206742,"byte_end":206745,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206750,"byte_end":206800,"line_start":1175,"line_end":1175,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206805,"byte_end":206855,"line_start":1176,"line_end":1176,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206860,"byte_end":206863,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206868,"byte_end":206935,"line_start":1178,"line_end":1178,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":206940,"byte_end":207002,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207007,"byte_end":207010,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207015,"byte_end":207040,"line_start":1181,"line_end":1181,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207045,"byte_end":207099,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207104,"byte_end":207107,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207112,"byte_end":207137,"line_start":1184,"line_end":1184,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207142,"byte_end":207196,"line_start":1185,"line_end":1185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207201,"byte_end":207204,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207209,"byte_end":207253,"line_start":1187,"line_end":1187,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207258,"byte_end":207294,"line_start":1188,"line_end":1188,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207299,"byte_end":207306,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207311,"byte_end":207345,"line_start":1190,"line_end":1190,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207350,"byte_end":207375,"line_start":1191,"line_end":1191,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208295,"byte_end":208298,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207607,"byte_end":207655,"line_start":1200,"line_end":1200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207660,"byte_end":207663,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207668,"byte_end":207741,"line_start":1202,"line_end":1202,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207746,"byte_end":207818,"line_start":1203,"line_end":1203,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207823,"byte_end":207836,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207841,"byte_end":207844,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207849,"byte_end":207863,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207868,"byte_end":207871,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207876,"byte_end":207883,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207888,"byte_end":207929,"line_start":1209,"line_end":1209,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207934,"byte_end":207977,"line_start":1210,"line_end":1210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207982,"byte_end":207985,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":207990,"byte_end":208028,"line_start":1212,"line_end":1212,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208033,"byte_end":208072,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208077,"byte_end":208080,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208085,"byte_end":208119,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208124,"byte_end":208165,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208170,"byte_end":208198,"line_start":1217,"line_end":1217,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208203,"byte_end":208253,"line_start":1218,"line_end":1218,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208258,"byte_end":208267,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208272,"byte_end":208279,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208284,"byte_end":208287,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209206,"byte_end":209211,"line_start":1253,"line_end":1253,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208479,"byte_end":208516,"line_start":1230,"line_end":1230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208521,"byte_end":208524,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208529,"byte_end":208600,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208605,"byte_end":208681,"line_start":1233,"line_end":1233,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208686,"byte_end":208689,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208694,"byte_end":208701,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208706,"byte_end":208747,"line_start":1236,"line_end":1236,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208752,"byte_end":208795,"line_start":1237,"line_end":1237,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208800,"byte_end":208803,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208808,"byte_end":208865,"line_start":1239,"line_end":1239,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208870,"byte_end":208926,"line_start":1240,"line_end":1240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208931,"byte_end":208934,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208939,"byte_end":208979,"line_start":1242,"line_end":1242,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208984,"byte_end":208987,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":208992,"byte_end":209040,"line_start":1244,"line_end":1244,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209045,"byte_end":209073,"line_start":1245,"line_end":1245,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209078,"byte_end":209093,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209098,"byte_end":209117,"line_start":1247,"line_end":1247,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209122,"byte_end":209140,"line_start":1248,"line_end":1248,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209145,"byte_end":209160,"line_start":1249,"line_end":1249,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209165,"byte_end":209172,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209177,"byte_end":209186,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209191,"byte_end":209198,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209549,"byte_end":209557,"line_start":1264,"line_end":1264,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209403,"byte_end":209458,"line_start":1261,"line_end":1261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209463,"byte_end":209466,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209471,"byte_end":209541,"line_start":1263,"line_end":1263,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210592,"byte_end":210598,"line_start":1290,"line_end":1290,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209690,"byte_end":209757,"line_start":1271,"line_end":1271,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209762,"byte_end":209765,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209770,"byte_end":209844,"line_start":1273,"line_end":1273,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209849,"byte_end":209921,"line_start":1274,"line_end":1274,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209926,"byte_end":209978,"line_start":1275,"line_end":1275,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209983,"byte_end":209986,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":209991,"byte_end":210064,"line_start":1277,"line_end":1277,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210069,"byte_end":210143,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210148,"byte_end":210223,"line_start":1279,"line_end":1279,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210228,"byte_end":210300,"line_start":1280,"line_end":1280,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210305,"byte_end":210317,"line_start":1281,"line_end":1281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210322,"byte_end":210325,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210330,"byte_end":210405,"line_start":1283,"line_end":1283,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210410,"byte_end":210467,"line_start":1284,"line_end":1284,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210472,"byte_end":210475,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210480,"byte_end":210492,"line_start":1286,"line_end":1286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210497,"byte_end":210500,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210505,"byte_end":210554,"line_start":1288,"line_end":1288,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210559,"byte_end":210584,"line_start":1289,"line_end":1289,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211695,"byte_end":211707,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210759,"byte_end":210832,"line_start":1297,"line_end":1297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210837,"byte_end":210840,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210845,"byte_end":210918,"line_start":1299,"line_end":1299,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210923,"byte_end":210993,"line_start":1300,"line_end":1300,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":210998,"byte_end":211073,"line_start":1301,"line_end":1301,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211078,"byte_end":211155,"line_start":1302,"line_end":1302,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211160,"byte_end":211188,"line_start":1303,"line_end":1303,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211193,"byte_end":211196,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211201,"byte_end":211274,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211279,"byte_end":211354,"line_start":1306,"line_end":1306,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211359,"byte_end":211420,"line_start":1307,"line_end":1307,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211425,"byte_end":211428,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211433,"byte_end":211508,"line_start":1309,"line_end":1309,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211513,"byte_end":211570,"line_start":1310,"line_end":1310,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211575,"byte_end":211578,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211583,"byte_end":211595,"line_start":1312,"line_end":1312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211600,"byte_end":211603,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211608,"byte_end":211657,"line_start":1314,"line_end":1314,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":211662,"byte_end":211687,"line_start":1315,"line_end":1315,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214504,"byte_end":214511,"line_start":1376,"line_end":1376,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214201,"byte_end":214274,"line_start":1371,"line_end":1371,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214279,"byte_end":214282,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214287,"byte_end":214356,"line_start":1373,"line_end":1373,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214361,"byte_end":214430,"line_start":1374,"line_end":1374,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214435,"byte_end":214496,"line_start":1375,"line_end":1375,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214967,"byte_end":214978,"line_start":1389,"line_end":1389,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214688,"byte_end":214763,"line_start":1384,"line_end":1384,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214768,"byte_end":214789,"line_start":1385,"line_end":1385,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214794,"byte_end":214797,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214802,"byte_end":214882,"line_start":1387,"line_end":1387,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":214887,"byte_end":214959,"line_start":1388,"line_end":1388,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215431,"byte_end":215443,"line_start":1402,"line_end":1402,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215152,"byte_end":215228,"line_start":1397,"line_end":1397,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215233,"byte_end":215254,"line_start":1398,"line_end":1398,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215259,"byte_end":215262,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215267,"byte_end":215346,"line_start":1400,"line_end":1400,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215351,"byte_end":215423,"line_start":1401,"line_end":1401,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215719,"byte_end":215734,"line_start":1412,"line_end":1412,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215618,"byte_end":215689,"line_start":1410,"line_end":1410,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215694,"byte_end":215711,"line_start":1411,"line_end":1411,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217835,"byte_end":217851,"line_start":1467,"line_end":1467,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215881,"byte_end":215956,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215961,"byte_end":215971,"line_start":1420,"line_end":1420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215976,"byte_end":215979,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":215984,"byte_end":216057,"line_start":1422,"line_end":1422,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216062,"byte_end":216130,"line_start":1423,"line_end":1423,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216135,"byte_end":216183,"line_start":1424,"line_end":1424,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216188,"byte_end":216263,"line_start":1425,"line_end":1425,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216268,"byte_end":216344,"line_start":1426,"line_end":1426,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216349,"byte_end":216375,"line_start":1427,"line_end":1427,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216380,"byte_end":216383,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216388,"byte_end":216461,"line_start":1429,"line_end":1429,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216466,"byte_end":216536,"line_start":1430,"line_end":1430,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216541,"byte_end":216581,"line_start":1431,"line_end":1431,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216586,"byte_end":216589,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216594,"byte_end":216648,"line_start":1433,"line_end":1433,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216653,"byte_end":216737,"line_start":1434,"line_end":1434,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216742,"byte_end":216745,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216750,"byte_end":216764,"line_start":1436,"line_end":1436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216769,"byte_end":216772,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216777,"byte_end":216784,"line_start":1438,"line_end":1438,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216789,"byte_end":216830,"line_start":1439,"line_end":1439,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216835,"byte_end":216869,"line_start":1440,"line_end":1440,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216874,"byte_end":216929,"line_start":1441,"line_end":1441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216934,"byte_end":216937,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216942,"byte_end":216977,"line_start":1443,"line_end":1443,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":216982,"byte_end":217032,"line_start":1444,"line_end":1444,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217037,"byte_end":217059,"line_start":1445,"line_end":1445,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217064,"byte_end":217074,"line_start":1446,"line_end":1446,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217079,"byte_end":217096,"line_start":1447,"line_end":1447,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217101,"byte_end":217127,"line_start":1448,"line_end":1448,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217132,"byte_end":217187,"line_start":1449,"line_end":1449,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217192,"byte_end":217221,"line_start":1450,"line_end":1450,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217226,"byte_end":217289,"line_start":1451,"line_end":1451,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217294,"byte_end":217340,"line_start":1452,"line_end":1452,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217345,"byte_end":217359,"line_start":1453,"line_end":1453,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217364,"byte_end":217433,"line_start":1454,"line_end":1454,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217438,"byte_end":217463,"line_start":1455,"line_end":1455,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217468,"byte_end":217521,"line_start":1456,"line_end":1456,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217526,"byte_end":217555,"line_start":1457,"line_end":1457,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217560,"byte_end":217573,"line_start":1458,"line_end":1458,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217578,"byte_end":217648,"line_start":1459,"line_end":1459,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217653,"byte_end":217712,"line_start":1460,"line_end":1460,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217717,"byte_end":217747,"line_start":1461,"line_end":1461,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217752,"byte_end":217761,"line_start":1462,"line_end":1462,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217766,"byte_end":217771,"line_start":1463,"line_end":1463,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217776,"byte_end":217801,"line_start":1464,"line_end":1464,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217806,"byte_end":217815,"line_start":1465,"line_end":1465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":217820,"byte_end":217827,"line_start":1466,"line_end":1466,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8382},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":331375,"byte_end":331382,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8386},{"krate":0,"index":8387},{"krate":0,"index":8388}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8446},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295584,"byte_end":295591,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8449}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8515},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":295839,"byte_end":295848,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":8518}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8584},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296149,"byte_end":296159,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":8587}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8655},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":334124,"byte_end":334134,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8657}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8693},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296585,"byte_end":296590,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":8696}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8762},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":296867,"byte_end":296873,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":8765}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8828},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":335482,"byte_end":335488,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":8832},{"krate":0,"index":8833},{"krate":0,"index":8834}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8889},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338324,"byte_end":338331,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":8892}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338157,"byte_end":338227,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338245,"byte_end":338312,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8897},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":339416,"byte_end":339426,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":8901},{"krate":0,"index":8902},{"krate":0,"index":8903}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8954},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":341312,"byte_end":341321,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":8958},{"krate":0,"index":8959},{"krate":0,"index":8960},{"krate":0,"index":8961}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9019},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":344456,"byte_end":344468,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9023},{"krate":0,"index":9024},{"krate":0,"index":9025}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9085},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":347473,"byte_end":347483,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9087},{"krate":0,"index":9088}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9131},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":349661,"byte_end":349671,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9134},{"krate":0,"index":9135}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9178},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":351020,"byte_end":351029,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9180},{"krate":0,"index":9181}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9213},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":352443,"byte_end":352450,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9218},{"krate":0,"index":9219},{"krate":0,"index":9220},{"krate":0,"index":9221}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2541},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356898,"byte_end":356908,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355041,"byte_end":355117,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355118,"byte_end":355121,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355122,"byte_end":355198,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355199,"byte_end":355269,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355270,"byte_end":355329,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355330,"byte_end":355333,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355334,"byte_end":355412,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355413,"byte_end":355490,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355491,"byte_end":355555,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355556,"byte_end":355559,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355560,"byte_end":355632,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355633,"byte_end":355711,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355712,"byte_end":355741,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355742,"byte_end":355745,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355746,"byte_end":355823,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355824,"byte_end":355888,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355889,"byte_end":355941,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355942,"byte_end":355945,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":355946,"byte_end":356023,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356024,"byte_end":356096,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356097,"byte_end":356166,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356167,"byte_end":356245,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356246,"byte_end":356249,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356250,"byte_end":356263,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356264,"byte_end":356267,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356268,"byte_end":356275,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356276,"byte_end":356309,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356310,"byte_end":356333,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356334,"byte_end":356375,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356376,"byte_end":356422,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356423,"byte_end":356426,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356427,"byte_end":356486,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356487,"byte_end":356509,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356510,"byte_end":356544,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356545,"byte_end":356554,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356555,"byte_end":356558,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356559,"byte_end":356582,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356583,"byte_end":356622,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356623,"byte_end":356659,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356660,"byte_end":356703,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356704,"byte_end":356720,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356721,"byte_end":356741,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356742,"byte_end":356751,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356752,"byte_end":356759,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356760,"byte_end":356763,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356764,"byte_end":356829,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356830,"byte_end":356872,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356873,"byte_end":356882,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":356883,"byte_end":356890,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9282},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":357271,"byte_end":357280,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9286},{"krate":0,"index":9287},{"krate":0,"index":9288}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9339},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":359188,"byte_end":359200,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9343},{"krate":0,"index":9344},{"krate":0,"index":9345},{"krate":0,"index":9346},{"krate":0,"index":9347}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9408},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":362744,"byte_end":362756,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9412},{"krate":0,"index":9413},{"krate":0,"index":9414},{"krate":0,"index":9415},{"krate":0,"index":9416}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11626},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10649139,"byte_end":10649157,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11628},{"krate":0,"index":11629},{"krate":0,"index":11630}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11582},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10651697,"byte_end":10651708,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":11584},{"krate":0,"index":11585},{"krate":0,"index":11586}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11516},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10654240,"byte_end":10654260,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11520},{"krate":0,"index":11521},{"krate":0,"index":11522},{"krate":0,"index":11523}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9576},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":366440,"byte_end":366453,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":9578},{"krate":0,"index":9579}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":366232,"byte_end":366316,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":366334,"byte_end":366382,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2669},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299759,"byte_end":299771,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2675},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299697,"byte_end":299748,"line_start":144,"line_end":144,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300313,"byte_end":300321,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299789,"byte_end":299863,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299868,"byte_end":299894,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299899,"byte_end":299902,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299907,"byte_end":299921,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299926,"byte_end":299929,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299934,"byte_end":299941,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299946,"byte_end":299987,"line_start":152,"line_end":152,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299992,"byte_end":300038,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300043,"byte_end":300046,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300051,"byte_end":300071,"line_start":155,"line_end":155,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300076,"byte_end":300121,"line_start":156,"line_end":156,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300126,"byte_end":300157,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300162,"byte_end":300165,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300170,"byte_end":300224,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300229,"byte_end":300280,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300285,"byte_end":300293,"line_start":161,"line_end":161,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300298,"byte_end":300305,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301017,"byte_end":301023,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300497,"byte_end":300570,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300575,"byte_end":300606,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300611,"byte_end":300614,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300619,"byte_end":300633,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300638,"byte_end":300641,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300646,"byte_end":300653,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300658,"byte_end":300699,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300704,"byte_end":300750,"line_start":178,"line_end":178,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300755,"byte_end":300758,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300763,"byte_end":300783,"line_start":180,"line_end":180,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300788,"byte_end":300829,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300834,"byte_end":300865,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300870,"byte_end":300873,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300878,"byte_end":300931,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300936,"byte_end":300984,"line_start":185,"line_end":185,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":300989,"byte_end":300997,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301002,"byte_end":301009,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301732,"byte_end":301739,"line_start":213,"line_end":213,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301213,"byte_end":301284,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301289,"byte_end":301320,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301325,"byte_end":301328,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301333,"byte_end":301347,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301352,"byte_end":301355,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301360,"byte_end":301367,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301372,"byte_end":301413,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301418,"byte_end":301464,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301469,"byte_end":301472,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301477,"byte_end":301497,"line_start":205,"line_end":205,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301502,"byte_end":301543,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301548,"byte_end":301580,"line_start":207,"line_end":207,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301585,"byte_end":301588,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301593,"byte_end":301646,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301651,"byte_end":301699,"line_start":210,"line_end":210,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301704,"byte_end":301712,"line_start":211,"line_end":211,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301717,"byte_end":301724,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303344,"byte_end":303352,"line_start":259,"line_end":259,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":301931,"byte_end":302007,"line_start":221,"line_end":221,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302012,"byte_end":302052,"line_start":222,"line_end":222,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302057,"byte_end":302060,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302065,"byte_end":302141,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302146,"byte_end":302222,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302227,"byte_end":302300,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302305,"byte_end":302347,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302352,"byte_end":302355,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302360,"byte_end":302433,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302438,"byte_end":302469,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302474,"byte_end":302477,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302482,"byte_end":302556,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302561,"byte_end":302635,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302640,"byte_end":302656,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302661,"byte_end":302664,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302669,"byte_end":302740,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302745,"byte_end":302771,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302776,"byte_end":302779,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302784,"byte_end":302856,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302861,"byte_end":302910,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302915,"byte_end":302918,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302923,"byte_end":302937,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302942,"byte_end":302945,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302950,"byte_end":302957,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302962,"byte_end":302993,"line_start":245,"line_end":245,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":302998,"byte_end":303022,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303027,"byte_end":303065,"line_start":247,"line_end":247,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303070,"byte_end":303073,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303078,"byte_end":303134,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303139,"byte_end":303142,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303147,"byte_end":303182,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303187,"byte_end":303226,"line_start":252,"line_end":252,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303231,"byte_end":303255,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303260,"byte_end":303276,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303281,"byte_end":303297,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303302,"byte_end":303312,"line_start":256,"line_end":256,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303317,"byte_end":303324,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303329,"byte_end":303336,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304504,"byte_end":304511,"line_start":285,"line_end":285,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303605,"byte_end":303670,"line_start":268,"line_end":268,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303675,"byte_end":303724,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303729,"byte_end":303732,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303737,"byte_end":303816,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303821,"byte_end":303895,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303900,"byte_end":303976,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":303981,"byte_end":304026,"line_start":274,"line_end":274,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304031,"byte_end":304034,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304039,"byte_end":304114,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304119,"byte_end":304159,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304164,"byte_end":304167,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304172,"byte_end":304281,"line_start":279,"line_end":279,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304286,"byte_end":304360,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304365,"byte_end":304381,"line_start":281,"line_end":281,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304386,"byte_end":304389,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304394,"byte_end":304465,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304470,"byte_end":304496,"line_start":284,"line_end":284,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305063,"byte_end":305073,"line_start":300,"line_end":300,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304760,"byte_end":304834,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304839,"byte_end":304849,"line_start":295,"line_end":295,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304854,"byte_end":304857,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304862,"byte_end":304932,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":304937,"byte_end":305013,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305018,"byte_end":305055,"line_start":299,"line_end":299,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305562,"byte_end":305573,"line_start":313,"line_end":313,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305271,"byte_end":305350,"line_start":308,"line_end":308,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305355,"byte_end":305358,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305363,"byte_end":305433,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305438,"byte_end":305512,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305517,"byte_end":305554,"line_start":312,"line_end":312,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306494,"byte_end":306505,"line_start":342,"line_end":342,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305776,"byte_end":305829,"line_start":321,"line_end":321,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305834,"byte_end":305878,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305883,"byte_end":305886,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305891,"byte_end":305940,"line_start":324,"line_end":324,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":305945,"byte_end":306018,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306023,"byte_end":306043,"line_start":326,"line_end":326,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306048,"byte_end":306051,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306056,"byte_end":306070,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306075,"byte_end":306078,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306083,"byte_end":306090,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306095,"byte_end":306154,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306159,"byte_end":306162,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306167,"byte_end":306186,"line_start":333,"line_end":333,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306191,"byte_end":306209,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306214,"byte_end":306286,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306291,"byte_end":306321,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306326,"byte_end":306333,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306338,"byte_end":306412,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306417,"byte_end":306420,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306425,"byte_end":306474,"line_start":340,"line_end":340,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306479,"byte_end":306486,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307400,"byte_end":307408,"line_start":369,"line_end":369,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306661,"byte_end":306735,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306740,"byte_end":306814,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306819,"byte_end":306831,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306836,"byte_end":306839,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306844,"byte_end":306911,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306916,"byte_end":306988,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":306993,"byte_end":307032,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307037,"byte_end":307040,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307045,"byte_end":307059,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307064,"byte_end":307067,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307072,"byte_end":307079,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307084,"byte_end":307125,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307130,"byte_end":307176,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307181,"byte_end":307184,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307189,"byte_end":307246,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307251,"byte_end":307254,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307259,"byte_end":307313,"line_start":365,"line_end":365,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307318,"byte_end":307367,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307372,"byte_end":307380,"line_start":367,"line_end":367,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307385,"byte_end":307392,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308760,"byte_end":308772,"line_start":409,"line_end":409,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307575,"byte_end":307644,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307649,"byte_end":307705,"line_start":377,"line_end":377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307710,"byte_end":307713,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307718,"byte_end":307793,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307798,"byte_end":307868,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307873,"byte_end":307911,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307916,"byte_end":307919,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":307924,"byte_end":308002,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308007,"byte_end":308067,"line_start":384,"line_end":384,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308072,"byte_end":308129,"line_start":385,"line_end":385,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308134,"byte_end":308201,"line_start":386,"line_end":386,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308206,"byte_end":308236,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308241,"byte_end":308244,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308249,"byte_end":308263,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308268,"byte_end":308271,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308276,"byte_end":308283,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308288,"byte_end":308329,"line_start":392,"line_end":392,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308334,"byte_end":308358,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308363,"byte_end":308409,"line_start":394,"line_end":394,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308414,"byte_end":308417,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308422,"byte_end":308443,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308448,"byte_end":308451,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308456,"byte_end":308461,"line_start":398,"line_end":398,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308466,"byte_end":308527,"line_start":399,"line_end":399,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308532,"byte_end":308554,"line_start":400,"line_end":400,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308559,"byte_end":308623,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308628,"byte_end":308639,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308644,"byte_end":308683,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308688,"byte_end":308693,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308698,"byte_end":308701,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308706,"byte_end":308727,"line_start":406,"line_end":406,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308732,"byte_end":308740,"line_start":407,"line_end":407,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":308745,"byte_end":308752,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309785,"byte_end":309799,"line_start":439,"line_end":439,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309036,"byte_end":309110,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309115,"byte_end":309138,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309143,"byte_end":309146,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309151,"byte_end":309182,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309187,"byte_end":309264,"line_start":422,"line_end":422,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309269,"byte_end":309298,"line_start":423,"line_end":423,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309303,"byte_end":309306,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309311,"byte_end":309325,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309330,"byte_end":309333,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309338,"byte_end":309345,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309350,"byte_end":309391,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309396,"byte_end":309420,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309425,"byte_end":309471,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309476,"byte_end":309479,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309484,"byte_end":309553,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309558,"byte_end":309628,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309633,"byte_end":309636,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309641,"byte_end":309708,"line_start":435,"line_end":435,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309713,"byte_end":309752,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309757,"byte_end":309765,"line_start":437,"line_end":437,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":309770,"byte_end":309777,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310832,"byte_end":310846,"line_start":469,"line_end":469,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310076,"byte_end":310150,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310155,"byte_end":310178,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310183,"byte_end":310186,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310191,"byte_end":310222,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310227,"byte_end":310304,"line_start":452,"line_end":452,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310309,"byte_end":310338,"line_start":453,"line_end":453,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310343,"byte_end":310346,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310351,"byte_end":310365,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310370,"byte_end":310373,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310378,"byte_end":310385,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310390,"byte_end":310431,"line_start":458,"line_end":458,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310436,"byte_end":310460,"line_start":459,"line_end":459,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310465,"byte_end":310511,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310516,"byte_end":310519,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310524,"byte_end":310600,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310605,"byte_end":310675,"line_start":463,"line_end":463,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310680,"byte_end":310683,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310688,"byte_end":310755,"line_start":465,"line_end":465,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310760,"byte_end":310799,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310804,"byte_end":310812,"line_start":467,"line_end":467,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":310817,"byte_end":310824,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2699},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312761,"byte_end":312784,"line_start":521,"line_end":521,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311123,"byte_end":311205,"line_start":478,"line_end":478,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311210,"byte_end":311284,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311289,"byte_end":311339,"line_start":480,"line_end":480,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311344,"byte_end":311347,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311352,"byte_end":311374,"line_start":482,"line_end":482,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311379,"byte_end":311465,"line_start":483,"line_end":483,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311470,"byte_end":311555,"line_start":484,"line_end":484,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311560,"byte_end":311588,"line_start":485,"line_end":485,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311593,"byte_end":311596,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311601,"byte_end":311676,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311681,"byte_end":311738,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311743,"byte_end":311746,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311751,"byte_end":311765,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311770,"byte_end":311773,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311778,"byte_end":311785,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311790,"byte_end":311831,"line_start":493,"line_end":493,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311836,"byte_end":311870,"line_start":494,"line_end":494,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311875,"byte_end":311932,"line_start":495,"line_end":495,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311937,"byte_end":311940,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311945,"byte_end":311985,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":311990,"byte_end":312030,"line_start":498,"line_end":498,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312035,"byte_end":312076,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312081,"byte_end":312084,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312089,"byte_end":312140,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312145,"byte_end":312198,"line_start":502,"line_end":502,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312203,"byte_end":312225,"line_start":503,"line_end":503,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312230,"byte_end":312255,"line_start":504,"line_end":504,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312260,"byte_end":312322,"line_start":505,"line_end":505,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312327,"byte_end":312342,"line_start":506,"line_end":506,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312347,"byte_end":312356,"line_start":507,"line_end":507,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312361,"byte_end":312367,"line_start":508,"line_end":508,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312372,"byte_end":312375,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312380,"byte_end":312406,"line_start":510,"line_end":510,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312411,"byte_end":312478,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312483,"byte_end":312497,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312502,"byte_end":312505,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312510,"byte_end":312571,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312576,"byte_end":312604,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312609,"byte_end":312659,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312664,"byte_end":312672,"line_start":517,"line_end":517,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312677,"byte_end":312684,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312689,"byte_end":312723,"line_start":519,"line_end":519,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":312728,"byte_end":312753,"line_start":520,"line_end":520,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314233,"byte_end":314244,"line_start":568,"line_end":568,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313194,"byte_end":313246,"line_start":538,"line_end":538,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313251,"byte_end":313318,"line_start":539,"line_end":539,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313323,"byte_end":313326,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313331,"byte_end":313405,"line_start":541,"line_end":541,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313410,"byte_end":313491,"line_start":542,"line_end":542,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313496,"byte_end":313566,"line_start":543,"line_end":543,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313571,"byte_end":313574,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313579,"byte_end":313647,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313652,"byte_end":313655,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313660,"byte_end":313674,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313679,"byte_end":313682,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313687,"byte_end":313694,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313699,"byte_end":313740,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313745,"byte_end":313776,"line_start":551,"line_end":551,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313781,"byte_end":313819,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313824,"byte_end":313844,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313849,"byte_end":313852,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313857,"byte_end":313894,"line_start":555,"line_end":555,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313899,"byte_end":313902,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313907,"byte_end":313934,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313939,"byte_end":313963,"line_start":558,"line_end":558,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":313968,"byte_end":314014,"line_start":559,"line_end":559,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314019,"byte_end":314028,"line_start":560,"line_end":560,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314033,"byte_end":314076,"line_start":561,"line_end":561,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314081,"byte_end":314088,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314093,"byte_end":314096,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314101,"byte_end":314164,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314169,"byte_end":314200,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314205,"byte_end":314213,"line_start":566,"line_end":566,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314218,"byte_end":314225,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315715,"byte_end":315725,"line_start":605,"line_end":605,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314427,"byte_end":314500,"line_start":575,"line_end":575,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314505,"byte_end":314539,"line_start":576,"line_end":576,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314544,"byte_end":314547,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314552,"byte_end":314627,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314632,"byte_end":314707,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314712,"byte_end":314785,"line_start":580,"line_end":580,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314790,"byte_end":314861,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314866,"byte_end":314916,"line_start":582,"line_end":582,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314921,"byte_end":314924,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":314929,"byte_end":315000,"line_start":584,"line_end":584,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315005,"byte_end":315008,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315013,"byte_end":315089,"line_start":586,"line_end":586,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315094,"byte_end":315164,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315169,"byte_end":315194,"line_start":588,"line_end":588,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315199,"byte_end":315202,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315207,"byte_end":315221,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315226,"byte_end":315233,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315238,"byte_end":315279,"line_start":592,"line_end":592,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315284,"byte_end":315308,"line_start":593,"line_end":593,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315313,"byte_end":315370,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315375,"byte_end":315378,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315383,"byte_end":315463,"line_start":596,"line_end":596,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315468,"byte_end":315511,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315516,"byte_end":315549,"line_start":598,"line_end":598,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315554,"byte_end":315561,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315566,"byte_end":315569,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315574,"byte_end":315622,"line_start":601,"line_end":601,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315627,"byte_end":315682,"line_start":602,"line_end":602,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315687,"byte_end":315695,"line_start":603,"line_end":603,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315700,"byte_end":315707,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317352,"byte_end":317366,"line_start":646,"line_end":646,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":315976,"byte_end":316038,"line_start":614,"line_end":614,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316043,"byte_end":316111,"line_start":615,"line_end":615,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316116,"byte_end":316150,"line_start":616,"line_end":616,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316155,"byte_end":316158,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316163,"byte_end":316238,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316243,"byte_end":316318,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316323,"byte_end":316399,"line_start":620,"line_end":620,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316404,"byte_end":316469,"line_start":621,"line_end":621,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316474,"byte_end":316477,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316482,"byte_end":316553,"line_start":623,"line_end":623,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316558,"byte_end":316561,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316566,"byte_end":316642,"line_start":625,"line_end":625,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316647,"byte_end":316721,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316726,"byte_end":316751,"line_start":627,"line_end":627,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316756,"byte_end":316759,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316764,"byte_end":316778,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316783,"byte_end":316790,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316795,"byte_end":316836,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316841,"byte_end":316898,"line_start":632,"line_end":632,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316903,"byte_end":316928,"line_start":633,"line_end":633,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316933,"byte_end":316936,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":316941,"byte_end":317011,"line_start":635,"line_end":635,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317016,"byte_end":317071,"line_start":636,"line_end":636,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317076,"byte_end":317138,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317143,"byte_end":317158,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317163,"byte_end":317170,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317175,"byte_end":317178,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317183,"byte_end":317204,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317209,"byte_end":317258,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317263,"byte_end":317319,"line_start":643,"line_end":643,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317324,"byte_end":317332,"line_start":644,"line_end":644,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317337,"byte_end":317344,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319058,"byte_end":319069,"line_start":693,"line_end":693,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317643,"byte_end":317708,"line_start":655,"line_end":655,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317713,"byte_end":317716,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317721,"byte_end":317794,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317799,"byte_end":317872,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317877,"byte_end":317950,"line_start":659,"line_end":659,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":317955,"byte_end":318025,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318030,"byte_end":318033,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318038,"byte_end":318052,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318057,"byte_end":318060,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318065,"byte_end":318072,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318077,"byte_end":318118,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318123,"byte_end":318154,"line_start":666,"line_end":666,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318159,"byte_end":318210,"line_start":667,"line_end":667,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318215,"byte_end":318235,"line_start":668,"line_end":668,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318240,"byte_end":318243,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318248,"byte_end":318287,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318292,"byte_end":318331,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318336,"byte_end":318375,"line_start":672,"line_end":672,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318380,"byte_end":318383,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318388,"byte_end":318415,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318420,"byte_end":318463,"line_start":675,"line_end":675,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318468,"byte_end":318475,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318480,"byte_end":318507,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318512,"byte_end":318555,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318560,"byte_end":318604,"line_start":679,"line_end":679,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318609,"byte_end":318616,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318621,"byte_end":318648,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318653,"byte_end":318698,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318703,"byte_end":318748,"line_start":683,"line_end":683,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318753,"byte_end":318797,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318802,"byte_end":318809,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318814,"byte_end":318817,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318822,"byte_end":318861,"line_start":687,"line_end":687,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318866,"byte_end":318915,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318920,"byte_end":318969,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":318974,"byte_end":319024,"line_start":690,"line_end":690,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319029,"byte_end":319038,"line_start":691,"line_end":691,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319043,"byte_end":319050,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320661,"byte_end":320669,"line_start":732,"line_end":732,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319374,"byte_end":319444,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319449,"byte_end":319509,"line_start":705,"line_end":705,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319514,"byte_end":319517,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319522,"byte_end":319592,"line_start":707,"line_end":707,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319597,"byte_end":319673,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319678,"byte_end":319754,"line_start":709,"line_end":709,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319759,"byte_end":319829,"line_start":710,"line_end":710,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319834,"byte_end":319860,"line_start":711,"line_end":711,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319865,"byte_end":319868,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319873,"byte_end":319953,"line_start":713,"line_end":713,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":319958,"byte_end":320027,"line_start":714,"line_end":714,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320032,"byte_end":320053,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320058,"byte_end":320061,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320066,"byte_end":320080,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320085,"byte_end":320088,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320093,"byte_end":320100,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320105,"byte_end":320146,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320151,"byte_end":320197,"line_start":721,"line_end":721,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320202,"byte_end":320205,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320210,"byte_end":320279,"line_start":723,"line_end":723,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320284,"byte_end":320361,"line_start":724,"line_end":724,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320366,"byte_end":320399,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320404,"byte_end":320407,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320412,"byte_end":320498,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320503,"byte_end":320589,"line_start":728,"line_end":728,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320594,"byte_end":320628,"line_start":729,"line_end":729,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320633,"byte_end":320641,"line_start":730,"line_end":730,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320646,"byte_end":320653,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322195,"byte_end":322205,"line_start":775,"line_end":775,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":320949,"byte_end":321011,"line_start":741,"line_end":741,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321016,"byte_end":321091,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321096,"byte_end":321099,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321104,"byte_end":321175,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321180,"byte_end":321256,"line_start":745,"line_end":745,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321261,"byte_end":321300,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321305,"byte_end":321308,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321313,"byte_end":321399,"line_start":748,"line_end":748,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321404,"byte_end":321407,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321412,"byte_end":321496,"line_start":750,"line_end":750,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321501,"byte_end":321557,"line_start":751,"line_end":751,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321562,"byte_end":321565,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321570,"byte_end":321584,"line_start":753,"line_end":753,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321589,"byte_end":321592,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321597,"byte_end":321604,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321609,"byte_end":321650,"line_start":756,"line_end":756,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321655,"byte_end":321686,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321691,"byte_end":321729,"line_start":758,"line_end":758,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321734,"byte_end":321754,"line_start":759,"line_end":759,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321759,"byte_end":321762,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321767,"byte_end":321828,"line_start":761,"line_end":761,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321833,"byte_end":321836,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321841,"byte_end":321868,"line_start":763,"line_end":763,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321873,"byte_end":321904,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321909,"byte_end":321935,"line_start":765,"line_end":765,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":321940,"byte_end":322010,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322015,"byte_end":322024,"line_start":767,"line_end":767,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322029,"byte_end":322036,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322041,"byte_end":322044,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322049,"byte_end":322088,"line_start":770,"line_end":770,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322093,"byte_end":322096,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322101,"byte_end":322161,"line_start":772,"line_end":772,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322166,"byte_end":322175,"line_start":773,"line_end":773,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322180,"byte_end":322187,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324927,"byte_end":324947,"line_start":842,"line_end":842,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322459,"byte_end":322537,"line_start":783,"line_end":783,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322542,"byte_end":322545,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322550,"byte_end":322655,"line_start":785,"line_end":785,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322660,"byte_end":322703,"line_start":786,"line_end":786,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322708,"byte_end":322711,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322716,"byte_end":322784,"line_start":788,"line_end":788,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322789,"byte_end":322862,"line_start":789,"line_end":789,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322867,"byte_end":322923,"line_start":790,"line_end":790,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322928,"byte_end":322931,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":322936,"byte_end":323011,"line_start":792,"line_end":792,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323016,"byte_end":323089,"line_start":793,"line_end":793,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323094,"byte_end":323159,"line_start":794,"line_end":794,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323164,"byte_end":323167,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323172,"byte_end":323247,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323252,"byte_end":323309,"line_start":797,"line_end":797,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323314,"byte_end":323317,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323322,"byte_end":323336,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323341,"byte_end":323344,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323349,"byte_end":323401,"line_start":801,"line_end":801,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323406,"byte_end":323413,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323418,"byte_end":323459,"line_start":803,"line_end":803,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323464,"byte_end":323498,"line_start":804,"line_end":804,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323503,"byte_end":323560,"line_start":805,"line_end":805,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323565,"byte_end":323568,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323573,"byte_end":323623,"line_start":807,"line_end":807,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323628,"byte_end":323678,"line_start":808,"line_end":808,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323683,"byte_end":323686,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323691,"byte_end":323766,"line_start":810,"line_end":810,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323771,"byte_end":323774,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323779,"byte_end":323845,"line_start":812,"line_end":812,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323850,"byte_end":323853,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323858,"byte_end":323883,"line_start":814,"line_end":814,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323888,"byte_end":323942,"line_start":815,"line_end":815,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323947,"byte_end":323950,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323955,"byte_end":323980,"line_start":817,"line_end":817,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":323985,"byte_end":324039,"line_start":818,"line_end":818,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324044,"byte_end":324047,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324052,"byte_end":324096,"line_start":820,"line_end":820,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324101,"byte_end":324137,"line_start":821,"line_end":821,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324142,"byte_end":324149,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324154,"byte_end":324157,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324162,"byte_end":324222,"line_start":824,"line_end":824,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324227,"byte_end":324234,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324239,"byte_end":324280,"line_start":826,"line_end":826,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324285,"byte_end":324316,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324321,"byte_end":324372,"line_start":828,"line_end":828,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324377,"byte_end":324380,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324385,"byte_end":324439,"line_start":830,"line_end":830,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324444,"byte_end":324510,"line_start":831,"line_end":831,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324515,"byte_end":324518,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324523,"byte_end":324572,"line_start":833,"line_end":833,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324577,"byte_end":324631,"line_start":834,"line_end":834,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324636,"byte_end":324639,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324644,"byte_end":324697,"line_start":836,"line_end":836,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324702,"byte_end":324774,"line_start":837,"line_end":837,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324779,"byte_end":324838,"line_start":838,"line_end":838,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324843,"byte_end":324850,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324855,"byte_end":324889,"line_start":840,"line_end":840,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":324894,"byte_end":324919,"line_start":841,"line_end":841,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327928,"byte_end":327940,"line_start":918,"line_end":918,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325224,"byte_end":325290,"line_start":852,"line_end":852,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325295,"byte_end":325298,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325303,"byte_end":325408,"line_start":854,"line_end":854,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325413,"byte_end":325456,"line_start":855,"line_end":855,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325461,"byte_end":325464,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325469,"byte_end":325537,"line_start":857,"line_end":857,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325542,"byte_end":325618,"line_start":858,"line_end":858,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325623,"byte_end":325653,"line_start":859,"line_end":859,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325658,"byte_end":325661,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325666,"byte_end":325741,"line_start":861,"line_end":861,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325746,"byte_end":325819,"line_start":862,"line_end":862,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325824,"byte_end":325889,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325894,"byte_end":325897,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325902,"byte_end":325977,"line_start":865,"line_end":865,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":325982,"byte_end":326039,"line_start":866,"line_end":866,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326044,"byte_end":326047,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326052,"byte_end":326066,"line_start":868,"line_end":868,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326071,"byte_end":326074,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326079,"byte_end":326129,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326134,"byte_end":326141,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326146,"byte_end":326187,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326192,"byte_end":326226,"line_start":873,"line_end":873,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326231,"byte_end":326261,"line_start":874,"line_end":874,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326266,"byte_end":326323,"line_start":875,"line_end":875,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326328,"byte_end":326331,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326336,"byte_end":326386,"line_start":877,"line_end":877,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326391,"byte_end":326441,"line_start":878,"line_end":878,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326446,"byte_end":326449,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326454,"byte_end":326493,"line_start":880,"line_end":880,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326498,"byte_end":326577,"line_start":881,"line_end":881,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326582,"byte_end":326585,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326590,"byte_end":326652,"line_start":883,"line_end":883,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326657,"byte_end":326660,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326665,"byte_end":326728,"line_start":885,"line_end":885,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326733,"byte_end":326736,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326741,"byte_end":326770,"line_start":887,"line_end":887,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326775,"byte_end":326838,"line_start":888,"line_end":888,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326843,"byte_end":326873,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326878,"byte_end":326892,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326897,"byte_end":326900,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326905,"byte_end":326930,"line_start":892,"line_end":892,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326935,"byte_end":326989,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":326994,"byte_end":327048,"line_start":894,"line_end":894,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327053,"byte_end":327056,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327061,"byte_end":327105,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327110,"byte_end":327146,"line_start":897,"line_end":897,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327151,"byte_end":327158,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327163,"byte_end":327166,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327171,"byte_end":327231,"line_start":900,"line_end":900,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327236,"byte_end":327243,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327248,"byte_end":327289,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327294,"byte_end":327325,"line_start":903,"line_end":903,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327330,"byte_end":327381,"line_start":904,"line_end":904,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327386,"byte_end":327389,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327394,"byte_end":327448,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327453,"byte_end":327511,"line_start":907,"line_end":907,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327516,"byte_end":327519,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327524,"byte_end":327573,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327578,"byte_end":327632,"line_start":910,"line_end":910,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327637,"byte_end":327640,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327645,"byte_end":327698,"line_start":912,"line_end":912,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327703,"byte_end":327775,"line_start":913,"line_end":913,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327780,"byte_end":327839,"line_start":914,"line_end":914,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327844,"byte_end":327851,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327856,"byte_end":327890,"line_start":916,"line_end":916,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":327895,"byte_end":327920,"line_start":917,"line_end":917,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328395,"byte_end":328414,"line_start":932,"line_end":932,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328287,"byte_end":328365,"line_start":930,"line_end":930,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":328370,"byte_end":328387,"line_start":931,"line_end":931,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330708,"byte_end":330723,"line_start":998,"line_end":998,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329486,"byte_end":329568,"line_start":970,"line_end":970,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329573,"byte_end":329576,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329581,"byte_end":329696,"line_start":972,"line_end":972,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329701,"byte_end":329792,"line_start":973,"line_end":973,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329797,"byte_end":329887,"line_start":974,"line_end":974,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329892,"byte_end":329977,"line_start":975,"line_end":975,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329982,"byte_end":329985,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":329990,"byte_end":330054,"line_start":977,"line_end":977,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330059,"byte_end":330116,"line_start":978,"line_end":978,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330121,"byte_end":330124,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330129,"byte_end":330143,"line_start":980,"line_end":980,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330148,"byte_end":330151,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330156,"byte_end":330163,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330168,"byte_end":330209,"line_start":983,"line_end":983,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330214,"byte_end":330260,"line_start":984,"line_end":984,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330265,"byte_end":330299,"line_start":985,"line_end":985,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330304,"byte_end":330307,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330312,"byte_end":330373,"line_start":987,"line_end":987,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330378,"byte_end":330424,"line_start":988,"line_end":988,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330429,"byte_end":330458,"line_start":989,"line_end":989,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330463,"byte_end":330466,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330471,"byte_end":330527,"line_start":991,"line_end":991,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330532,"byte_end":330570,"line_start":992,"line_end":992,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330575,"byte_end":330583,"line_start":993,"line_end":993,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330588,"byte_end":330595,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330600,"byte_end":330622,"line_start":995,"line_end":995,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":330677,"byte_end":330700,"line_start":997,"line_end":997,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9595},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371314,"byte_end":371318,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":9597}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371192,"byte_end":371229,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371254,"byte_end":371302,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2758},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371836,"byte_end":371840,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371370,"byte_end":371434,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371435,"byte_end":371463,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371464,"byte_end":371467,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371468,"byte_end":371541,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371542,"byte_end":371597,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371598,"byte_end":371601,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371602,"byte_end":371609,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371610,"byte_end":371651,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371652,"byte_end":371695,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371696,"byte_end":371699,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371700,"byte_end":371744,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371745,"byte_end":371810,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371811,"byte_end":371820,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371821,"byte_end":371828,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9604},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372531,"byte_end":372537,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":9606}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372407,"byte_end":372446,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372471,"byte_end":372519,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2777},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":373061,"byte_end":373067,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372559,"byte_end":372619,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372620,"byte_end":372623,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372624,"byte_end":372691,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372692,"byte_end":372764,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372765,"byte_end":372822,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372823,"byte_end":372826,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372827,"byte_end":372834,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372835,"byte_end":372876,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372877,"byte_end":372920,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372921,"byte_end":372924,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372925,"byte_end":372960,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":372961,"byte_end":373035,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":373036,"byte_end":373045,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":373046,"byte_end":373053,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9613},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374058,"byte_end":374068,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":9615}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":373756,"byte_end":373816,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":373817,"byte_end":373869,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":373870,"byte_end":373873,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":373874,"byte_end":373937,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":373938,"byte_end":373973,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":373998,"byte_end":374046,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2814},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376356,"byte_end":376367,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374584,"byte_end":374655,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374656,"byte_end":374723,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374724,"byte_end":374727,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374728,"byte_end":374800,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374801,"byte_end":374804,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374805,"byte_end":374879,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374880,"byte_end":374932,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374933,"byte_end":374936,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374937,"byte_end":375009,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375010,"byte_end":375083,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375084,"byte_end":375121,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375122,"byte_end":375125,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375126,"byte_end":375140,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375141,"byte_end":375144,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375145,"byte_end":375161,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375162,"byte_end":375165,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375166,"byte_end":375173,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375174,"byte_end":375215,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375216,"byte_end":375259,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375260,"byte_end":375263,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375264,"byte_end":375332,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375333,"byte_end":375411,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375412,"byte_end":375443,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375444,"byte_end":375465,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375466,"byte_end":375469,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375470,"byte_end":375504,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375505,"byte_end":375560,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375561,"byte_end":375564,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375565,"byte_end":375618,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375619,"byte_end":375672,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375673,"byte_end":375726,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375727,"byte_end":375736,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375737,"byte_end":375744,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375745,"byte_end":375748,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375749,"byte_end":375785,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375786,"byte_end":375789,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375790,"byte_end":375801,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375802,"byte_end":375843,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375844,"byte_end":375887,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375888,"byte_end":375891,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375892,"byte_end":375941,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375942,"byte_end":375963,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":375964,"byte_end":376041,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376042,"byte_end":376075,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376076,"byte_end":376079,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376080,"byte_end":376123,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376124,"byte_end":376167,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376168,"byte_end":376211,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376212,"byte_end":376255,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376256,"byte_end":376259,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376260,"byte_end":376289,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376290,"byte_end":376330,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376331,"byte_end":376340,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":376341,"byte_end":376348,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9622},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":376758,"byte_end":376763,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":9624}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":376642,"byte_end":376680,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":376698,"byte_end":376746,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2830},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":376932,"byte_end":376937,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":376802,"byte_end":376850,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":376851,"byte_end":376854,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":376855,"byte_end":376924,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2860},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":378022,"byte_end":378026,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377715,"byte_end":377756,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377757,"byte_end":377760,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377761,"byte_end":377768,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377769,"byte_end":377810,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377811,"byte_end":377854,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377855,"byte_end":377858,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377859,"byte_end":377903,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377904,"byte_end":377959,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377960,"byte_end":377996,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":377997,"byte_end":378006,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":378007,"byte_end":378014,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9633},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":378288,"byte_end":378292,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9635}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9664},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379468,"byte_end":379475,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":9666}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379348,"byte_end":379390,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379408,"byte_end":379456,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2886},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379651,"byte_end":379658,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379519,"byte_end":379573,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379574,"byte_end":379577,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379578,"byte_end":379643,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2912},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380501,"byte_end":380507,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2914}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380400,"byte_end":380440,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380441,"byte_end":380489,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2920},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":381195,"byte_end":381202,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380707,"byte_end":380780,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380781,"byte_end":380784,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380785,"byte_end":380844,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380845,"byte_end":380848,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380849,"byte_end":380863,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380864,"byte_end":380867,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380868,"byte_end":380875,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380876,"byte_end":380909,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380910,"byte_end":380938,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380939,"byte_end":380942,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380943,"byte_end":380972,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380973,"byte_end":380976,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380977,"byte_end":381041,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":381042,"byte_end":381095,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":381096,"byte_end":381117,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":381118,"byte_end":381171,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":381172,"byte_end":381179,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":381180,"byte_end":381187,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9677},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":381922,"byte_end":381928,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":9680},{"krate":0,"index":9681},{"krate":0,"index":9682}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2944},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382532,"byte_end":382538,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382056,"byte_end":382124,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382125,"byte_end":382201,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382202,"byte_end":382250,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382251,"byte_end":382254,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382255,"byte_end":382329,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382330,"byte_end":382399,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382400,"byte_end":382427,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382428,"byte_end":382431,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382432,"byte_end":382503,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382504,"byte_end":382524,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382943,"byte_end":382950,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382835,"byte_end":382909,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382914,"byte_end":382931,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383306,"byte_end":383313,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383044,"byte_end":383112,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383117,"byte_end":383148,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383153,"byte_end":383156,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383161,"byte_end":383234,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383239,"byte_end":383294,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383688,"byte_end":383699,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383419,"byte_end":383494,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383499,"byte_end":383530,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383535,"byte_end":383538,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383543,"byte_end":383616,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383621,"byte_end":383676,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":384105,"byte_end":384115,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383869,"byte_end":383932,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383937,"byte_end":383940,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":383945,"byte_end":384017,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":384022,"byte_end":384093,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2983},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387332,"byte_end":387338,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":385890,"byte_end":385960,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":385961,"byte_end":385964,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":385965,"byte_end":386034,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386035,"byte_end":386116,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386117,"byte_end":386148,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386149,"byte_end":386152,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386153,"byte_end":386232,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386233,"byte_end":386312,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386313,"byte_end":386367,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386368,"byte_end":386371,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386372,"byte_end":386452,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386453,"byte_end":386523,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386524,"byte_end":386546,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386547,"byte_end":386550,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386551,"byte_end":386628,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386629,"byte_end":386701,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386702,"byte_end":386779,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386780,"byte_end":386840,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386841,"byte_end":386844,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386845,"byte_end":386858,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386859,"byte_end":386862,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386863,"byte_end":386870,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386871,"byte_end":386912,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386913,"byte_end":386956,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386957,"byte_end":386960,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":386961,"byte_end":387016,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387017,"byte_end":387040,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387041,"byte_end":387080,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387081,"byte_end":387118,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387119,"byte_end":387158,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387159,"byte_end":387175,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387176,"byte_end":387192,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387193,"byte_end":387202,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387203,"byte_end":387210,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387211,"byte_end":387214,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387215,"byte_end":387267,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387268,"byte_end":387306,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387307,"byte_end":387316,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387317,"byte_end":387324,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9723},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387685,"byte_end":387691,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":9727},{"krate":0,"index":9728}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9814},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661570,"byte_end":10661584,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":9816},{"krate":0,"index":9817},{"krate":0,"index":9818},{"krate":0,"index":9819}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659504,"byte_end":10659538,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659539,"byte_end":10659542,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659543,"byte_end":10659622,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659623,"byte_end":10659694,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659695,"byte_end":10659771,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659772,"byte_end":10659820,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659821,"byte_end":10659824,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659825,"byte_end":10659904,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659905,"byte_end":10659980,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659981,"byte_end":10660059,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660060,"byte_end":10660140,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660141,"byte_end":10660170,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660171,"byte_end":10660174,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660175,"byte_end":10660253,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660254,"byte_end":10660328,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660329,"byte_end":10660404,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660405,"byte_end":10660480,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660481,"byte_end":10660556,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660557,"byte_end":10660615,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660616,"byte_end":10660619,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660620,"byte_end":10660693,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660694,"byte_end":10660772,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660773,"byte_end":10660831,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660832,"byte_end":10660905,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660906,"byte_end":10660974,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10660975,"byte_end":10661051,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661052,"byte_end":10661120,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661121,"byte_end":10661174,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661175,"byte_end":10661178,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661179,"byte_end":10661245,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661246,"byte_end":10661325,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661326,"byte_end":10661373,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661374,"byte_end":10661377,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661378,"byte_end":10661451,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661452,"byte_end":10661509,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661510,"byte_end":10661558,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":9824},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662092,"byte_end":10662095,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661872,"byte_end":10661916,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661921,"byte_end":10661924,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661929,"byte_end":10662004,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662009,"byte_end":10662080,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":9825},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662592,"byte_end":10662595,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662319,"byte_end":10662376,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662381,"byte_end":10662384,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662389,"byte_end":10662452,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662457,"byte_end":10662521,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662526,"byte_end":10662580,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":9826},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662753,"byte_end":10662761,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662690,"byte_end":10662741,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":9827},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10663185,"byte_end":10663189,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662866,"byte_end":10662899,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662904,"byte_end":10662907,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662912,"byte_end":10662988,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10662993,"byte_end":10663067,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10663072,"byte_end":10663145,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10663150,"byte_end":10663173,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":9852},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":9853},{"krate":0,"index":9854},{"krate":0,"index":9855},{"krate":0,"index":9856},{"krate":0,"index":9857},{"krate":0,"index":9858},{"krate":0,"index":9859},{"krate":0,"index":9860},{"krate":0,"index":14032},{"krate":0,"index":9861},{"krate":0,"index":9862},{"krate":0,"index":14036},{"krate":0,"index":9863},{"krate":0,"index":9864},{"krate":0,"index":9865},{"krate":0,"index":9866},{"krate":0,"index":9867},{"krate":0,"index":14044},{"krate":0,"index":9868},{"krate":0,"index":14046},{"krate":0,"index":9869},{"krate":0,"index":14048},{"krate":0,"index":9870},{"krate":0,"index":14050},{"krate":0,"index":9871},{"krate":0,"index":14052},{"krate":0,"index":9872},{"krate":0,"index":9873},{"krate":0,"index":9874},{"krate":0,"index":9875},{"krate":0,"index":9876},{"krate":0,"index":9877},{"krate":0,"index":9878},{"krate":0,"index":9879},{"krate":0,"index":9880},{"krate":0,"index":9881},{"krate":0,"index":9882},{"krate":0,"index":9883},{"krate":0,"index":9884},{"krate":0,"index":9885},{"krate":0,"index":9886},{"krate":0,"index":9887},{"krate":0,"index":9888},{"krate":0,"index":9894},{"krate":0,"index":9951},{"krate":0,"index":9952},{"krate":0,"index":9953},{"krate":0,"index":14090},{"krate":0,"index":9954},{"krate":0,"index":14092},{"krate":0,"index":9955},{"krate":0,"index":9956},{"krate":0,"index":9957},{"krate":0,"index":9997},{"krate":0,"index":9998},{"krate":0,"index":10035},{"krate":0,"index":10036},{"krate":0,"index":10037},{"krate":0,"index":10038},{"krate":0,"index":10043},{"krate":0,"index":10045},{"krate":0,"index":10047},{"krate":0,"index":10049},{"krate":0,"index":10051},{"krate":0,"index":10053},{"krate":0,"index":10056},{"krate":0,"index":10071},{"krate":0,"index":10084},{"krate":0,"index":10087},{"krate":0,"index":10091},{"krate":0,"index":10094},{"krate":0,"index":10100},{"krate":0,"index":10106},{"krate":0,"index":10111},{"krate":0,"index":10116},{"krate":0,"index":10119}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1738,"byte_end":1772,"line_start":52,"line_end":52,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166594,"byte_end":166619,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10665554,"byte_end":10665586,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10665587,"byte_end":10665590,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10665591,"byte_end":10665666,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10665667,"byte_end":10665724,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10233},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10692930,"byte_end":10692940,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":10236},{"krate":0,"index":10237},{"krate":0,"index":10238}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10692842,"byte_end":10692901,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10243},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693177,"byte_end":10693184,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693089,"byte_end":10693148,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10252},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693325,"byte_end":10693335,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":10255},{"krate":0,"index":10256},{"krate":0,"index":10257},{"krate":0,"index":10258}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693235,"byte_end":10693296,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":10263},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693623,"byte_end":10693627,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693529,"byte_end":10693594,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":10272},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693764,"byte_end":10693772,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":10274},{"krate":0,"index":10275}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693678,"byte_end":10693735,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10038},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667591,"byte_end":10667607,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":10040},{"krate":0,"index":10041},{"krate":0,"index":10042}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666496,"byte_end":10666549,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666550,"byte_end":10666553,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666554,"byte_end":10666622,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666623,"byte_end":10666696,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666697,"byte_end":10666773,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666774,"byte_end":10666818,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666819,"byte_end":10666822,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666823,"byte_end":10666901,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666902,"byte_end":10666960,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10666961,"byte_end":10667025,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667026,"byte_end":10667079,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667080,"byte_end":10667159,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667160,"byte_end":10667189,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667190,"byte_end":10667193,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667194,"byte_end":10667264,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667265,"byte_end":10667342,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667343,"byte_end":10667394,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667395,"byte_end":10667398,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667399,"byte_end":10667472,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667473,"byte_end":10667530,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667531,"byte_end":10667579,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10058},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10670224,"byte_end":10670227,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10669953,"byte_end":10670002,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10670007,"byte_end":10670010,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10670015,"byte_end":10670082,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10670087,"byte_end":10670161,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10670166,"byte_end":10670212,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":10059},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671222,"byte_end":10671225,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671084,"byte_end":10671139,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671144,"byte_end":10671147,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671152,"byte_end":10671210,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10060},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671389,"byte_end":10671397,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671327,"byte_end":10671377,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10061},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671980,"byte_end":10671984,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671610,"byte_end":10671641,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671646,"byte_end":10671649,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671654,"byte_end":10671724,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671729,"byte_end":10671815,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671820,"byte_end":10671896,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10671901,"byte_end":10671968,"line_start":160,"line_end":160,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10062},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10673259,"byte_end":10673263,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10673177,"byte_end":10673247,"line_start":188,"line_end":188,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":10063},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10673461,"byte_end":10673473,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10673379,"byte_end":10673449,"line_start":196,"line_end":196,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":10064},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10673802,"byte_end":10673810,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10673721,"byte_end":10673790,"line_start":204,"line_end":204,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10065},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10674017,"byte_end":10674029,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10673936,"byte_end":10674005,"line_start":212,"line_end":212,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10089},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10689166,"byte_end":10689171,"line_start":558,"line_end":558,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10689113,"byte_end":10689154,"line_start":557,"line_end":557,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":10124},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":10125},{"krate":0,"index":10126},{"krate":0,"index":10127},{"krate":0,"index":14154},{"krate":0,"index":10128},{"krate":0,"index":10129},{"krate":0,"index":10130},{"krate":0,"index":10131},{"krate":0,"index":10132},{"krate":0,"index":10133},{"krate":0,"index":10134},{"krate":0,"index":10135},{"krate":0,"index":10136},{"krate":0,"index":10137},{"krate":0,"index":10138},{"krate":0,"index":10139},{"krate":0,"index":10140},{"krate":0,"index":10141},{"krate":0,"index":10142},{"krate":0,"index":10143},{"krate":0,"index":11443},{"krate":0,"index":11446},{"krate":0,"index":10144},{"krate":0,"index":10147},{"krate":0,"index":10156},{"krate":0,"index":10159},{"krate":0,"index":10163},{"krate":0,"index":10166},{"krate":0,"index":10168},{"krate":0,"index":10172},{"krate":0,"index":10176},{"krate":0,"index":10181},{"krate":0,"index":10187},{"krate":0,"index":11434},{"krate":0,"index":11439},{"krate":0,"index":11425},{"krate":0,"index":11430},{"krate":0,"index":11418},{"krate":0,"index":11422},{"krate":0,"index":10193},{"krate":0,"index":10199},{"krate":0,"index":10201},{"krate":0,"index":10207},{"krate":0,"index":10209},{"krate":0,"index":10214}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":1738,"byte_end":1772,"line_start":52,"line_end":52,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166760,"byte_end":166785,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10706117,"byte_end":10706148,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":11443},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707188,"byte_end":10707197,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":11445}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":10149},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707679,"byte_end":10707682,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707479,"byte_end":10707518,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707523,"byte_end":10707526,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707531,"byte_end":10707601,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707606,"byte_end":10707667,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10150},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707892,"byte_end":10707895,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707754,"byte_end":10707809,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707814,"byte_end":10707817,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707822,"byte_end":10707880,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10151},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708011,"byte_end":10708019,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707950,"byte_end":10707999,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10152},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708381,"byte_end":10708385,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708078,"byte_end":10708109,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708114,"byte_end":10708117,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708122,"byte_end":10708194,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708199,"byte_end":10708273,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708278,"byte_end":10708346,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708351,"byte_end":10708369,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":10153},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708551,"byte_end":10708555,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708469,"byte_end":10708539,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":10154},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708705,"byte_end":10708713,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708624,"byte_end":10708693,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10155},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708849,"byte_end":10708854,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708796,"byte_end":10708837,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":10166},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710561,"byte_end":10710571,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10709940,"byte_end":10710014,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710015,"byte_end":10710018,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710019,"byte_end":10710098,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710099,"byte_end":10710150,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710151,"byte_end":10710225,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710226,"byte_end":10710285,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710286,"byte_end":10710289,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710290,"byte_end":10710362,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710363,"byte_end":10710413,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710414,"byte_end":10710417,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710418,"byte_end":10710495,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710496,"byte_end":10710553,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11434},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10711878,"byte_end":10711882,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10711788,"byte_end":10711849,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":11425},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10712035,"byte_end":10712042,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10711947,"byte_end":10712006,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":11418},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10712196,"byte_end":10712204,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10712110,"byte_end":10712167,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":10225},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10714219,"byte_end":10714228,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10713849,"byte_end":10713936,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10713937,"byte_end":10713940,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10713941,"byte_end":10714017,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10714018,"byte_end":10714071,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10714072,"byte_end":10714075,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10714076,"byte_end":10714153,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/abortable.rs","byte_start":10714154,"byte_end":10714211,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":3017},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":10279},{"krate":0,"index":10280},{"krate":0,"index":10281},{"krate":0,"index":10282},{"krate":0,"index":10283},{"krate":0,"index":10284},{"krate":0,"index":3033},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389230,"byte_end":389263,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389264,"byte_end":389267,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389268,"byte_end":389293,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389294,"byte_end":389297,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389298,"byte_end":389346,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389347,"byte_end":389400,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389401,"byte_end":389449,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389450,"byte_end":389497,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389498,"byte_end":389501,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389502,"byte_end":389576,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/mod.rs","byte_start":389577,"byte_end":389649,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":3047},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390838,"byte_end":390846,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":3048}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390795,"byte_end":390827,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391843,"byte_end":391848,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390860,"byte_end":390925,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390930,"byte_end":390945,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390950,"byte_end":390953,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390958,"byte_end":391028,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391033,"byte_end":391052,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391057,"byte_end":391060,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391065,"byte_end":391134,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391139,"byte_end":391212,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391217,"byte_end":391256,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391261,"byte_end":391264,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391269,"byte_end":391335,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391340,"byte_end":391406,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391411,"byte_end":391482,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391487,"byte_end":391543,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391548,"byte_end":391551,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391556,"byte_end":391563,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391568,"byte_end":391606,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391611,"byte_end":391643,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391648,"byte_end":391651,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391656,"byte_end":391702,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391707,"byte_end":391710,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391715,"byte_end":391752,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391757,"byte_end":391793,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391798,"byte_end":391805,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":391810,"byte_end":391835,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":3050},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393602,"byte_end":393615,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":3051}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393554,"byte_end":393591,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394658,"byte_end":394669,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393634,"byte_end":393699,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393704,"byte_end":393719,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393724,"byte_end":393727,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393732,"byte_end":393802,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393807,"byte_end":393826,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393831,"byte_end":393834,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393839,"byte_end":393908,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393913,"byte_end":393986,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393991,"byte_end":394030,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394035,"byte_end":394038,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394043,"byte_end":394109,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394114,"byte_end":394180,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394185,"byte_end":394256,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394261,"byte_end":394317,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394322,"byte_end":394325,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394330,"byte_end":394337,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394342,"byte_end":394379,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394384,"byte_end":394421,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394426,"byte_end":394429,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394434,"byte_end":394470,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394475,"byte_end":394512,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394517,"byte_end":394520,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394525,"byte_end":394562,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394567,"byte_end":394608,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394613,"byte_end":394620,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":394625,"byte_end":394650,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":3056},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","parent":null,"children":[{"krate":0,"index":3057}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396074,"byte_end":396116,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396117,"byte_end":396120,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396121,"byte_end":396187,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":3057},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396824,"byte_end":396829,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396189,"byte_end":396224,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396225,"byte_end":396228,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396229,"byte_end":396304,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396305,"byte_end":396342,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396343,"byte_end":396346,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396347,"byte_end":396411,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396412,"byte_end":396415,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396416,"byte_end":396487,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396488,"byte_end":396539,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396540,"byte_end":396632,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396633,"byte_end":396636,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396637,"byte_end":396708,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/never.rs","byte_start":396709,"byte_end":396814,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":3058},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":14770},{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3887},{"krate":0,"index":3889},{"krate":0,"index":3892},{"krate":0,"index":3894},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3906}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11723,"byte_end":11745,"line_start":324,"line_end":324,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11792,"byte_end":11815,"line_start":326,"line_end":326,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396860,"byte_end":396881,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396882,"byte_end":396885,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396886,"byte_end":396959,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":396960,"byte_end":397039,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397040,"byte_end":397113,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397114,"byte_end":397189,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397190,"byte_end":397269,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397270,"byte_end":397345,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397346,"byte_end":397374,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397375,"byte_end":397378,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397379,"byte_end":397458,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397459,"byte_end":397537,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397538,"byte_end":397614,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397615,"byte_end":397657,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397658,"byte_end":397661,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397662,"byte_end":397726,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":397727,"byte_end":397784,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10285},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425180,"byte_end":425190,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":424531,"byte_end":424596,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":424597,"byte_end":424646,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":424647,"byte_end":424718,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":424719,"byte_end":424722,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":424723,"byte_end":424799,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":424800,"byte_end":424871,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":424872,"byte_end":424940,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":424941,"byte_end":425009,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425010,"byte_end":425085,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425086,"byte_end":425100,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425755,"byte_end":425758,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425685,"byte_end":425743,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425867,"byte_end":425874,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425804,"byte_end":425855,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425988,"byte_end":425995,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425917,"byte_end":425976,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":426116,"byte_end":426126,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":426050,"byte_end":426104,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":10322},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":431277,"byte_end":431286,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10324},{"krate":0,"index":10325},{"krate":0,"index":10326},{"krate":0,"index":10327}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":431581,"byte_end":431584,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":431439,"byte_end":431531,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":431536,"byte_end":431569,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":431746,"byte_end":431759,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":431669,"byte_end":431734,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":432265,"byte_end":432271,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":432105,"byte_end":432161,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":432166,"byte_end":432169,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":432174,"byte_end":432253,"line_start":62,"line_end":62,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10375},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":439300,"byte_end":439309,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10377},{"krate":0,"index":10378},{"krate":0,"index":10379}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":439584,"byte_end":439587,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":439442,"byte_end":439534,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":439539,"byte_end":439572,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":439749,"byte_end":439762,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":439672,"byte_end":439737,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":440874,"byte_end":440880,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":440806,"byte_end":440862,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10424},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":443760,"byte_end":443765,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10427},{"krate":0,"index":10428},{"krate":0,"index":10429}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444131,"byte_end":444138,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444057,"byte_end":444119,"line_start":32,"line_end":32,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444470,"byte_end":444477,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444207,"byte_end":444277,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444282,"byte_end":444285,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444290,"byte_end":444363,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444368,"byte_end":444441,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444446,"byte_end":444458,"line_start":41,"line_end":41,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444836,"byte_end":444847,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444566,"byte_end":444643,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444648,"byte_end":444651,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444656,"byte_end":444729,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444734,"byte_end":444807,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444812,"byte_end":444824,"line_start":50,"line_end":50,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":445050,"byte_end":445060,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":444982,"byte_end":445038,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10473},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":447874,"byte_end":447879,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":10476}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":447712,"byte_end":447777,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":447795,"byte_end":447862,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3302},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449432,"byte_end":449436,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448583,"byte_end":448658,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448659,"byte_end":448662,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448663,"byte_end":448746,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448747,"byte_end":448827,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448828,"byte_end":448900,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448901,"byte_end":448914,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448915,"byte_end":448918,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448919,"byte_end":448966,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448967,"byte_end":448970,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448971,"byte_end":448985,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448986,"byte_end":448989,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448990,"byte_end":448997,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":448998,"byte_end":449039,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449040,"byte_end":449091,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449092,"byte_end":449095,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449096,"byte_end":449139,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449140,"byte_end":449187,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449188,"byte_end":449191,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449192,"byte_end":449245,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449246,"byte_end":449272,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449273,"byte_end":449276,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449277,"byte_end":449302,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449303,"byte_end":449356,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449357,"byte_end":449416,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449417,"byte_end":449424,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10490},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449781,"byte_end":449785,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":10494}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3325},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":451185,"byte_end":451193,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450329,"byte_end":450404,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450405,"byte_end":450408,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450409,"byte_end":450495,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450496,"byte_end":450576,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450577,"byte_end":450649,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450650,"byte_end":450663,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450664,"byte_end":450667,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450668,"byte_end":450715,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450716,"byte_end":450719,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450720,"byte_end":450734,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450735,"byte_end":450738,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450739,"byte_end":450746,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450747,"byte_end":450788,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450789,"byte_end":450840,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450841,"byte_end":450844,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450845,"byte_end":450888,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450889,"byte_end":450936,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450937,"byte_end":450940,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450941,"byte_end":450998,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":450999,"byte_end":451025,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":451026,"byte_end":451029,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":451030,"byte_end":451055,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":451056,"byte_end":451109,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":451110,"byte_end":451169,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":451170,"byte_end":451177,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10544},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":451526,"byte_end":451533,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":10548},{"krate":0,"index":10549},{"krate":0,"index":10550}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10597},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453455,"byte_end":453461,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":10599}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":452688,"byte_end":452751,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":452752,"byte_end":452785,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":452786,"byte_end":452789,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":452790,"byte_end":452858,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":452859,"byte_end":452941,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":452942,"byte_end":453021,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453022,"byte_end":453047,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453048,"byte_end":453051,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453052,"byte_end":453118,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453119,"byte_end":453186,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453187,"byte_end":453220,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453221,"byte_end":453224,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453225,"byte_end":453264,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453265,"byte_end":453304,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453305,"byte_end":453346,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453347,"byte_end":453410,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454041,"byte_end":454044,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453520,"byte_end":453595,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453600,"byte_end":453603,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453608,"byte_end":453682,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453687,"byte_end":453755,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453760,"byte_end":453798,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453803,"byte_end":453806,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453811,"byte_end":453825,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453830,"byte_end":453833,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453838,"byte_end":453845,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453850,"byte_end":453878,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453883,"byte_end":453886,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453891,"byte_end":453930,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453935,"byte_end":453983,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453988,"byte_end":454017,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454022,"byte_end":454029,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454468,"byte_end":454478,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454123,"byte_end":454180,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454185,"byte_end":454188,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454193,"byte_end":454207,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454212,"byte_end":454215,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454220,"byte_end":454227,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454232,"byte_end":454260,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454265,"byte_end":454268,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454273,"byte_end":454312,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454317,"byte_end":454365,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454370,"byte_end":454399,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454404,"byte_end":454407,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454412,"byte_end":454444,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454449,"byte_end":454456,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454886,"byte_end":454893,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454535,"byte_end":454595,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454600,"byte_end":454603,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454608,"byte_end":454622,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454627,"byte_end":454630,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454635,"byte_end":454642,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454647,"byte_end":454675,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454680,"byte_end":454683,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454688,"byte_end":454727,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454732,"byte_end":454780,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454785,"byte_end":454814,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454819,"byte_end":454822,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454827,"byte_end":454862,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454867,"byte_end":454874,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455465,"byte_end":455472,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":454949,"byte_end":455017,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455022,"byte_end":455025,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455030,"byte_end":455103,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455108,"byte_end":455170,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455175,"byte_end":455178,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455183,"byte_end":455197,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455202,"byte_end":455205,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455210,"byte_end":455217,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455222,"byte_end":455250,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455255,"byte_end":455258,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455263,"byte_end":455306,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455311,"byte_end":455359,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455364,"byte_end":455393,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455398,"byte_end":455401,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455406,"byte_end":455441,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455446,"byte_end":455453,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456130,"byte_end":456138,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455536,"byte_end":455584,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455589,"byte_end":455592,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455597,"byte_end":455611,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455616,"byte_end":455619,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455624,"byte_end":455631,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455636,"byte_end":455677,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455682,"byte_end":455736,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455741,"byte_end":455744,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455749,"byte_end":455801,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455806,"byte_end":455809,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455814,"byte_end":455849,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455854,"byte_end":455857,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455862,"byte_end":455905,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455910,"byte_end":455945,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455950,"byte_end":455953,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":455958,"byte_end":456002,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456007,"byte_end":456042,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456047,"byte_end":456106,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456111,"byte_end":456118,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456606,"byte_end":456618,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456196,"byte_end":456233,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456238,"byte_end":456241,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456246,"byte_end":456260,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456265,"byte_end":456268,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456273,"byte_end":456280,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456285,"byte_end":456313,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456318,"byte_end":456321,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456326,"byte_end":456378,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456383,"byte_end":456386,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456391,"byte_end":456426,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456431,"byte_end":456434,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456439,"byte_end":456464,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456469,"byte_end":456504,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456509,"byte_end":456512,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456517,"byte_end":456542,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456547,"byte_end":456582,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456587,"byte_end":456594,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3385},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459454,"byte_end":459459,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3386}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459353,"byte_end":459393,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459394,"byte_end":459442,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3387},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":460019,"byte_end":460024,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459480,"byte_end":459527,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459528,"byte_end":459531,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459532,"byte_end":459604,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459605,"byte_end":459608,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459609,"byte_end":459623,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459624,"byte_end":459627,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459628,"byte_end":459693,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459694,"byte_end":459697,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459698,"byte_end":459705,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459706,"byte_end":459747,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459748,"byte_end":459790,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459791,"byte_end":459794,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459795,"byte_end":459830,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459831,"byte_end":459864,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459865,"byte_end":459911,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459912,"byte_end":459943,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":459944,"byte_end":460003,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":460004,"byte_end":460011,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10625},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":461092,"byte_end":461099,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":10628}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":460922,"byte_end":460995,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":461013,"byte_end":461080,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10633},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":462871,"byte_end":462876,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10636}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":462709,"byte_end":462774,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":462792,"byte_end":462859,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10646},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":463796,"byte_end":463801,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10648},{"krate":0,"index":10649},{"krate":0,"index":10650},{"krate":0,"index":10651}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10689},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":465001,"byte_end":465005,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10692},{"krate":0,"index":10693}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":464842,"byte_end":464904,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":464922,"byte_end":464989,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10698},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":465897,"byte_end":465909,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":10701},{"krate":0,"index":10702}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":465720,"byte_end":465800,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":465818,"byte_end":465885,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10707},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":466875,"byte_end":466884,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10710},{"krate":0,"index":10711}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":466704,"byte_end":466778,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":466796,"byte_end":466863,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10716},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":468224,"byte_end":468232,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":10719},{"krate":0,"index":10720},{"krate":0,"index":10721},{"krate":0,"index":10722}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":468052,"byte_end":468127,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":468145,"byte_end":468212,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10727},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":470040,"byte_end":470049,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":10730},{"krate":0,"index":10731},{"krate":0,"index":10732}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":469867,"byte_end":469943,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":469961,"byte_end":470028,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10737},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":473055,"byte_end":473067,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":10740},{"krate":0,"index":10741},{"krate":0,"index":10742},{"krate":0,"index":10743}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":472876,"byte_end":472958,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":472976,"byte_end":473043,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10748},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":474905,"byte_end":474914,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":10751},{"krate":0,"index":10752},{"krate":0,"index":10753},{"krate":0,"index":10754}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":474731,"byte_end":474808,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":474826,"byte_end":474893,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3635},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476693,"byte_end":476699,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3636}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476591,"byte_end":476632,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476633,"byte_end":476681,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3637},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477256,"byte_end":477262,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476719,"byte_end":476788,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476789,"byte_end":476792,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476793,"byte_end":476873,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476874,"byte_end":476893,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476894,"byte_end":476897,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476898,"byte_end":476912,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476913,"byte_end":476916,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476917,"byte_end":476924,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476925,"byte_end":476966,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":476967,"byte_end":477009,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477010,"byte_end":477013,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477014,"byte_end":477042,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477043,"byte_end":477082,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477083,"byte_end":477133,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477134,"byte_end":477180,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477181,"byte_end":477240,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477241,"byte_end":477248,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10759},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":478534,"byte_end":478538,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":10762},{"krate":0,"index":10763}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":478371,"byte_end":478437,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":478455,"byte_end":478522,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3677},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479308,"byte_end":479312,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3678}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479208,"byte_end":479247,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479248,"byte_end":479296,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3679},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479920,"byte_end":479924,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479333,"byte_end":479410,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479411,"byte_end":479414,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479415,"byte_end":479510,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479511,"byte_end":479568,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479569,"byte_end":479572,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479573,"byte_end":479587,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479588,"byte_end":479591,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479592,"byte_end":479603,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479604,"byte_end":479645,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479646,"byte_end":479689,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479690,"byte_end":479693,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479694,"byte_end":479731,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479732,"byte_end":479764,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479765,"byte_end":479814,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479815,"byte_end":479844,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479845,"byte_end":479904,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479905,"byte_end":479912,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10768},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481111,"byte_end":481119,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":10770}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481014,"byte_end":481082,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":10774},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481248,"byte_end":481257,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":10776}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481151,"byte_end":481219,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481990,"byte_end":481997,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481744,"byte_end":481821,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481826,"byte_end":481897,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481902,"byte_end":481978,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":482499,"byte_end":482506,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":482253,"byte_end":482330,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":482335,"byte_end":482406,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":482411,"byte_end":482487,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3735},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484094,"byte_end":484106,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":483938,"byte_end":484013,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484014,"byte_end":484082,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3738},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484110,"byte_end":484125,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3739},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484127,"byte_end":484143,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10785},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485052,"byte_end":485056,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10787},{"krate":0,"index":10788}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486001,"byte_end":486006,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485248,"byte_end":485301,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485306,"byte_end":485352,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485357,"byte_end":485360,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485365,"byte_end":485375,"line_start":29,"line_end":29,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485380,"byte_end":485383,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485388,"byte_end":485465,"line_start":31,"line_end":31,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485470,"byte_end":485539,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485544,"byte_end":485547,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485552,"byte_end":485566,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485571,"byte_end":485574,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485579,"byte_end":485586,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485591,"byte_end":485632,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485637,"byte_end":485681,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485686,"byte_end":485689,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485694,"byte_end":485741,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485746,"byte_end":485774,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485779,"byte_end":485782,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485787,"byte_end":485821,"line_start":43,"line_end":43,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485826,"byte_end":485868,"line_start":44,"line_end":44,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485873,"byte_end":485876,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485881,"byte_end":485913,"line_start":46,"line_end":46,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485918,"byte_end":485977,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485982,"byte_end":485989,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486917,"byte_end":486926,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486053,"byte_end":486124,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486129,"byte_end":486203,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486208,"byte_end":486283,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486288,"byte_end":486312,"line_start":56,"line_end":56,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486317,"byte_end":486320,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486325,"byte_end":486339,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486344,"byte_end":486347,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486352,"byte_end":486359,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486364,"byte_end":486405,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486410,"byte_end":486454,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486459,"byte_end":486462,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486467,"byte_end":486514,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486519,"byte_end":486547,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486552,"byte_end":486555,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486560,"byte_end":486594,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486599,"byte_end":486641,"line_start":68,"line_end":68,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486646,"byte_end":486649,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486654,"byte_end":486675,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486680,"byte_end":486712,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486717,"byte_end":486720,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486725,"byte_end":486748,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486753,"byte_end":486795,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486800,"byte_end":486821,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486826,"byte_end":486829,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486834,"byte_end":486893,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":486898,"byte_end":486905,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10824},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489481,"byte_end":489487,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":10826},{"krate":0,"index":10827}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488526,"byte_end":488573,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488574,"byte_end":488577,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488578,"byte_end":488654,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488655,"byte_end":488733,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488734,"byte_end":488810,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488811,"byte_end":488886,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488887,"byte_end":488960,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488961,"byte_end":488992,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488993,"byte_end":488996,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":488997,"byte_end":489068,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489069,"byte_end":489148,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489149,"byte_end":489176,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489177,"byte_end":489180,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489181,"byte_end":489255,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489256,"byte_end":489330,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489331,"byte_end":489410,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489411,"byte_end":489452,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489796,"byte_end":489799,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489572,"byte_end":489643,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489648,"byte_end":489658,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489663,"byte_end":489666,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489671,"byte_end":489745,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489750,"byte_end":489784,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489978,"byte_end":489985,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489881,"byte_end":489948,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489953,"byte_end":489966,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490130,"byte_end":490137,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490032,"byte_end":490100,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490105,"byte_end":490118,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490268,"byte_end":490278,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490196,"byte_end":490256,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490419,"byte_end":490424,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490322,"byte_end":490394,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490399,"byte_end":490407,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490571,"byte_end":490574,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490479,"byte_end":490546,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490551,"byte_end":490559,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":491020,"byte_end":491023,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490627,"byte_end":490687,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490692,"byte_end":490695,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490700,"byte_end":490712,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490717,"byte_end":490720,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490725,"byte_end":490798,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490803,"byte_end":490880,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490885,"byte_end":490888,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490893,"byte_end":490950,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":490955,"byte_end":491008,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10831},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":492210,"byte_end":492215,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":10834},{"krate":0,"index":10835}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":492048,"byte_end":492113,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":492131,"byte_end":492198,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10840},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":493106,"byte_end":493119,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":10843},{"krate":0,"index":10844}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":492926,"byte_end":493009,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":493027,"byte_end":493094,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10849},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":494078,"byte_end":494086,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":10852},{"krate":0,"index":10853}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":493908,"byte_end":493981,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":493999,"byte_end":494066,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3861},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400811,"byte_end":400823,"line_start":152,"line_end":152,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":3866},{"krate":0,"index":3868},{"krate":0,"index":3870},{"krate":0,"index":3872},{"krate":0,"index":3874},{"krate":0,"index":3875}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400729,"byte_end":400800,"line_start":151,"line_end":151,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401676,"byte_end":401681,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400841,"byte_end":400906,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400911,"byte_end":400914,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400919,"byte_end":400999,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401004,"byte_end":401076,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401081,"byte_end":401102,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401107,"byte_end":401110,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401115,"byte_end":401129,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401134,"byte_end":401137,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401142,"byte_end":401149,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401154,"byte_end":401195,"line_start":162,"line_end":162,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401200,"byte_end":401244,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401249,"byte_end":401252,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401257,"byte_end":401301,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401306,"byte_end":401350,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401355,"byte_end":401358,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401363,"byte_end":401407,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401412,"byte_end":401444,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401449,"byte_end":401452,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401457,"byte_end":401490,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401495,"byte_end":401538,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401543,"byte_end":401592,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401597,"byte_end":401656,"line_start":174,"line_end":174,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401661,"byte_end":401668,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402734,"byte_end":402738,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401832,"byte_end":401906,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401911,"byte_end":401947,"line_start":185,"line_end":185,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401952,"byte_end":401955,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":401960,"byte_end":402038,"line_start":187,"line_end":187,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402043,"byte_end":402070,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402075,"byte_end":402078,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402083,"byte_end":402097,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402102,"byte_end":402105,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402110,"byte_end":402117,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402122,"byte_end":402163,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402168,"byte_end":402212,"line_start":194,"line_end":194,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402217,"byte_end":402220,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402225,"byte_end":402272,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402277,"byte_end":402307,"line_start":197,"line_end":197,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402312,"byte_end":402315,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402320,"byte_end":402372,"line_start":199,"line_end":199,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402377,"byte_end":402380,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402385,"byte_end":402456,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402461,"byte_end":402525,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402530,"byte_end":402575,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402580,"byte_end":402605,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402610,"byte_end":402650,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402655,"byte_end":402714,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402719,"byte_end":402726,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3866},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403144,"byte_end":403157,"line_start":220,"line_end":220,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402906,"byte_end":402990,"line_start":215,"line_end":215,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":402995,"byte_end":403013,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403018,"byte_end":403021,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403026,"byte_end":403104,"line_start":218,"line_end":218,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403109,"byte_end":403136,"line_start":219,"line_end":219,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404568,"byte_end":404578,"line_start":264,"line_end":264,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403355,"byte_end":403427,"line_start":227,"line_end":227,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403432,"byte_end":403490,"line_start":228,"line_end":228,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403495,"byte_end":403498,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403503,"byte_end":403577,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403582,"byte_end":403585,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403590,"byte_end":403667,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403672,"byte_end":403694,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403699,"byte_end":403702,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403707,"byte_end":403721,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403726,"byte_end":403729,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403734,"byte_end":403741,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403746,"byte_end":403787,"line_start":238,"line_end":238,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403792,"byte_end":403836,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403841,"byte_end":403844,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403849,"byte_end":403896,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403901,"byte_end":403931,"line_start":242,"line_end":242,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403936,"byte_end":403939,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403944,"byte_end":403986,"line_start":244,"line_end":244,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403991,"byte_end":403994,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":403999,"byte_end":404036,"line_start":246,"line_end":246,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404041,"byte_end":404100,"line_start":247,"line_end":247,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404105,"byte_end":404112,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404117,"byte_end":404120,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404125,"byte_end":404165,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404170,"byte_end":404173,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404178,"byte_end":404185,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404190,"byte_end":404231,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404236,"byte_end":404286,"line_start":254,"line_end":254,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404291,"byte_end":404294,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404299,"byte_end":404346,"line_start":256,"line_end":256,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404351,"byte_end":404381,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404386,"byte_end":404389,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404394,"byte_end":404448,"line_start":259,"line_end":259,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404453,"byte_end":404456,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404461,"byte_end":404534,"line_start":261,"line_end":261,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404539,"byte_end":404548,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404553,"byte_end":404560,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3870},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405383,"byte_end":405394,"line_start":290,"line_end":290,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404753,"byte_end":404826,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404831,"byte_end":404834,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404839,"byte_end":404897,"line_start":273,"line_end":273,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404902,"byte_end":404905,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404910,"byte_end":404924,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404929,"byte_end":404932,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404937,"byte_end":404944,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404949,"byte_end":404990,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":404995,"byte_end":405039,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405044,"byte_end":405047,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405052,"byte_end":405099,"line_start":281,"line_end":281,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405104,"byte_end":405147,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405152,"byte_end":405155,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405160,"byte_end":405215,"line_start":284,"line_end":284,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405220,"byte_end":405223,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405228,"byte_end":405253,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405258,"byte_end":405299,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405304,"byte_end":405363,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405368,"byte_end":405375,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3872},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406215,"byte_end":406229,"line_start":316,"line_end":316,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405575,"byte_end":405648,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405653,"byte_end":405656,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405661,"byte_end":405719,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405724,"byte_end":405727,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405732,"byte_end":405746,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405751,"byte_end":405754,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405759,"byte_end":405766,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405771,"byte_end":405812,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405817,"byte_end":405861,"line_start":305,"line_end":305,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405866,"byte_end":405869,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405874,"byte_end":405921,"line_start":307,"line_end":307,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405926,"byte_end":405972,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405977,"byte_end":405980,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":405985,"byte_end":406043,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406048,"byte_end":406051,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406056,"byte_end":406081,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406086,"byte_end":406131,"line_start":313,"line_end":313,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406136,"byte_end":406195,"line_start":314,"line_end":314,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406200,"byte_end":406207,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407572,"byte_end":407577,"line_start":352,"line_end":352,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406415,"byte_end":406486,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406491,"byte_end":406494,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406499,"byte_end":406569,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406574,"byte_end":406599,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406604,"byte_end":406607,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406612,"byte_end":406626,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406631,"byte_end":406634,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406639,"byte_end":406646,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406651,"byte_end":406692,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406697,"byte_end":406747,"line_start":332,"line_end":332,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406752,"byte_end":406755,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406760,"byte_end":406830,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406835,"byte_end":406905,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406910,"byte_end":406961,"line_start":336,"line_end":336,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406966,"byte_end":406969,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":406974,"byte_end":407017,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407022,"byte_end":407085,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407090,"byte_end":407137,"line_start":340,"line_end":340,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407142,"byte_end":407145,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407150,"byte_end":407155,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407160,"byte_end":407231,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407236,"byte_end":407288,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407293,"byte_end":407345,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407350,"byte_end":407355,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407360,"byte_end":407363,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407368,"byte_end":407430,"line_start":348,"line_end":348,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407435,"byte_end":407488,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407493,"byte_end":407552,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407557,"byte_end":407564,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408358,"byte_end":408362,"line_start":379,"line_end":379,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3861},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407765,"byte_end":407835,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407840,"byte_end":407871,"line_start":361,"line_end":361,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407876,"byte_end":407879,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407884,"byte_end":407898,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407903,"byte_end":407906,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407911,"byte_end":407918,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407923,"byte_end":407964,"line_start":366,"line_end":366,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":407969,"byte_end":408013,"line_start":367,"line_end":367,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408018,"byte_end":408021,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408026,"byte_end":408073,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408078,"byte_end":408106,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408111,"byte_end":408114,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408119,"byte_end":408153,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408158,"byte_end":408200,"line_start":373,"line_end":373,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408205,"byte_end":408208,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408213,"byte_end":408234,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408239,"byte_end":408274,"line_start":376,"line_end":376,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408279,"byte_end":408338,"line_start":377,"line_end":377,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":408343,"byte_end":408350,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3878},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409171,"byte_end":409184,"line_start":405,"line_end":405,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3883},{"krate":0,"index":3885}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409088,"byte_end":409160,"line_start":404,"line_end":404,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409925,"byte_end":409930,"line_start":428,"line_end":428,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409203,"byte_end":409268,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409273,"byte_end":409276,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409281,"byte_end":409295,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409300,"byte_end":409303,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409308,"byte_end":409315,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409320,"byte_end":409361,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409366,"byte_end":409415,"line_start":412,"line_end":412,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409420,"byte_end":409457,"line_start":413,"line_end":413,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409462,"byte_end":409465,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409470,"byte_end":409504,"line_start":415,"line_end":415,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409509,"byte_end":409512,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409517,"byte_end":409522,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409527,"byte_end":409573,"line_start":418,"line_end":418,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409578,"byte_end":409645,"line_start":419,"line_end":419,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409650,"byte_end":409693,"line_start":420,"line_end":420,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409698,"byte_end":409741,"line_start":421,"line_end":421,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409746,"byte_end":409778,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409783,"byte_end":409788,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409793,"byte_end":409796,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409801,"byte_end":409841,"line_start":425,"line_end":425,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409846,"byte_end":409905,"line_start":426,"line_end":426,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409910,"byte_end":409917,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410139,"byte_end":410144,"line_start":436,"line_end":436,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410066,"byte_end":410131,"line_start":435,"line_end":435,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410486,"byte_end":410491,"line_start":447,"line_end":447,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410280,"byte_end":410351,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410356,"byte_end":410359,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410364,"byte_end":410446,"line_start":445,"line_end":445,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410451,"byte_end":410478,"line_start":446,"line_end":446,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410901,"byte_end":410915,"line_start":459,"line_end":459,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410657,"byte_end":410743,"line_start":454,"line_end":454,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410748,"byte_end":410766,"line_start":455,"line_end":455,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410771,"byte_end":410774,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410779,"byte_end":410861,"line_start":457,"line_end":457,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":410866,"byte_end":410893,"line_start":458,"line_end":458,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411761,"byte_end":411770,"line_start":486,"line_end":486,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411108,"byte_end":411140,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411145,"byte_end":411148,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411153,"byte_end":411234,"line_start":468,"line_end":468,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411239,"byte_end":411261,"line_start":469,"line_end":469,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411266,"byte_end":411269,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411274,"byte_end":411352,"line_start":471,"line_end":471,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411357,"byte_end":411360,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411365,"byte_end":411379,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411384,"byte_end":411387,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411392,"byte_end":411399,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411404,"byte_end":411445,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411450,"byte_end":411495,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411500,"byte_end":411503,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411508,"byte_end":411555,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411560,"byte_end":411563,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411568,"byte_end":411611,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411616,"byte_end":411619,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411624,"byte_end":411677,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411682,"byte_end":411741,"line_start":484,"line_end":484,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":411746,"byte_end":411753,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3889},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415626,"byte_end":415638,"line_start":599,"line_end":599,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":3890},{"krate":0,"index":3891}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415544,"byte_end":415615,"line_start":598,"line_end":598,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415908,"byte_end":415912,"line_start":605,"line_end":605,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3889},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415656,"byte_end":415725,"line_start":600,"line_end":600,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415730,"byte_end":415783,"line_start":601,"line_end":601,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415788,"byte_end":415791,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415796,"byte_end":415873,"line_start":603,"line_end":603,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415878,"byte_end":415900,"line_start":604,"line_end":604,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416250,"byte_end":416265,"line_start":616,"line_end":616,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3889},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416067,"byte_end":416140,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416145,"byte_end":416169,"line_start":613,"line_end":613,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416174,"byte_end":416177,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416182,"byte_end":416242,"line_start":615,"line_end":615,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":3894},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416517,"byte_end":416532,"line_start":627,"line_end":627,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3899},{"krate":0,"index":3901}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416432,"byte_end":416506,"line_start":626,"line_end":626,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417486,"byte_end":417494,"line_start":651,"line_end":651,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":3894},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416553,"byte_end":416642,"line_start":628,"line_end":628,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416647,"byte_end":416679,"line_start":629,"line_end":629,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416684,"byte_end":416687,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416692,"byte_end":416785,"line_start":631,"line_end":631,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416790,"byte_end":416793,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416798,"byte_end":416809,"line_start":633,"line_end":633,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416814,"byte_end":416855,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416860,"byte_end":416939,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416944,"byte_end":416947,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416952,"byte_end":417040,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417045,"byte_end":417048,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417053,"byte_end":417109,"line_start":639,"line_end":639,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417114,"byte_end":417142,"line_start":640,"line_end":640,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417147,"byte_end":417150,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417155,"byte_end":417205,"line_start":642,"line_end":642,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417210,"byte_end":417238,"line_start":643,"line_end":643,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417243,"byte_end":417246,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417251,"byte_end":417307,"line_start":645,"line_end":645,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417312,"byte_end":417340,"line_start":646,"line_end":646,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417345,"byte_end":417348,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417353,"byte_end":417402,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417407,"byte_end":417466,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417471,"byte_end":417478,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418295,"byte_end":418308,"line_start":675,"line_end":675,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":3894},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417637,"byte_end":417715,"line_start":658,"line_end":658,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417720,"byte_end":417723,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417728,"byte_end":417739,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417744,"byte_end":417785,"line_start":661,"line_end":661,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417790,"byte_end":417869,"line_start":662,"line_end":662,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417874,"byte_end":417877,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417882,"byte_end":417951,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417956,"byte_end":417959,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":417964,"byte_end":418020,"line_start":666,"line_end":666,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418025,"byte_end":418053,"line_start":667,"line_end":667,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418058,"byte_end":418061,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418066,"byte_end":418116,"line_start":669,"line_end":669,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418121,"byte_end":418149,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418154,"byte_end":418157,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418162,"byte_end":418211,"line_start":672,"line_end":672,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418216,"byte_end":418275,"line_start":673,"line_end":673,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418280,"byte_end":418287,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3897},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419999,"byte_end":420009,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3894},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418416,"byte_end":418491,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418496,"byte_end":418563,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418568,"byte_end":418665,"line_start":684,"line_end":684,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418670,"byte_end":418673,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418678,"byte_end":418748,"line_start":686,"line_end":686,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418753,"byte_end":418827,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418832,"byte_end":418887,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418892,"byte_end":418895,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418900,"byte_end":418978,"line_start":690,"line_end":690,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":418983,"byte_end":419010,"line_start":691,"line_end":691,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419015,"byte_end":419018,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419023,"byte_end":419100,"line_start":693,"line_end":693,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419105,"byte_end":419127,"line_start":694,"line_end":694,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419132,"byte_end":419135,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419140,"byte_end":419154,"line_start":696,"line_end":696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419159,"byte_end":419162,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419167,"byte_end":419174,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419179,"byte_end":419220,"line_start":699,"line_end":699,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419225,"byte_end":419272,"line_start":700,"line_end":700,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419277,"byte_end":419280,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419285,"byte_end":419334,"line_start":702,"line_end":702,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419339,"byte_end":419364,"line_start":703,"line_end":703,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419369,"byte_end":419372,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419377,"byte_end":419400,"line_start":705,"line_end":705,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419405,"byte_end":419466,"line_start":706,"line_end":706,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419471,"byte_end":419500,"line_start":707,"line_end":707,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419505,"byte_end":419536,"line_start":708,"line_end":708,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419541,"byte_end":419557,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419562,"byte_end":419565,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419570,"byte_end":419593,"line_start":711,"line_end":711,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419598,"byte_end":419659,"line_start":712,"line_end":712,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419664,"byte_end":419693,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419698,"byte_end":419728,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419733,"byte_end":419749,"line_start":715,"line_end":715,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419754,"byte_end":419757,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419762,"byte_end":419785,"line_start":717,"line_end":717,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419790,"byte_end":419851,"line_start":718,"line_end":718,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419856,"byte_end":419885,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419890,"byte_end":419915,"line_start":720,"line_end":720,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419920,"byte_end":419979,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":419984,"byte_end":419991,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422188,"byte_end":422197,"line_start":781,"line_end":781,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3894},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420206,"byte_end":420281,"line_start":730,"line_end":730,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420286,"byte_end":420357,"line_start":731,"line_end":731,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420362,"byte_end":420457,"line_start":732,"line_end":732,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420462,"byte_end":420465,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420470,"byte_end":420540,"line_start":734,"line_end":734,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420545,"byte_end":420620,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420625,"byte_end":420695,"line_start":736,"line_end":736,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420700,"byte_end":420710,"line_start":737,"line_end":737,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420715,"byte_end":420718,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420723,"byte_end":420801,"line_start":739,"line_end":739,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420806,"byte_end":420833,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420838,"byte_end":420841,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420846,"byte_end":420923,"line_start":742,"line_end":742,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420928,"byte_end":420950,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420955,"byte_end":420958,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420963,"byte_end":420975,"line_start":745,"line_end":745,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420980,"byte_end":420983,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":420988,"byte_end":421061,"line_start":747,"line_end":747,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421066,"byte_end":421139,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421144,"byte_end":421218,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421223,"byte_end":421279,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421284,"byte_end":421287,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421292,"byte_end":421339,"line_start":752,"line_end":752,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421344,"byte_end":421347,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421352,"byte_end":421366,"line_start":754,"line_end":754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421371,"byte_end":421374,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421379,"byte_end":421386,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421391,"byte_end":421432,"line_start":757,"line_end":757,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421437,"byte_end":421484,"line_start":758,"line_end":758,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421489,"byte_end":421492,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421497,"byte_end":421543,"line_start":760,"line_end":760,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421548,"byte_end":421580,"line_start":761,"line_end":761,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421585,"byte_end":421588,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421593,"byte_end":421616,"line_start":763,"line_end":763,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421621,"byte_end":421675,"line_start":764,"line_end":764,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421680,"byte_end":421709,"line_start":765,"line_end":765,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421714,"byte_end":421743,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421748,"byte_end":421764,"line_start":767,"line_end":767,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421769,"byte_end":421772,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421777,"byte_end":421800,"line_start":769,"line_end":769,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421805,"byte_end":421859,"line_start":770,"line_end":770,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421864,"byte_end":421893,"line_start":771,"line_end":771,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421898,"byte_end":421925,"line_start":772,"line_end":772,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421930,"byte_end":421946,"line_start":773,"line_end":773,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421951,"byte_end":421954,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421959,"byte_end":421982,"line_start":775,"line_end":775,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":421987,"byte_end":422041,"line_start":776,"line_end":776,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422046,"byte_end":422075,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422080,"byte_end":422104,"line_start":778,"line_end":778,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422109,"byte_end":422168,"line_start":779,"line_end":779,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422173,"byte_end":422180,"line_start":780,"line_end":780,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423721,"byte_end":423726,"line_start":820,"line_end":820,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3894},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422375,"byte_end":422426,"line_start":788,"line_end":788,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422431,"byte_end":422518,"line_start":789,"line_end":789,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422523,"byte_end":422526,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422531,"byte_end":422597,"line_start":791,"line_end":791,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422602,"byte_end":422684,"line_start":792,"line_end":792,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422689,"byte_end":422749,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422754,"byte_end":422757,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422762,"byte_end":422797,"line_start":795,"line_end":795,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422802,"byte_end":422824,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422829,"byte_end":422832,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422837,"byte_end":422849,"line_start":798,"line_end":798,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422854,"byte_end":422857,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422862,"byte_end":422953,"line_start":800,"line_end":800,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422958,"byte_end":422961,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":422966,"byte_end":423028,"line_start":802,"line_end":802,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423033,"byte_end":423036,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423041,"byte_end":423055,"line_start":804,"line_end":804,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423060,"byte_end":423063,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423068,"byte_end":423075,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423080,"byte_end":423121,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423126,"byte_end":423173,"line_start":808,"line_end":808,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423178,"byte_end":423213,"line_start":809,"line_end":809,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423218,"byte_end":423221,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423226,"byte_end":423281,"line_start":811,"line_end":811,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423286,"byte_end":423289,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423294,"byte_end":423356,"line_start":813,"line_end":813,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423361,"byte_end":423432,"line_start":814,"line_end":814,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423437,"byte_end":423508,"line_start":815,"line_end":815,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423513,"byte_end":423584,"line_start":816,"line_end":816,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423589,"byte_end":423637,"line_start":817,"line_end":817,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423642,"byte_end":423701,"line_start":818,"line_end":818,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423706,"byte_end":423713,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3917},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":10858},{"krate":0,"index":11008},{"krate":0,"index":11009},{"krate":0,"index":11010},{"krate":0,"index":11011},{"krate":0,"index":11012},{"krate":0,"index":11013},{"krate":0,"index":11071}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":12031,"byte_end":12056,"line_start":336,"line_end":336,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":495002,"byte_end":495049,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":495050,"byte_end":495053,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":495054,"byte_end":495129,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mod.rs","byte_start":495130,"byte_end":495187,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10880},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715109,"byte_end":10715114,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":10882},{"krate":0,"index":10883},{"krate":0,"index":10884}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10714782,"byte_end":10714808,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10714809,"byte_end":10714812,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10714813,"byte_end":10714827,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10714828,"byte_end":10714831,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10714832,"byte_end":10714911,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10714912,"byte_end":10714994,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10714995,"byte_end":10715079,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715080,"byte_end":10715097,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":10907},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716426,"byte_end":10716429,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716376,"byte_end":10716414,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":10908},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716856,"byte_end":10716866,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716610,"byte_end":10716665,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716670,"byte_end":10716673,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716678,"byte_end":10716692,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716697,"byte_end":10716700,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716705,"byte_end":10716712,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716717,"byte_end":10716746,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716751,"byte_end":10716754,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716759,"byte_end":10716789,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716794,"byte_end":10716832,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716837,"byte_end":10716844,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10911},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717080,"byte_end":10717088,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716952,"byte_end":10716996,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717001,"byte_end":10717004,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717009,"byte_end":10717068,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":10912},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717509,"byte_end":10717513,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717344,"byte_end":10717380,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717385,"byte_end":10717388,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717393,"byte_end":10717466,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717471,"byte_end":10717497,"line_start":114,"line_end":114,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":10913},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10718141,"byte_end":10718148,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717631,"byte_end":10717686,"line_start":119,"line_end":119,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717691,"byte_end":10717694,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717699,"byte_end":10717774,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717779,"byte_end":10717853,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717858,"byte_end":10717861,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717866,"byte_end":10717880,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717885,"byte_end":10717888,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717893,"byte_end":10717900,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717905,"byte_end":10717946,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717951,"byte_end":10717980,"line_start":128,"line_end":128,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717985,"byte_end":10717988,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10717993,"byte_end":10718027,"line_start":130,"line_end":130,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10718032,"byte_end":10718058,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10718063,"byte_end":10718103,"line_start":132,"line_end":132,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10718108,"byte_end":10718117,"line_start":133,"line_end":133,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10718122,"byte_end":10718129,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10917},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10719870,"byte_end":10719885,"line_start":180,"line_end":180,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":10920},{"krate":0,"index":10921}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10719777,"byte_end":10719858,"line_start":179,"line_end":179,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":10936},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722420,"byte_end":10722430,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":10939}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722256,"byte_end":10722320,"line_start":253,"line_end":253,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722321,"byte_end":10722394,"line_start":254,"line_end":254,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722395,"byte_end":10722408,"line_start":255,"line_end":255,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10943},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722999,"byte_end":10723002,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722520,"byte_end":10722580,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722585,"byte_end":10722588,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722593,"byte_end":10722606,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722611,"byte_end":10722614,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722619,"byte_end":10722626,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722631,"byte_end":10722672,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722677,"byte_end":10722720,"line_start":267,"line_end":267,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722725,"byte_end":10722728,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722733,"byte_end":10722786,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722791,"byte_end":10722796,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722801,"byte_end":10722890,"line_start":271,"line_end":271,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722895,"byte_end":10722937,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722942,"byte_end":10722947,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722952,"byte_end":10722961,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722966,"byte_end":10722973,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722978,"byte_end":10722987,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10959},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724294,"byte_end":10724310,"line_start":317,"line_end":317,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":10963},{"krate":0,"index":10964},{"krate":0,"index":10965}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724110,"byte_end":10724198,"line_start":315,"line_end":315,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724199,"byte_end":10724282,"line_start":316,"line_end":316,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":10970},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10725076,"byte_end":10725079,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724487,"byte_end":10724547,"line_start":324,"line_end":324,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724552,"byte_end":10724555,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724560,"byte_end":10724573,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724578,"byte_end":10724581,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724586,"byte_end":10724593,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724598,"byte_end":10724639,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724644,"byte_end":10724705,"line_start":330,"line_end":330,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724710,"byte_end":10724713,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724718,"byte_end":10724771,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724776,"byte_end":10724781,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724786,"byte_end":10724875,"line_start":334,"line_end":334,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724880,"byte_end":10724970,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724975,"byte_end":10725014,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10725019,"byte_end":10725024,"line_start":337,"line_end":337,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10725029,"byte_end":10725038,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10725043,"byte_end":10725050,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10725055,"byte_end":10725064,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11380},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738133,"byte_end":10738142,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":11382},{"krate":0,"index":11383}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":10525688,"byte_end":10525697,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":11109},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739552,"byte_end":10739555,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738248,"byte_end":10738330,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738335,"byte_end":10738403,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738408,"byte_end":10738411,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738416,"byte_end":10738488,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738493,"byte_end":10738576,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738581,"byte_end":10738606,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738611,"byte_end":10738614,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738619,"byte_end":10738634,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738639,"byte_end":10738642,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738647,"byte_end":10738670,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738675,"byte_end":10738678,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738683,"byte_end":10738690,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738695,"byte_end":10738736,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738741,"byte_end":10738800,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738805,"byte_end":10738808,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738813,"byte_end":10738882,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738887,"byte_end":10738952,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738957,"byte_end":10738982,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738987,"byte_end":10739030,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739035,"byte_end":10739044,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739049,"byte_end":10739056,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739061,"byte_end":10739064,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739069,"byte_end":10739092,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739097,"byte_end":10739100,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739105,"byte_end":10739112,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739117,"byte_end":10739158,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739163,"byte_end":10739215,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739220,"byte_end":10739265,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739270,"byte_end":10739273,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739278,"byte_end":10739347,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739352,"byte_end":10739437,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739442,"byte_end":10739467,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739472,"byte_end":10739514,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739519,"byte_end":10739528,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739533,"byte_end":10739540,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11110},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740060,"byte_end":10740070,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739650,"byte_end":10739714,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739719,"byte_end":10739787,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739792,"byte_end":10739842,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739847,"byte_end":10739901,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10739906,"byte_end":10739998,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740003,"byte_end":10740048,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":11133},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740338,"byte_end":10740355,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":11134}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740148,"byte_end":10740198,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740199,"byte_end":10740275,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740276,"byte_end":10740309,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":11137},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740461,"byte_end":10740472,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":11138}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740389,"byte_end":10740425,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":11112},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740743,"byte_end":10740751,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740529,"byte_end":10740603,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740608,"byte_end":10740648,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740653,"byte_end":10740656,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740661,"byte_end":10740731,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":11148},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10741273,"byte_end":10741280,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10741164,"byte_end":10741216,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":11132},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10743414,"byte_end":10743419,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10743047,"byte_end":10743115,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10743120,"byte_end":10743123,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10743128,"byte_end":10743195,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10743200,"byte_end":10743268,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10743273,"byte_end":10743347,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10743352,"byte_end":10743402,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":3923},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":495937,"byte_end":495944,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3925},{"krate":0,"index":3926}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3925},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":495959,"byte_end":495965,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3926},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":495974,"byte_end":495983,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3933},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496176,"byte_end":496182,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496207,"byte_end":496215,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":3933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3950},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":497521,"byte_end":497525,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11179},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":497881,"byte_end":497888,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11200},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":498622,"byte_end":498635,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11216},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":498977,"byte_end":498986,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11231},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":499941,"byte_end":499948,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11246},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":500659,"byte_end":500667,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11261},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":501387,"byte_end":501398,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11273},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":502283,"byte_end":502295,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11285},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":503443,"byte_end":503457,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4114},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":504222,"byte_end":504228,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14590,"byte_end":14598,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15766,"byte_end":15777,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58672,"byte_end":58679,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58809,"byte_end":58816,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":59041,"byte_end":59048,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":59822,"byte_end":59829,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":60054,"byte_end":60061,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63075,"byte_end":63079,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63186,"byte_end":63190,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64919,"byte_end":64923,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":65036,"byte_end":65040,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66018,"byte_end":66021,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66190,"byte_end":66193,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66455,"byte_end":66458,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67664,"byte_end":67675,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67818,"byte_end":67829,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69056,"byte_end":69066,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69267,"byte_end":69273,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69316,"byte_end":69322,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69580,"byte_end":69585,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69739,"byte_end":69749,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69981,"byte_end":69986,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":70083,"byte_end":70088,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":70332,"byte_end":70338,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":70762,"byte_end":70768,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72834,"byte_end":72839,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74535,"byte_end":74541,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74693,"byte_end":74699,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76288,"byte_end":76293,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78000,"byte_end":78006,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78165,"byte_end":78171,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78599,"byte_end":78607,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78966,"byte_end":78976,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41823,"byte_end":41824,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":101402,"byte_end":101412,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":101563,"byte_end":101573,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":101696,"byte_end":101706,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102415,"byte_end":102425,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102555,"byte_end":102565,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102808,"byte_end":102818,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":103771,"byte_end":103781,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":104024,"byte_end":104034,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107358,"byte_end":107371,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107501,"byte_end":107514,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107757,"byte_end":107770,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":83948,"byte_end":83951,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109079,"byte_end":109083,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109679,"byte_end":109683,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109827,"byte_end":109831,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110434,"byte_end":110441,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":111002,"byte_end":111009,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":111154,"byte_end":111161,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":111187,"byte_end":111194,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111948,"byte_end":111957,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112560,"byte_end":112569,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":113667,"byte_end":113676,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":113877,"byte_end":113886,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115206,"byte_end":115218,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115444,"byte_end":115456,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":116569,"byte_end":116581,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":116785,"byte_end":116797,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":118454,"byte_end":118466,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":118780,"byte_end":118792,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":118979,"byte_end":118991,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119429,"byte_end":119435,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":120129,"byte_end":120135,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":120277,"byte_end":120283,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120786,"byte_end":120791,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120970,"byte_end":120975,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121007,"byte_end":121012,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121109,"byte_end":121114,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":128728,"byte_end":128735,"line_start":31,"line_end":31,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130526,"byte_end":130533,"line_start":87,"line_end":87,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":131196,"byte_end":131203,"line_start":112,"line_end":112,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131699,"byte_end":131705,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":134141,"byte_end":134147,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":134851,"byte_end":134857,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135420,"byte_end":135429,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136436,"byte_end":136445,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136628,"byte_end":136637,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":137307,"byte_end":137316,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":145924,"byte_end":145934,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147764,"byte_end":147774,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":148922,"byte_end":148932,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149414,"byte_end":149423,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":151262,"byte_end":151271,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152633,"byte_end":152641,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153719,"byte_end":153727,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":155158,"byte_end":155166,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156145,"byte_end":156151,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156490,"byte_end":156496,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156881,"byte_end":156887,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":157268,"byte_end":157274,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":157515,"byte_end":157521,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":157860,"byte_end":157866,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":158142,"byte_end":158148,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":158683,"byte_end":158689,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160435,"byte_end":160441,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161496,"byte_end":161502,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":162809,"byte_end":162815,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":163245,"byte_end":163251,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":218555,"byte_end":218560,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":218786,"byte_end":218791,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":219000,"byte_end":219005,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":220601,"byte_end":220608,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":220873,"byte_end":220880,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":221058,"byte_end":221065,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":222091,"byte_end":222096,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":222490,"byte_end":222495,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":222745,"byte_end":222750,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":223875,"byte_end":223881,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":224101,"byte_end":224107,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":224815,"byte_end":224821,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":225484,"byte_end":225489,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":225645,"byte_end":225650,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":226399,"byte_end":226404,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":227152,"byte_end":227161,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":6856},{"krate":0,"index":6857},{"krate":0,"index":6858},{"krate":0,"index":6859}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":227347,"byte_end":227356,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":227474,"byte_end":227483,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":228924,"byte_end":228930,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":229403,"byte_end":229409,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6924}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":229732,"byte_end":229738,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":230075,"byte_end":230081,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":232253,"byte_end":232262,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":232559,"byte_end":232568,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":6982},{"krate":0,"index":6983},{"krate":0,"index":6984},{"krate":0,"index":6985}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":232835,"byte_end":232844,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":233111,"byte_end":233120,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":235222,"byte_end":235229,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":235398,"byte_end":235405,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":235597,"byte_end":235604,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":237118,"byte_end":237122,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":237478,"byte_end":237482,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":237743,"byte_end":237747,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":237982,"byte_end":237986,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":239575,"byte_end":239582,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":239875,"byte_end":239882,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":240113,"byte_end":240120,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":240359,"byte_end":240366,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241467,"byte_end":241471,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":7260},{"krate":0,"index":7261},{"krate":0,"index":7262},{"krate":0,"index":7263}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241968,"byte_end":241972,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":242070,"byte_end":242074,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243276,"byte_end":243288,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245778,"byte_end":245790,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245910,"byte_end":245922,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":246807,"byte_end":246810,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":246999,"byte_end":247002,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":7384},{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7387}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":247171,"byte_end":247174,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":247342,"byte_end":247345,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248457,"byte_end":248461,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248512,"byte_end":248516,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248667,"byte_end":248671,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248810,"byte_end":248814,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249465,"byte_end":249479,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249630,"byte_end":249644,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249788,"byte_end":249802,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251113,"byte_end":251121,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":7527},{"krate":0,"index":7528},{"krate":0,"index":7529},{"krate":0,"index":7530},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":255087,"byte_end":255095,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":255237,"byte_end":255245,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":256404,"byte_end":256408,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":256653,"byte_end":256657,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":256768,"byte_end":256772,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257477,"byte_end":257483,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257835,"byte_end":257841,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258110,"byte_end":258116,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259377,"byte_end":259385,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259705,"byte_end":259713,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259897,"byte_end":259905,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260276,"byte_end":260286,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":260951,"byte_end":260955,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":7710},{"krate":0,"index":7711},{"krate":0,"index":7712},{"krate":0,"index":7713}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":261146,"byte_end":261150,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":261268,"byte_end":261272,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":262869,"byte_end":262878,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":263330,"byte_end":263339,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":7779},{"krate":0,"index":7780},{"krate":0,"index":7781},{"krate":0,"index":7782}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":263665,"byte_end":263674,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":263922,"byte_end":263931,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":266231,"byte_end":266235,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":7823},{"krate":0,"index":7824},{"krate":0,"index":7825},{"krate":0,"index":7826}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":266408,"byte_end":266412,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":267384,"byte_end":267388,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":268411,"byte_end":268420,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":268868,"byte_end":268877,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":7892},{"krate":0,"index":7893},{"krate":0,"index":7894},{"krate":0,"index":7895}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":269196,"byte_end":269205,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":270724,"byte_end":270733,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":272117,"byte_end":272126,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":272414,"byte_end":272423,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":7949},{"krate":0,"index":7950},{"krate":0,"index":7951},{"krate":0,"index":7952},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274540,"byte_end":274549,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":275581,"byte_end":275590,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":276532,"byte_end":276536,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":276787,"byte_end":276791,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":8010},{"krate":0,"index":8011},{"krate":0,"index":8012},{"krate":0,"index":8013}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":277037,"byte_end":277041,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":277267,"byte_end":277271,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279153,"byte_end":279156,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280742,"byte_end":280745,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280940,"byte_end":280943,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":283638,"byte_end":283644,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":8115},{"krate":0,"index":8116},{"krate":0,"index":8117},{"krate":0,"index":8118}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":284152,"byte_end":284158,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":285774,"byte_end":285780,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":286752,"byte_end":286763,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":8163},{"krate":0,"index":8164},{"krate":0,"index":8165},{"krate":0,"index":8166}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":287115,"byte_end":287126,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":289295,"byte_end":289306,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":290304,"byte_end":290308,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":290794,"byte_end":290798,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":290962,"byte_end":290966,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":8232},{"krate":0,"index":8233},{"krate":0,"index":8234},{"krate":0,"index":8235}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":291328,"byte_end":291332,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":292559,"byte_end":292563,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10639346,"byte_end":10639361,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8253}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10639693,"byte_end":10639708,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8256},{"krate":0,"index":8330},{"krate":0,"index":8331},{"krate":0,"index":8332},{"krate":0,"index":8333}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10640095,"byte_end":10640110,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8259},{"krate":0,"index":8260},{"krate":0,"index":8261}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10641564,"byte_end":10641579,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8264}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10642689,"byte_end":10642697,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8282}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10643044,"byte_end":10643052,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8285},{"krate":0,"index":8334},{"krate":0,"index":8335},{"krate":0,"index":8336},{"krate":0,"index":8337}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10643332,"byte_end":10643340,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8288},{"krate":0,"index":8289},{"krate":0,"index":8290}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10645677,"byte_end":10645694,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8311}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10646040,"byte_end":10646057,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8316}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10646490,"byte_end":10646507,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8321}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10646737,"byte_end":10646754,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8326},{"krate":0,"index":8327}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":293584,"byte_end":293595,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":8378},{"krate":0,"index":8379},{"krate":0,"index":8380},{"krate":0,"index":8381}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":293787,"byte_end":293798,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":294650,"byte_end":294661,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173756,"byte_end":173757,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":331531,"byte_end":331538,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":331831,"byte_end":331838,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":8439},{"krate":0,"index":8440},{"krate":0,"index":8441},{"krate":0,"index":8442}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":332119,"byte_end":332126,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":333269,"byte_end":333276,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":334194,"byte_end":334204,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2249},{"krate":0,"index":8686},{"krate":0,"index":8687},{"krate":0,"index":8688},{"krate":0,"index":8689}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":334397,"byte_end":334407,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":334528,"byte_end":334538,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":335637,"byte_end":335643,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":335935,"byte_end":335941,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":8885},{"krate":0,"index":8886},{"krate":0,"index":8887},{"krate":0,"index":8888}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":336219,"byte_end":336225,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":337502,"byte_end":337508,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338412,"byte_end":338419,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338473,"byte_end":338480,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338643,"byte_end":338650,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338792,"byte_end":338799,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2318},{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":339575,"byte_end":339585,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":339881,"byte_end":339891,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":340136,"byte_end":340146,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2347},{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":341545,"byte_end":341554,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":341950,"byte_end":341959,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":9015},{"krate":0,"index":9016},{"krate":0,"index":9017},{"krate":0,"index":9018}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":342202,"byte_end":342211,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":342468,"byte_end":342477,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":344618,"byte_end":344630,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":344930,"byte_end":344942,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":9076},{"krate":0,"index":9077},{"krate":0,"index":9078},{"krate":0,"index":9079}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":345139,"byte_end":345151,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":345429,"byte_end":345441,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":347625,"byte_end":347635,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":9120},{"krate":0,"index":9121},{"krate":0,"index":9122},{"krate":0,"index":9123}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":347900,"byte_end":347910,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":348156,"byte_end":348166,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":349775,"byte_end":349785,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":349925,"byte_end":349935,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":350123,"byte_end":350133,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":351131,"byte_end":351140,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":351359,"byte_end":351368,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2488},{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":352631,"byte_end":352638,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":352997,"byte_end":353004,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":353284,"byte_end":353291,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":353545,"byte_end":353552,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2527},{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":357415,"byte_end":357424,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":357686,"byte_end":357695,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":359441,"byte_end":359453,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":359909,"byte_end":359921,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2583},{"krate":0,"index":9404},{"krate":0,"index":9405},{"krate":0,"index":9406},{"krate":0,"index":9407}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":360261,"byte_end":360273,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":361772,"byte_end":361784,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":363012,"byte_end":363024,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2614}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":363476,"byte_end":363488,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":9473},{"krate":0,"index":9474},{"krate":0,"index":9475},{"krate":0,"index":9476}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":363826,"byte_end":363838,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":365445,"byte_end":365457,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10649352,"byte_end":10649370,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9497},{"krate":0,"index":9568},{"krate":0,"index":9569},{"krate":0,"index":9570},{"krate":0,"index":9571}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10649709,"byte_end":10649727,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9500},{"krate":0,"index":9501}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10651933,"byte_end":10651944,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9523},{"krate":0,"index":9572},{"krate":0,"index":9573},{"krate":0,"index":9574},{"krate":0,"index":9575}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10652281,"byte_end":10652292,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9526},{"krate":0,"index":9527}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10654450,"byte_end":10654470,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9549}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10654835,"byte_end":10654855,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9554}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10655094,"byte_end":10655114,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9559}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10655562,"byte_end":10655582,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9564},{"krate":0,"index":9565}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":366601,"byte_end":366614,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":366830,"byte_end":366843,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":367055,"byte_end":367068,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":368689,"byte_end":368702,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":369309,"byte_end":369322,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299691,"byte_end":299692,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371358,"byte_end":371362,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371984,"byte_end":371988,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":373179,"byte_end":373185,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":373212,"byte_end":373218,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":373526,"byte_end":373532,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374129,"byte_end":374139,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374183,"byte_end":374193,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374507,"byte_end":374517,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":377037,"byte_end":377042,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":377074,"byte_end":377079,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":377164,"byte_end":377169,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":377418,"byte_end":377423,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":378362,"byte_end":378366,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":378495,"byte_end":378499,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":379104,"byte_end":379108,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379767,"byte_end":379774,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379806,"byte_end":379813,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379898,"byte_end":379905,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":380150,"byte_end":380157,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380544,"byte_end":380550,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380581,"byte_end":380587,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":381352,"byte_end":381358,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382812,"byte_end":382818,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":384241,"byte_end":384247,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":384460,"byte_end":384466,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387810,"byte_end":387816,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2992}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":388056,"byte_end":388062,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":388342,"byte_end":388348,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10658724,"byte_end":10658736,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9800}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10658841,"byte_end":10658853,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10658884,"byte_end":10658896,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9805}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659019,"byte_end":10659031,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9808}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659212,"byte_end":10659224,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9811},{"krate":0,"index":9812}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661806,"byte_end":10661820,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661846,"byte_end":10661860,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9824},{"krate":0,"index":9825},{"krate":0,"index":9826},{"krate":0,"index":9827}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10663426,"byte_end":10663440,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9830}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10663533,"byte_end":10663547,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9833},{"krate":0,"index":9834},{"krate":0,"index":9835}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10664709,"byte_end":10664723,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9838}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10664889,"byte_end":10664903,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9841}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10665183,"byte_end":10665197,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9846}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10665367,"byte_end":10665381,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9849}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/abort.rs","byte_start":10692522,"byte_end":10692533,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9893}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693892,"byte_end":10693900,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9902},{"krate":0,"index":9903},{"krate":0,"index":9904}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10694974,"byte_end":10694982,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10695019,"byte_end":10695029,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9910},{"krate":0,"index":9911},{"krate":0,"index":9912}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10695881,"byte_end":10695891,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10695939,"byte_end":10695946,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9918},{"krate":0,"index":9919},{"krate":0,"index":9920}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10696209,"byte_end":10696216,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10696257,"byte_end":10696267,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9926},{"krate":0,"index":9927},{"krate":0,"index":9928}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697136,"byte_end":10697146,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697194,"byte_end":10697198,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9934},{"krate":0,"index":9935},{"krate":0,"index":9936}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697457,"byte_end":10697461,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697630,"byte_end":10697640,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697685,"byte_end":10697695,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697741,"byte_end":10697751,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697796,"byte_end":10697806,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697860,"byte_end":10697868,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697917,"byte_end":10697925,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10699410,"byte_end":10699414,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10699449,"byte_end":10699453,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10699485,"byte_end":10699489,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9989}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10700566,"byte_end":10700570,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9992},{"krate":0,"index":9993}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10701570,"byte_end":10701574,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9996}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10703024,"byte_end":10703039,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10028},{"krate":0,"index":10029},{"krate":0,"index":10030},{"krate":0,"index":10031}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10705695,"byte_end":10705710,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10034}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667768,"byte_end":10667784,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667825,"byte_end":10667841,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667870,"byte_end":10667886,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667911,"byte_end":10667927,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10050}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10668112,"byte_end":10668128,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10052}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10669835,"byte_end":10669851,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10055}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10669925,"byte_end":10669941,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10058},{"krate":0,"index":10059},{"krate":0,"index":10060},{"krate":0,"index":10061},{"krate":0,"index":10062},{"krate":0,"index":10063},{"krate":0,"index":10064},{"krate":0,"index":10065},{"krate":0,"index":10066},{"krate":0,"index":10067},{"krate":0,"index":10068},{"krate":0,"index":10069},{"krate":0,"index":10070}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10681472,"byte_end":10681488,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10073},{"krate":0,"index":10074},{"krate":0,"index":10083}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10686672,"byte_end":10686676,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10082}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10688931,"byte_end":10688947,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10086}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10689085,"byte_end":10689101,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10089},{"krate":0,"index":10090}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10689672,"byte_end":10689688,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10093}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10691338,"byte_end":10691354,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10108},{"krate":0,"index":10109},{"krate":0,"index":10110}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10691824,"byte_end":10691840,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10113}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10692116,"byte_end":10692132,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10118}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10692254,"byte_end":10692270,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10121}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707305,"byte_end":10707314,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10146}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707459,"byte_end":10707468,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10149},{"krate":0,"index":10150},{"krate":0,"index":10151},{"krate":0,"index":10152},{"krate":0,"index":10153},{"krate":0,"index":10154},{"krate":0,"index":10155}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708941,"byte_end":10708950,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10158}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10709049,"byte_end":10709058,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10161},{"krate":0,"index":10162}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10709842,"byte_end":10709851,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10165}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710869,"byte_end":10710878,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":10170}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10711023,"byte_end":10711032,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":10174}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10711215,"byte_end":10711224,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":10178},{"krate":0,"index":10179},{"krate":0,"index":10180}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10712307,"byte_end":10712311,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10196},{"krate":0,"index":10197},{"krate":0,"index":10198}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10712744,"byte_end":10712748,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10712803,"byte_end":10712810,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":10204},{"krate":0,"index":10205},{"krate":0,"index":10206}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10713247,"byte_end":10713254,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10713305,"byte_end":10713313,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10211},{"krate":0,"index":10212},{"krate":0,"index":10213}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10713741,"byte_end":10713749,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390710,"byte_end":390712,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390767,"byte_end":390769,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425217,"byte_end":425227,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425665,"byte_end":425675,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":426186,"byte_end":426196,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":426741,"byte_end":426751,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":427543,"byte_end":427553,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":428278,"byte_end":428288,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3126},{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":428919,"byte_end":428929,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3130}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":429073,"byte_end":429083,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":429345,"byte_end":429355,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3136},{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":429571,"byte_end":429581,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":431420,"byte_end":431429,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":10367},{"krate":0,"index":10368},{"krate":0,"index":10369},{"krate":0,"index":10370},{"krate":0,"index":3168},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":432574,"byte_end":432583,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":434195,"byte_end":434204,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3177},{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":435034,"byte_end":435043,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10371},{"krate":0,"index":10372},{"krate":0,"index":10373},{"krate":0,"index":10374}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":435121,"byte_end":435130,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3183}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":435446,"byte_end":435455,"line_start":154,"line_end":154,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":439423,"byte_end":439432,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":10416},{"krate":0,"index":10417},{"krate":0,"index":10418},{"krate":0,"index":10419},{"krate":0,"index":3212}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":440961,"byte_end":440970,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":442393,"byte_end":442402,"line_start":131,"line_end":131,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10420},{"krate":0,"index":10421}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":442483,"byte_end":442492,"line_start":135,"line_end":135,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10422},{"krate":0,"index":10423}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":442573,"byte_end":442582,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":442941,"byte_end":442950,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":443887,"byte_end":443892,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":445148,"byte_end":445153,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3255}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":445483,"byte_end":445488,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":446841,"byte_end":446846,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3265},{"krate":0,"index":3266}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":447957,"byte_end":447962,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":448015,"byte_end":448020,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":448162,"byte_end":448167,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3284},{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449937,"byte_end":449941,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3308},{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":451664,"byte_end":451671,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3331},{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453504,"byte_end":453510,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456710,"byte_end":456716,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":457003,"byte_end":457009,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3363},{"krate":0,"index":3364}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":457641,"byte_end":457647,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3367},{"krate":0,"index":3368}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":458851,"byte_end":458857,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10609},{"krate":0,"index":10610},{"krate":0,"index":10611},{"krate":0,"index":10612}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":458932,"byte_end":458938,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10613},{"krate":0,"index":10614},{"krate":0,"index":10615},{"krate":0,"index":10616}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":459016,"byte_end":459022,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10617},{"krate":0,"index":10618},{"krate":0,"index":10619},{"krate":0,"index":10620}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":459095,"byte_end":459101,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10621},{"krate":0,"index":10622},{"krate":0,"index":10623},{"krate":0,"index":10624}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":460084,"byte_end":460089,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3389}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":460437,"byte_end":460442,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":3392}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":460674,"byte_end":460679,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":461177,"byte_end":461184,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":461239,"byte_end":461246,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":461377,"byte_end":461384,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3415},{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":462954,"byte_end":462959,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":463012,"byte_end":463017,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3431}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":463130,"byte_end":463135,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":463938,"byte_end":463943,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3451}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":464106,"byte_end":464111,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3454},{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":465106,"byte_end":465110,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":465162,"byte_end":465166,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":465331,"byte_end":465335,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":466023,"byte_end":466035,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":466087,"byte_end":466099,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":466278,"byte_end":466290,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":466985,"byte_end":466994,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":467046,"byte_end":467055,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":467220,"byte_end":467229,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3515},{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":468372,"byte_end":468380,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":468435,"byte_end":468443,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":469412,"byte_end":469420,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":470175,"byte_end":470184,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":470236,"byte_end":470245,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":470490,"byte_end":470495,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3565}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":472330,"byte_end":472339,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":3571}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":473212,"byte_end":473224,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":473276,"byte_end":473288,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":474217,"byte_end":474229,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3598},{"krate":0,"index":3599}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":475049,"byte_end":475058,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":475113,"byte_end":475122,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":476094,"byte_end":476103,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3621},{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477327,"byte_end":477333,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3639},{"krate":0,"index":3640}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":478113,"byte_end":478119,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":478633,"byte_end":478637,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":478689,"byte_end":478693,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":478850,"byte_end":478854,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3664},{"krate":0,"index":3665}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479983,"byte_end":479987,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3684},{"krate":0,"index":3685}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":480705,"byte_end":480709,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481726,"byte_end":481734,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":482234,"byte_end":482243,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":482635,"byte_end":482643,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3721},{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":483146,"byte_end":483155,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3727},{"krate":0,"index":3729},{"krate":0,"index":3731},{"krate":0,"index":3733}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484170,"byte_end":484182,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3742}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484346,"byte_end":484358,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3745}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484592,"byte_end":484604,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485143,"byte_end":485147,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":10820},{"krate":0,"index":10821},{"krate":0,"index":10822},{"krate":0,"index":10823}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":487064,"byte_end":487068,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3772}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":487709,"byte_end":487713,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3775},{"krate":0,"index":3776}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489556,"byte_end":489562,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":491632,"byte_end":491638,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3795}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":491785,"byte_end":491791,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3798}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":492312,"byte_end":492317,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":492370,"byte_end":492375,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3813}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":492537,"byte_end":492542,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3816},{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":493226,"byte_end":493239,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":493292,"byte_end":493305,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":493478,"byte_end":493491,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3837},{"krate":0,"index":3838}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":494183,"byte_end":494191,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":494244,"byte_end":494252,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":494414,"byte_end":494422,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3858},{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409082,"byte_end":409083,"line_start":402,"line_end":402,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415538,"byte_end":415539,"line_start":596,"line_end":596,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416426,"byte_end":416427,"line_start":624,"line_end":624,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423906,"byte_end":423907,"line_start":828,"line_end":828,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715249,"byte_end":10715254,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10887}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715587,"byte_end":10715592,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10890}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715685,"byte_end":10715690,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10893}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715823,"byte_end":10715829,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":10901},{"krate":0,"index":10902}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716361,"byte_end":10716366,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":10907},{"krate":0,"index":10908}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716937,"byte_end":10716942,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":10911},{"krate":0,"index":10912},{"krate":0,"index":10913},{"krate":0,"index":10914},{"krate":0,"index":10915}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10720057,"byte_end":10720072,"line_start":186,"line_end":186,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10924}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10720503,"byte_end":10720518,"line_start":199,"line_end":199,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10927}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10720635,"byte_end":10720650,"line_start":205,"line_end":205,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10931},{"krate":0,"index":10932}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10721879,"byte_end":10721894,"line_start":241,"line_end":241,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":10935}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722496,"byte_end":10722506,"line_start":260,"line_end":260,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10943}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10723518,"byte_end":10723528,"line_start":290,"line_end":290,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10948}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10723734,"byte_end":10723744,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10951}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10723842,"byte_end":10723852,"line_start":302,"line_end":302,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10954},{"krate":0,"index":10955}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10723993,"byte_end":10724003,"line_start":309,"line_end":309,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10958}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724454,"byte_end":10724470,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10970}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10725600,"byte_end":10725616,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":10976}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10725881,"byte_end":10725897,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10980}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726009,"byte_end":10726025,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10984},{"krate":0,"index":10985}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726168,"byte_end":10726184,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":10989}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726461,"byte_end":10726466,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726512,"byte_end":10726517,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726684,"byte_end":10726699,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726803,"byte_end":10726818,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10727022,"byte_end":10727032,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10727082,"byte_end":10727092,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10727160,"byte_end":10727176,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10727247,"byte_end":10727263,"line_start":398,"line_end":398,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10729267,"byte_end":10729272,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10729309,"byte_end":10729314,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10729330,"byte_end":10729336,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11034},{"krate":0,"index":11035},{"krate":0,"index":11037},{"krate":0,"index":11038}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10734956,"byte_end":10734961,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11041}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10735083,"byte_end":10735088,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11044}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10735416,"byte_end":10735428,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11052}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10735592,"byte_end":10735604,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11055}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10735825,"byte_end":10735837,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10736219,"byte_end":10736230,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11060},{"krate":0,"index":11061}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10736393,"byte_end":10736404,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11064}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10736542,"byte_end":10736553,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":11067}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10736905,"byte_end":10736916,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11070}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738229,"byte_end":10738238,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":11109},{"krate":0,"index":11110}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740511,"byte_end":10740522,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":11112}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10741305,"byte_end":10741312,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11114}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10741495,"byte_end":10741502,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10741515,"byte_end":10741524,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":11118}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10742513,"byte_end":10742522,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11123},{"krate":0,"index":11124}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10742761,"byte_end":10742770,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11128},{"krate":0,"index":11129}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10743029,"byte_end":10743040,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":11132}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496047,"byte_end":496048,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3931},{"krate":0,"index":3932}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496283,"byte_end":496284,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496554,"byte_end":496555,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3948}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":497571,"byte_end":497575,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":497669,"byte_end":497673,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3960},{"krate":0,"index":3961}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":497932,"byte_end":497939,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3966},{"krate":0,"index":3967}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":498162,"byte_end":498169,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3972}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":498360,"byte_end":498367,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":498672,"byte_end":498685,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":499102,"byte_end":499111,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3989},{"krate":0,"index":3990}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":499395,"byte_end":499404,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3995}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":499666,"byte_end":499675,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4000}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":499997,"byte_end":500004,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":500223,"byte_end":500230,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4014}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":500408,"byte_end":500415,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4020}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":500716,"byte_end":500724,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4028},{"krate":0,"index":4029}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":500947,"byte_end":500955,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":501137,"byte_end":501145,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4041}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":501455,"byte_end":501466,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4050},{"krate":0,"index":4051}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":501726,"byte_end":501737,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4057}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":501974,"byte_end":501985,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":502352,"byte_end":502364,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4071},{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":502625,"byte_end":502637,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4078}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":502875,"byte_end":502887,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4084}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":503506,"byte_end":503520,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4097},{"krate":0,"index":4098}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":503743,"byte_end":503757,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4104}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":503958,"byte_end":503972,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4110}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":504278,"byte_end":504284,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4120}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":504377,"byte_end":504383,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4124},{"krate":0,"index":4125}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/unfold_state.rs","byte_start":504988,"byte_end":504999,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4132},{"krate":0,"index":4133}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11238,"byte_end":11244,"line_start":301,"line_end":301,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":100}},{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11339,"byte_end":11345,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1121}},{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166632,"byte_end":166649,"line_start":101,"line_end":101,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":9852}},{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/mod.rs","byte_start":166798,"byte_end":166808,"line_start":107,"line_end":107,"column_start":13,"column_end":23},"ref_id":{"krate":0,"index":10124}},{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11606,"byte_end":11610,"line_start":316,"line_end":316,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3017}},{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11621,"byte_end":11626,"line_start":318,"line_end":318,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3056}},{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":11824,"byte_end":11826,"line_start":327,"line_end":327,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3058}},{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lib.rs","byte_start":12065,"byte_end":12069,"line_start":337,"line_end":337,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3917}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/poll.rs","byte_start":14590,"byte_end":14598,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/async_await/pending.rs","byte_start":15766,"byte_end":15777,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58672,"byte_end":58679,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":58809,"byte_end":58816,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4146},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":59041,"byte_end":59048,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4146},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":59822,"byte_end":59829,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4146},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/flatten.rs","byte_start":60054,"byte_end":60061,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4146},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63075,"byte_end":63079,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":63186,"byte_end":63190,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":64919,"byte_end":64923,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4194},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/fuse.rs","byte_start":65036,"byte_end":65040,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4194},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66018,"byte_end":66021,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66190,"byte_end":66193,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4229},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/map.rs","byte_start":66455,"byte_end":66458,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67664,"byte_end":67675,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/catch_unwind.rs","byte_start":67818,"byte_end":67829,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69056,"byte_end":69066,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":273},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69267,"byte_end":69273,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69316,"byte_end":69322,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69580,"byte_end":69585,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69739,"byte_end":69749,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":273},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":69981,"byte_end":69986,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":70083,"byte_end":70088,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":70332,"byte_end":70338,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":70762,"byte_end":70768,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":72834,"byte_end":72839,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74535,"byte_end":74541,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":262},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":74693,"byte_end":74699,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":76288,"byte_end":76293,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78000,"byte_end":78006,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78165,"byte_end":78171,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78599,"byte_end":78607,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":270},"to":{"krate":21,"index":263}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/shared.rs","byte_start":78966,"byte_end":78976,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41823,"byte_end":41824,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":354},"to":{"krate":0,"index":355}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/future/mod.rs","byte_start":41955,"byte_end":41961,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":9578},"to":{"krate":0,"index":355}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":101402,"byte_end":101412,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":101563,"byte_end":101573,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4818},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/into_future.rs","byte_start":101696,"byte_end":101706,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4818},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102415,"byte_end":102425,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102555,"byte_end":102565,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4853},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":102808,"byte_end":102818,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":103771,"byte_end":103781,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4853},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten.rs","byte_start":104024,"byte_end":104034,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4853},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107358,"byte_end":107371,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107501,"byte_end":107514,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4900},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/try_flatten_err.rs","byte_start":107757,"byte_end":107770,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":83948,"byte_end":83951,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":506}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_future/mod.rs","byte_start":84034,"byte_end":84043,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":32},"to":{"krate":0,"index":506}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109079,"byte_end":109083,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5763},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109679,"byte_end":109683,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5763},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/lazy.rs","byte_start":109827,"byte_end":109831,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5763},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":110434,"byte_end":110441,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5769},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":111002,"byte_end":111009,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5769},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":111154,"byte_end":111161,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5769},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/pending.rs","byte_start":111187,"byte_end":111194,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5769},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":111948,"byte_end":111957,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5775},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":112560,"byte_end":112569,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":5775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":113667,"byte_end":113676,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5775},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/maybe_done.rs","byte_start":113877,"byte_end":113886,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5775},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115206,"byte_end":115218,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5788},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":115444,"byte_end":115456,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":116569,"byte_end":116581,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5788},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_maybe_done.rs","byte_start":116785,"byte_end":116797,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5788},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":118454,"byte_end":118466,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5806},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":118780,"byte_end":118792,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5806},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/option.rs","byte_start":118979,"byte_end":118991,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5806},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":119429,"byte_end":119435,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":120129,"byte_end":120135,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/poll_fn.rs","byte_start":120277,"byte_end":120283,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120786,"byte_end":120791,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":120970,"byte_end":120975,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5840},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121007,"byte_end":121012,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5840},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/ready.rs","byte_start":121109,"byte_end":121114,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5840},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":128728,"byte_end":128735,"line_start":31,"line_end":31,"column_start":24,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":130526,"byte_end":130533,"line_start":87,"line_end":87,"column_start":20,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/join_all.rs","byte_start":131196,"byte_end":131203,"line_start":112,"line_end":112,"column_start":37,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":131699,"byte_end":131705,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6194},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":134141,"byte_end":134147,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6194},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select.rs","byte_start":134851,"byte_end":134857,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6194},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":135420,"byte_end":135429,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":6202},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136436,"byte_end":136445,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":136628,"byte_end":136637,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":6202},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_all.rs","byte_start":137307,"byte_end":137316,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6202},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":145924,"byte_end":145934,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":147764,"byte_end":147774,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_join_all.rs","byte_start":148922,"byte_end":148932,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":149414,"byte_end":149423,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6530},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/try_select.rs","byte_start":151262,"byte_end":151271,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6530},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":152633,"byte_end":152641,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":6538},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":153719,"byte_end":153727,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6538},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/select_ok.rs","byte_start":155158,"byte_end":155166,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":6538},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156145,"byte_end":156151,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156490,"byte_end":156496,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":6544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":156881,"byte_end":156887,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":157268,"byte_end":157274,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":6544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":157515,"byte_end":157521,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6544},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":157860,"byte_end":157866,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6544},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":158142,"byte_end":158148,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6544},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":158683,"byte_end":158689,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":6544},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":160435,"byte_end":160441,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":6544},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":161496,"byte_end":161502,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6544},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":162809,"byte_end":162815,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6544},"to":{"krate":24,"index":25}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/future/either.rs","byte_start":163245,"byte_end":163251,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6544},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":218555,"byte_end":218560,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":218786,"byte_end":218791,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6583},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chain.rs","byte_start":219000,"byte_end":219005,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6583},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":220601,"byte_end":220608,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":220873,"byte_end":220880,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6632},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/collect.rs","byte_start":221058,"byte_end":221065,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6632},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":222091,"byte_end":222096,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":222490,"byte_end":222495,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6683},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/unzip.rs","byte_start":222745,"byte_end":222750,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6683},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":223875,"byte_end":223881,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":224101,"byte_end":224107,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":6741},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/concat.rs","byte_start":224815,"byte_end":224821,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":6741},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":225484,"byte_end":225489,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":6781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":225645,"byte_end":225650,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6781},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/cycle.rs","byte_start":226399,"byte_end":226404,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":6781},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":227152,"byte_end":227161,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":227347,"byte_end":227356,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6821},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/enumerate.rs","byte_start":227474,"byte_end":227483,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6821},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":228924,"byte_end":228930,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6860},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":229403,"byte_end":229409,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":229732,"byte_end":229738,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6860},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter.rs","byte_start":230075,"byte_end":230081,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6860},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":232253,"byte_end":232262,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6925},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":232559,"byte_end":232568,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":232835,"byte_end":232844,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6925},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/filter_map.rs","byte_start":233111,"byte_end":233120,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6925},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":235222,"byte_end":235229,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":235398,"byte_end":235405,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6993},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/flatten.rs","byte_start":235597,"byte_end":235604,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6993},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":237118,"byte_end":237122,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":7094},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":237478,"byte_end":237482,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":237743,"byte_end":237747,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7094},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fold.rs","byte_start":237982,"byte_end":237986,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":7094},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":239575,"byte_end":239582,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7163},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":239875,"byte_end":239882,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":7163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":240113,"byte_end":240120,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":7163},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each.rs","byte_start":240359,"byte_end":240366,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7163},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241467,"byte_end":241471,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":241968,"byte_end":241972,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7225},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/fuse.rs","byte_start":242070,"byte_end":242074,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7225},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":243276,"byte_end":243288,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245778,"byte_end":245790,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7264},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/into_future.rs","byte_start":245910,"byte_end":245922,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7264},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":246807,"byte_end":246810,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":7339},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":246999,"byte_end":247002,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":7339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":247171,"byte_end":247174,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":7339},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/map.rs","byte_start":247342,"byte_end":247345,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":7339},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248457,"byte_end":248461,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":7471},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248512,"byte_end":248516,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":7471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248667,"byte_end":248671,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":7471},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/next.rs","byte_start":248810,"byte_end":248814,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":7471},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249465,"byte_end":249479,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":7479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249630,"byte_end":249644,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":7479},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/select_next_some.rs","byte_start":249788,"byte_end":249802,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":7479},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":251113,"byte_end":251121,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":7492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":255087,"byte_end":255095,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":7492},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":255237,"byte_end":255245,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":7492},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":256404,"byte_end":256408,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":256653,"byte_end":256657,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":7531},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":256768,"byte_end":256772,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257477,"byte_end":257483,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7572},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":257835,"byte_end":257841,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":7572},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":258110,"byte_end":258116,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7572},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259377,"byte_end":259385,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":7621},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259705,"byte_end":259713,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":7621},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":259897,"byte_end":259905,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":7621},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/peek.rs","byte_start":260276,"byte_end":260286,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1689},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":260951,"byte_end":260955,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":7675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":261146,"byte_end":261150,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":7675},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip.rs","byte_start":261268,"byte_end":261272,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":7675},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":262869,"byte_end":262878,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":7714},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":263330,"byte_end":263339,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":263665,"byte_end":263674,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7714},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/skip_while.rs","byte_start":263922,"byte_end":263931,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7714},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":266231,"byte_end":266235,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":266408,"byte_end":266412,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":7788},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take.rs","byte_start":267384,"byte_end":267388,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":7788},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":268411,"byte_end":268420,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7827},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":268868,"byte_end":268877,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":7827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":269196,"byte_end":269205,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":7827},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_while.rs","byte_start":270724,"byte_end":270733,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":7827},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":272117,"byte_end":272126,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":7896},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":272414,"byte_end":272423,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":7896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":274540,"byte_end":274549,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":7896},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/take_until.rs","byte_start":275581,"byte_end":275590,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":7896},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":276532,"byte_end":276536,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7953},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":276787,"byte_end":276791,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":277037,"byte_end":277041,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7953},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/then.rs","byte_start":277267,"byte_end":277271,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":7953},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":279153,"byte_end":279156,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":8021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280742,"byte_end":280745,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":8021},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/zip.rs","byte_start":280940,"byte_end":280943,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":8021},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":283638,"byte_end":283644,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":8076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":284152,"byte_end":284158,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":8076},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/chunks.rs","byte_start":285774,"byte_end":285780,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":8076},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":286752,"byte_end":286763,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":8124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":287115,"byte_end":287126,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":8124},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/ready_chunks.rs","byte_start":289295,"byte_end":289306,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":8124},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":290304,"byte_end":290308,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":8167},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":290794,"byte_end":290798,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":8167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":290962,"byte_end":290966,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":8167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":291328,"byte_end":291332,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":8167},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/scan.rs","byte_start":292559,"byte_end":292563,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":8167},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10639346,"byte_end":10639361,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":11767},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10639693,"byte_end":10639708,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":11767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10640095,"byte_end":10640110,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":11767},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffer_unordered.rs","byte_start":10641564,"byte_end":10641579,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":11767},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10642689,"byte_end":10642697,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":11726},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10643044,"byte_end":10643052,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":11726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/buffered.rs","byte_start":10643332,"byte_end":10643340,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":11726},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10645677,"byte_end":10645694,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":11665},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10646040,"byte_end":10646057,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":11665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10646490,"byte_end":10646507,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":11665},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/for_each_concurrent.rs","byte_start":10646737,"byte_end":10646754,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":11665},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":293584,"byte_end":293595,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":8343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":293787,"byte_end":293798,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":8343},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/catch_unwind.rs","byte_start":294650,"byte_end":294661,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":8343},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173756,"byte_end":173757,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2055},"to":{"krate":0,"index":2056}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/stream/mod.rs","byte_start":173900,"byte_end":173906,"line_start":212,"line_end":212,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":2056}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":331531,"byte_end":331538,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":8382},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":331831,"byte_end":331838,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":8382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":332119,"byte_end":332126,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":8382},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/and_then.rs","byte_start":333269,"byte_end":333276,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":8382},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":334194,"byte_end":334204,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":8655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":334397,"byte_end":334407,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":8655},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_stream.rs","byte_start":334528,"byte_end":334538,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":8655},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":335637,"byte_end":335643,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":8828},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":335935,"byte_end":335941,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":8828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":336219,"byte_end":336225,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":8828},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/or_else.rs","byte_start":337502,"byte_end":337508,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":8828},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338412,"byte_end":338419,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":8889},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338473,"byte_end":338480,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":8889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338643,"byte_end":338650,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":8889},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_next.rs","byte_start":338792,"byte_end":338799,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":8889},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":339575,"byte_end":339585,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":8897},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":339881,"byte_end":339891,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":8897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each.rs","byte_start":340136,"byte_end":340146,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":8897},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":341545,"byte_end":341554,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":8954},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":341950,"byte_end":341959,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":8954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":342202,"byte_end":342211,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":8954},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter.rs","byte_start":342468,"byte_end":342477,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":8954},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":344618,"byte_end":344630,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":9019},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":344930,"byte_end":344942,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":9019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":345139,"byte_end":345151,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":9019},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_filter_map.rs","byte_start":345429,"byte_end":345441,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":9019},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":347625,"byte_end":347635,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":9085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":347900,"byte_end":347910,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":9085},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_flatten.rs","byte_start":348156,"byte_end":348166,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":9085},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":349775,"byte_end":349785,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":9131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":349925,"byte_end":349935,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":9131},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_collect.rs","byte_start":350123,"byte_end":350133,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":9131},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":351131,"byte_end":351140,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":9178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_concat.rs","byte_start":351359,"byte_end":351368,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":9178},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":352631,"byte_end":352638,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":9213},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":352997,"byte_end":353004,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":9213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":353284,"byte_end":353291,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":9213},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_fold.rs","byte_start":353545,"byte_end":353552,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":9213},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":357415,"byte_end":357424,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":9282},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_unfold.rs","byte_start":357686,"byte_end":357695,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":9282},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":359441,"byte_end":359453,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":9339},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":359909,"byte_end":359921,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":9339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":360261,"byte_end":360273,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":9339},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_skip_while.rs","byte_start":361772,"byte_end":361784,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":9339},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":363012,"byte_end":363024,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":9408},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":363476,"byte_end":363488,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":9408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":363826,"byte_end":363838,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":9408},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_take_while.rs","byte_start":365445,"byte_end":365457,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":9408},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10649352,"byte_end":10649370,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":11626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffer_unordered.rs","byte_start":10649709,"byte_end":10649727,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":11626},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10651933,"byte_end":10651944,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":11582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_buffered.rs","byte_start":10652281,"byte_end":10652292,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":11582},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10654450,"byte_end":10654470,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":11516},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10654835,"byte_end":10654855,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":11516},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10655094,"byte_end":10655114,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":11516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":10655562,"byte_end":10655582,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":11516},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":366601,"byte_end":366614,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":9576},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":366830,"byte_end":366843,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":9576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":367055,"byte_end":367068,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":9576},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":368689,"byte_end":368702,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":9576},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/into_async_read.rs","byte_start":369309,"byte_end":369322,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":9576},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299691,"byte_end":299692,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2668},"to":{"krate":0,"index":2669}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/try_stream/mod.rs","byte_start":299773,"byte_end":299782,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":97},"to":{"krate":0,"index":2669}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371358,"byte_end":371362,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":9595},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/iter.rs","byte_start":371984,"byte_end":371988,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":9595},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":373179,"byte_end":373185,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":9604},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":373212,"byte_end":373218,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":9604},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat.rs","byte_start":373526,"byte_end":373532,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":9604},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374129,"byte_end":374139,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":9613},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374183,"byte_end":374193,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":9613},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/repeat_with.rs","byte_start":374507,"byte_end":374517,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":9613},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":377037,"byte_end":377042,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":9622},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":377074,"byte_end":377079,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":9622},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":377164,"byte_end":377169,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":9622},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/empty.rs","byte_start":377418,"byte_end":377423,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":9622},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":378362,"byte_end":378366,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":9633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":378495,"byte_end":378499,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":9633},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/once.rs","byte_start":379104,"byte_end":379108,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":9633},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379767,"byte_end":379774,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":9664},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379806,"byte_end":379813,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":9664},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":379898,"byte_end":379905,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":9664},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/pending.rs","byte_start":380150,"byte_end":380157,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":9664},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380544,"byte_end":380550,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2912},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":380581,"byte_end":380587,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2912},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/poll_fn.rs","byte_start":381352,"byte_end":381358,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2912},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":382812,"byte_end":382818,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":9677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":384241,"byte_end":384247,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":9677},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select.rs","byte_start":384460,"byte_end":384466,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":9677},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":387810,"byte_end":387816,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":9723},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":388056,"byte_end":388062,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":9723},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/unfold.rs","byte_start":388342,"byte_end":388348,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":9723},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10658724,"byte_end":10658736,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":11481},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10658841,"byte_end":10658853,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":11481},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10658884,"byte_end":10658896,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":11481},"to":{"krate":2,"index":1841}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659019,"byte_end":10659031,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":11481},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10659212,"byte_end":10659224,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":11481},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661806,"byte_end":10661820,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":9814},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10661846,"byte_end":10661860,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":9814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10663426,"byte_end":10663440,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":9814},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10663533,"byte_end":10663547,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":9814},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10664709,"byte_end":10664723,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":9814},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10664889,"byte_end":10664903,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":9814},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10665183,"byte_end":10665197,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":9814},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_ordered.rs","byte_start":10665367,"byte_end":10665381,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":9814},"to":{"krate":2,"index":5538}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/abort.rs","byte_start":10692522,"byte_end":10692533,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":9890},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10693892,"byte_end":10693900,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":10272},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10694974,"byte_end":10694982,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":10272},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10695019,"byte_end":10695029,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":10233},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10695881,"byte_end":10695891,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":10233},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10695939,"byte_end":10695946,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":10243},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10696209,"byte_end":10696216,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":10243},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10696257,"byte_end":10696267,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":10252},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697136,"byte_end":10697146,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":10252},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697194,"byte_end":10697198,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":10263},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697457,"byte_end":10697461,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":10263},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697630,"byte_end":10697640,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":10252},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697685,"byte_end":10697695,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":10252},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697741,"byte_end":10697751,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":10233},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697796,"byte_end":10697806,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":10233},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697860,"byte_end":10697868,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":10272},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/iter.rs","byte_start":10697917,"byte_end":10697925,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":10272},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10699410,"byte_end":10699414,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":9974},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10699449,"byte_end":10699453,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":9974},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10699485,"byte_end":10699489,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":9974},"to":{"krate":21,"index":263}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10700566,"byte_end":10700570,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":9974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/task.rs","byte_start":10701570,"byte_end":10701574,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":9974},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10703024,"byte_end":10703039,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":10020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":10705695,"byte_end":10705710,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":10020},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667768,"byte_end":10667784,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667825,"byte_end":10667841,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667870,"byte_end":10667886,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10667911,"byte_end":10667927,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":10038},"to":{"krate":21,"index":10}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10668112,"byte_end":10668128,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":10038},"to":{"krate":21,"index":13}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10669835,"byte_end":10669851,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10669925,"byte_end":10669941,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":10038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10681472,"byte_end":10681488,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":10038},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10686672,"byte_end":10686676,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":10075},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10688931,"byte_end":10688947,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10689085,"byte_end":10689101,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":10038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10689672,"byte_end":10689688,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10691338,"byte_end":10691354,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10691824,"byte_end":10691840,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10692116,"byte_end":10692132,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":10038},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/futures_unordered/mod.rs","byte_start":10692254,"byte_end":10692270,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":5538}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707305,"byte_end":10707314,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":11443},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10707459,"byte_end":10707468,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":11443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10708941,"byte_end":10708950,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":11443},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10709049,"byte_end":10709058,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":11443},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10709842,"byte_end":10709851,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":11443},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10710869,"byte_end":10710878,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":11443},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10711023,"byte_end":10711032,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":11443},"to":{"krate":2,"index":5538}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10711215,"byte_end":10711224,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":11443},"to":{"krate":2,"index":5529}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10712307,"byte_end":10712311,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":11434},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10712744,"byte_end":10712748,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":11434},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10712803,"byte_end":10712810,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":11425},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10713247,"byte_end":10713254,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":11425},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10713305,"byte_end":10713313,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":11418},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/stream/select_all.rs","byte_start":10713741,"byte_end":10713749,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":11418},"to":{"krate":2,"index":5577}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390710,"byte_end":390712,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":3044},"to":{"krate":0,"index":3047}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390767,"byte_end":390769,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":3046},"to":{"krate":0,"index":3050}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":390848,"byte_end":390853,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":21,"index":10},"to":{"krate":0,"index":3047}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/task/spawn.rs","byte_start":393617,"byte_end":393627,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":21,"index":13},"to":{"krate":0,"index":3050}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425217,"byte_end":425227,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":10285},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":425665,"byte_end":425675,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":10285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":426186,"byte_end":426196,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":10285},"to":{"krate":1,"index":3254}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":426741,"byte_end":426751,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":10285},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":427543,"byte_end":427553,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":10285},"to":{"krate":1,"index":3193}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":428278,"byte_end":428288,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":10285},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":428919,"byte_end":428929,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":10285},"to":{"krate":1,"index":3272}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":429073,"byte_end":429083,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":10285},"to":{"krate":24,"index":25}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":429345,"byte_end":429355,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":10285},"to":{"krate":1,"index":3278}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/allow_std.rs","byte_start":429571,"byte_end":429581,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":10285},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":431420,"byte_end":431429,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":10322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":432574,"byte_end":432583,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":10322},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":434195,"byte_end":434204,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":10322},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":435034,"byte_end":435043,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":10322},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":435121,"byte_end":435130,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":10322},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_reader.rs","byte_start":435446,"byte_end":435455,"line_start":154,"line_end":154,"column_start":46,"column_end":55},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":10322},"to":{"krate":24,"index":25}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":439423,"byte_end":439432,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":10375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":440961,"byte_end":440970,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":10375},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":442393,"byte_end":442402,"line_start":131,"line_end":131,"column_start":34,"column_end":43},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":10375},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":442483,"byte_end":442492,"line_start":135,"line_end":135,"column_start":40,"column_end":49},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":10375},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":442573,"byte_end":442582,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":10375},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/buf_writer.rs","byte_start":442941,"byte_end":442950,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":10375},"to":{"krate":24,"index":25}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":443887,"byte_end":443892,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":10424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":445148,"byte_end":445153,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":10424},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":445483,"byte_end":445488,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":10424},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/chain.rs","byte_start":446841,"byte_end":446846,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":10424},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":447957,"byte_end":447962,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":10473},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":448015,"byte_end":448020,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":10473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/close.rs","byte_start":448162,"byte_end":448167,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":10473},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy.rs","byte_start":449937,"byte_end":449941,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":10490},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/copy_buf.rs","byte_start":451664,"byte_end":451671,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":10544},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":453504,"byte_end":453510,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":10597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":456710,"byte_end":456716,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":10597},"to":{"krate":24,"index":25}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":457003,"byte_end":457009,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":10597},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":457641,"byte_end":457647,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":10597},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":458851,"byte_end":458857,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":10597},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":458932,"byte_end":458938,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":10597},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":459016,"byte_end":459022,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":10597},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/cursor.rs","byte_start":459095,"byte_end":459101,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":10597},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":460084,"byte_end":460089,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":3385},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":460437,"byte_end":460442,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":3385},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/empty.rs","byte_start":460674,"byte_end":460679,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":3385},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":461177,"byte_end":461184,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":10625},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":461239,"byte_end":461246,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":10625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/fill_buf.rs","byte_start":461377,"byte_end":461384,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":10625},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":462954,"byte_end":462959,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":10633},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":463012,"byte_end":463017,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":10633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/flush.rs","byte_start":463130,"byte_end":463135,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":10633},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":463938,"byte_end":463943,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":10646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/lines.rs","byte_start":464106,"byte_end":464111,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":10646},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":465106,"byte_end":465110,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":10689},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":465162,"byte_end":465166,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":10689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read.rs","byte_start":465331,"byte_end":465335,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":10689},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":466023,"byte_end":466035,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":10698},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":466087,"byte_end":466099,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":10698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_vectored.rs","byte_start":466278,"byte_end":466290,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":10698},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":466985,"byte_end":466994,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":10707},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":467046,"byte_end":467055,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":10707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_exact.rs","byte_start":467220,"byte_end":467229,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":10707},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":468372,"byte_end":468380,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":10716},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":468435,"byte_end":468443,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":10716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_line.rs","byte_start":469412,"byte_end":469420,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":10716},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":470175,"byte_end":470184,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":10727},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":470236,"byte_end":470245,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":10727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":470490,"byte_end":470495,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":3560},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_end.rs","byte_start":472330,"byte_end":472339,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":10727},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":473212,"byte_end":473224,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":10737},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":473276,"byte_end":473288,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":10737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_to_string.rs","byte_start":474217,"byte_end":474229,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":10737},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":475049,"byte_end":475058,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":10748},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":475113,"byte_end":475122,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":10748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/read_until.rs","byte_start":476094,"byte_end":476103,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":10748},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":477327,"byte_end":477333,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3635},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/repeat.rs","byte_start":478113,"byte_end":478119,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3635},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":478633,"byte_end":478637,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":478689,"byte_end":478693,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":10759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/seek.rs","byte_start":478850,"byte_end":478854,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":479983,"byte_end":479987,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":3677},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/sink.rs","byte_start":480705,"byte_end":480709,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":3677},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":481726,"byte_end":481734,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":10768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":482234,"byte_end":482243,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":10774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":482635,"byte_end":482643,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":10768},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":483146,"byte_end":483155,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":10774},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484170,"byte_end":484182,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":3735},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484346,"byte_end":484358,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":3735},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/split.rs","byte_start":484592,"byte_end":484604,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":3735},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":485143,"byte_end":485147,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":10785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":487064,"byte_end":487068,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":10785},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/take.rs","byte_start":487709,"byte_end":487713,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":10785},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":489556,"byte_end":489562,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":10824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":491632,"byte_end":491638,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":10824},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/window.rs","byte_start":491785,"byte_end":491791,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":10824},"to":{"krate":2,"index":1991}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":492312,"byte_end":492317,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":10831},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":492370,"byte_end":492375,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":10831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write.rs","byte_start":492537,"byte_end":492542,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":10831},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":493226,"byte_end":493239,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":10840},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":493292,"byte_end":493305,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":10840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_vectored.rs","byte_start":493478,"byte_end":493491,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":10840},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":494183,"byte_end":494191,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":10849},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":494244,"byte_end":494252,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":10849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/write_all.rs","byte_start":494414,"byte_end":494422,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":10849},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":400825,"byte_end":400834,"line_start":152,"line_end":152,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":24,"index":17},"to":{"krate":0,"index":3861}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409082,"byte_end":409083,"line_start":402,"line_end":402,"column_start":46,"column_end":47},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":3877},"to":{"krate":0,"index":3861}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":409186,"byte_end":409196,"line_start":405,"line_end":405,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":24,"index":20},"to":{"krate":0,"index":3878}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415538,"byte_end":415539,"line_start":596,"line_end":596,"column_start":48,"column_end":49},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":3888},"to":{"krate":0,"index":3878}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":415640,"byte_end":415649,"line_start":599,"line_end":599,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":24,"index":25},"to":{"krate":0,"index":3889}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416426,"byte_end":416427,"line_start":624,"line_end":624,"column_start":46,"column_end":47},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":3893},"to":{"krate":0,"index":3889}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":416534,"byte_end":416546,"line_start":627,"line_end":627,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":24,"index":27},"to":{"krate":0,"index":3894}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/io/mod.rs","byte_start":423906,"byte_end":423907,"line_start":828,"line_end":828,"column_start":52,"column_end":53},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":3903},"to":{"krate":0,"index":3894}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715249,"byte_end":10715254,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":10880},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715587,"byte_end":10715592,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":10880},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715685,"byte_end":10715690,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":10880},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10715823,"byte_end":10715829,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":10894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716361,"byte_end":10716366,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":10880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10716937,"byte_end":10716942,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":10880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10720057,"byte_end":10720072,"line_start":186,"line_end":186,"column_start":32,"column_end":47},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":10917},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10720503,"byte_end":10720518,"line_start":199,"line_end":199,"column_start":33,"column_end":48},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":10917},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10720635,"byte_end":10720650,"line_start":205,"line_end":205,"column_start":32,"column_end":47},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":10917},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10721879,"byte_end":10721894,"line_start":241,"line_end":241,"column_start":26,"column_end":41},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":10917},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10722496,"byte_end":10722506,"line_start":260,"line_end":260,"column_start":21,"column_end":31},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":10936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10723518,"byte_end":10723528,"line_start":290,"line_end":290,"column_start":45,"column_end":55},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":10936},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10723734,"byte_end":10723744,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":10936},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10723842,"byte_end":10723852,"line_start":302,"line_end":302,"column_start":27,"column_end":37},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":10936},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10723993,"byte_end":10724003,"line_start":309,"line_end":309,"column_start":30,"column_end":40},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":10936},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10724454,"byte_end":10724470,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":10959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10725600,"byte_end":10725616,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":10959},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10725881,"byte_end":10725897,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":10959},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726009,"byte_end":10726025,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":10959},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726168,"byte_end":10726184,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":10959},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726461,"byte_end":10726466,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":10880},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726512,"byte_end":10726517,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":10880},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726684,"byte_end":10726699,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":10917},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10726803,"byte_end":10726818,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":10917},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10727022,"byte_end":10727032,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":10936},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10727082,"byte_end":10727092,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":10936},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10727160,"byte_end":10727176,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":10959},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/mutex.rs","byte_start":10727247,"byte_end":10727263,"line_start":398,"line_end":398,"column_start":58,"column_end":74},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":10959},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10729267,"byte_end":10729272,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":11078},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10729309,"byte_end":10729314,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":11078},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10729330,"byte_end":10729336,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":11072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10734956,"byte_end":10734961,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":11078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10735083,"byte_end":10735088,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":11078},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10735416,"byte_end":10735428,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":11045},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10735592,"byte_end":10735604,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":11045},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10735825,"byte_end":10735837,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":11045},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10736219,"byte_end":10736230,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":11085},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10736393,"byte_end":10736404,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":11085},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10736542,"byte_end":10736553,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":11085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/lock/bilock.rs","byte_start":10736905,"byte_end":10736916,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":11085},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10738229,"byte_end":10738238,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":11380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10740511,"byte_end":10740522,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":11137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10741305,"byte_end":10741312,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":11148},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10741495,"byte_end":10741502,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":11148},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10741515,"byte_end":10741524,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":11380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10742513,"byte_end":10742522,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":11380},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10742761,"byte_end":10742770,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":11380},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/abortable.rs","byte_start":10743029,"byte_end":10743040,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":11137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496047,"byte_end":496048,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":3928},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496187,"byte_end":496194,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":3923},"to":{"krate":0,"index":3933}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496283,"byte_end":496284,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":3937},"to":{"krate":0,"index":3933}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496470,"byte_end":496476,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":3933},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":496554,"byte_end":496555,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":3945},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":497571,"byte_end":497575,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":497669,"byte_end":497673,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":3950},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":497932,"byte_end":497939,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":11179},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":498162,"byte_end":498169,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":11179},"to":{"krate":0,"index":3933}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":498360,"byte_end":498367,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":11179},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":498672,"byte_end":498685,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":11200},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":499102,"byte_end":499111,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":11216},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":499395,"byte_end":499404,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":11216},"to":{"krate":0,"index":3933}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":499666,"byte_end":499675,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":11216},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":499997,"byte_end":500004,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":11231},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":500223,"byte_end":500230,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":11231},"to":{"krate":0,"index":3933}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":500408,"byte_end":500415,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":11231},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":500716,"byte_end":500724,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":11246},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":500947,"byte_end":500955,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":11246},"to":{"krate":0,"index":3933}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":501137,"byte_end":501145,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":11246},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":501455,"byte_end":501466,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":11261},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":501726,"byte_end":501737,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":11261},"to":{"krate":0,"index":3933}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":501974,"byte_end":501985,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":11261},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":502352,"byte_end":502364,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":11273},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":502625,"byte_end":502637,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":11273},"to":{"krate":0,"index":3933}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":502875,"byte_end":502887,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":11273},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":503506,"byte_end":503520,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":11285},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":503743,"byte_end":503757,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":11285},"to":{"krate":0,"index":3933}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":503958,"byte_end":503972,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":11285},"to":{"krate":0,"index":3941}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":504278,"byte_end":504284,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":4114},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/fns.rs","byte_start":504377,"byte_end":504383,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":4114},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.15/src/unfold_state.rs","byte_start":504988,"byte_end":504999,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":11322},"to":{"krate":4294967295,"index":4294967295}}]}
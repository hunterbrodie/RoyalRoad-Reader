{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2","program":"/home/hunter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tendril","/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=cb252b2ad847633f","-C","extra-filename=-cb252b2ad847633f","--out-dir","/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps","-L","dependency=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps","--extern","futf=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libfutf-d1024c7c733b96f9.rmeta","--extern","mac=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libmac-8306cf9204f168f2.rmeta","--extern","utf8=/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libutf8-5bb68ee22227466b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hunter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hunter/Code/royalroadreader/rust/target/rls/debug/deps/libtendril-cb252b2ad847633f.rmeta"},"prelude":{"crate_id":{"name":"tendril","disambiguator":[2785173965501474285,11450942721026549566]},"crate_root":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src","external_crates":[{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":18,"id":{"name":"mac","disambiguator":[14745655324080963180,7619003053570855368]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":19,"id":{"name":"futf","disambiguator":[9641814712129418584,16553748002428491591]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":20,"id":{"name":"debug_unreachable","disambiguator":[13900664947210866195,4914998003367898265]}},{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","num":21,"id":{"name":"utf8","disambiguator":[15831955838932307970,7543392669710369815]}}],"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":301,"byte_end":1032,"line_start":7,"line_end":35,"column_start":1,"column_end":71}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":654,"byte_end":660,"line_start":21,"line_end":21,"column_start":14,"column_end":20},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":678,"byte_end":689,"line_start":22,"line_end":22,"column_start":17,"column_end":28},"alias_span":null,"name":"TendrilSink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":709,"byte_end":715,"line_start":23,"line_end":23,"column_start":19,"column_end":25},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":253},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":717,"byte_end":726,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"alias_span":null,"name":"Atomicity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":728,"byte_end":737,"line_start":23,"line_end":23,"column_start":38,"column_end":47},"alias_span":null,"name":"NonAtomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":669},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":739,"byte_end":750,"line_start":23,"line_end":23,"column_start":49,"column_end":60},"alias_span":null,"name":"SendTendril","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":771,"byte_end":782,"line_start":24,"line_end":24,"column_start":19,"column_end":30},"alias_span":null,"name":"ByteTendril","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":784,"byte_end":791,"line_start":24,"line_end":24,"column_start":32,"column_end":39},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":793,"byte_end":801,"line_start":24,"line_end":24,"column_start":41,"column_end":49},"alias_span":null,"name":"SliceExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":803,"byte_end":813,"line_start":24,"line_end":24,"column_start":51,"column_end":61},"alias_span":null,"name":"StrTendril","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":815,"byte_end":830,"line_start":24,"line_end":24,"column_start":63,"column_end":78},"alias_span":null,"name":"SubtendrilError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":832,"byte_end":839,"line_start":24,"line_end":24,"column_start":80,"column_end":87},"alias_span":null,"name":"Tendril","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":863,"byte_end":877,"line_start":25,"line_end":25,"column_start":22,"column_end":36},"alias_span":null,"name":"IncompleteUtf8","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":301,"byte_end":1032,"line_start":7,"line_end":35,"column_start":1,"column_end":71},"name":"","qualname":"::","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":140},{"krate":0,"index":186},{"krate":0,"index":210},{"krate":0,"index":545},{"krate":0,"index":562},{"krate":0,"index":580}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":21},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fmt","qualname":"::fmt","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":701},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":58},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":75},{"krate":0,"index":581},{"krate":0,"index":589},{"krate":0,"index":587},{"krate":0,"index":585},{"krate":0,"index":583},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":590},{"krate":0,"index":598},{"krate":0,"index":596},{"krate":0,"index":594},{"krate":0,"index":592},{"krate":0,"index":87},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":599},{"krate":0,"index":607},{"krate":0,"index":605},{"krate":0,"index":603},{"krate":0,"index":601},{"krate":0,"index":101},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":608},{"krate":0,"index":616},{"krate":0,"index":614},{"krate":0,"index":612},{"krate":0,"index":610},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":617},{"krate":0,"index":625},{"krate":0,"index":623},{"krate":0,"index":621},{"krate":0,"index":619},{"krate":0,"index":129},{"krate":0,"index":134}],"decl_id":null,"docs":" Marker types for formats.","sig":null,"attributes":[{"value":"/ Marker types for formats.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1335,"byte_end":1364,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1365,"byte_end":1368,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This module defines the types and traits used to mark a `Tendril`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1369,"byte_end":1438,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ with the format of data it contains. It includes those formats","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1439,"byte_end":1505,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ for which `Tendril` supports at least some operations without","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1506,"byte_end":1571,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ conversion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1572,"byte_end":1587,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1588,"byte_end":1591,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ To convert a string tendril to/from a byte tendril in an arbitrary","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1592,"byte_end":1662,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ character encoding, see the `encode` and `decode` methods on","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1663,"byte_end":1727,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ `Tendril`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1728,"byte_end":1742,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1743,"byte_end":1746,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `Tendril` operations may become memory-unsafe if data invalid for","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1747,"byte_end":1816,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ the format sneaks in. For that reason, these traits require","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1817,"byte_end":1880,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ `unsafe impl`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1881,"byte_end":1899,"line_start":20,"line_end":20,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2106,"byte_end":2109,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"name":"imp","qualname":"::fmt::imp","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":715},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":55}],"decl_id":null,"docs":" Implementation details.","sig":null,"attributes":[{"value":"/ Implementation details.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":1995,"byte_end":2022,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2023,"byte_end":2026,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ You don't need these unless you are implementing","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2027,"byte_end":2079,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ a new format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2080,"byte_end":2097,"line_start":30,"line_end":30,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2371,"byte_end":2376,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"name":"Fixup","qualname":"::fmt::imp::Fixup","value":"Fixup { drop_left, drop_right, insert_len, insert_bytes }","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Describes how to fix up encodings when concatenating.","sig":null,"attributes":[{"value":"/ Describes how to fix up encodings when concatenating.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2181,"byte_end":2238,"line_start":35,"line_end":35,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2243,"byte_end":2246,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ We can drop characters on either side of the splice,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2251,"byte_end":2307,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/ and insert up to 4 bytes in the middle.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2312,"byte_end":2355,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":38},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2391,"byte_end":2400,"line_start":40,"line_end":40,"column_start":13,"column_end":22},"name":"drop_left","qualname":"::fmt::imp::Fixup::drop_left","value":"u32","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":39},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2419,"byte_end":2429,"line_start":41,"line_end":41,"column_start":13,"column_end":23},"name":"drop_right","qualname":"::fmt::imp::Fixup::drop_right","value":"u32","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":40},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2448,"byte_end":2458,"line_start":42,"line_end":42,"column_start":13,"column_end":23},"name":"insert_len","qualname":"::fmt::imp::Fixup::insert_len","value":"u32","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":41},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2477,"byte_end":2489,"line_start":43,"line_end":43,"column_start":13,"column_end":25},"name":"insert_bytes","qualname":"::fmt::imp::Fixup::insert_bytes","value":"[u8; 4]","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2896,"byte_end":2917,"line_start":63,"line_end":63,"column_start":16,"column_end":37},"name":"SingleByteCharIndices","qualname":"::fmt::imp::SingleByteCharIndices","value":"SingleByteCharIndices {  }","parent":null,"children":[{"krate":0,"index":49}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3361,"byte_end":3364,"line_start":80,"line_end":80,"column_start":16,"column_end":19},"name":"new","qualname":"<SingleByteCharIndices>::new","value":"pub fn new(&'a [u8]) -> SingleByteCharIndices","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3336,"byte_end":3345,"line_start":79,"line_end":79,"column_start":9,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3707,"byte_end":3713,"line_start":92,"line_end":92,"column_start":18,"column_end":24},"name":"Format","qualname":"::fmt::Format","value":"Format","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" Trait for format marker types.","sig":null,"attributes":[{"value":"/ Trait for format marker types.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3527,"byte_end":3561,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3562,"byte_end":3565,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The type implementing this trait is usually not instantiated.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3566,"byte_end":3631,"line_start":90,"line_end":90,"column_start":1,"column_end":66}},{"value":"/ It's used with a phantom type parameter of `Tendril`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3632,"byte_end":3689,"line_start":91,"line_end":91,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3782,"byte_end":3790,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"validate","qualname":"::fmt::Format::validate","value":"pub fn validate(&[u8]) -> bool","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Check whether the buffer is valid for this format.\n","sig":null,"attributes":[{"value":"/ Check whether the buffer is valid for this format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3720,"byte_end":3774,"line_start":93,"line_end":93,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3966,"byte_end":3981,"line_start":100,"line_end":100,"column_start":8,"column_end":23},"name":"validate_prefix","qualname":"::fmt::Format::validate_prefix","value":"pub fn validate_prefix(&[u8]) -> bool","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Check whether the buffer is valid for this format.","sig":null,"attributes":[{"value":"/ Check whether the buffer is valid for this format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3817,"byte_end":3871,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3876,"byte_end":3879,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ You may assume the buffer is a prefix of a valid buffer.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3884,"byte_end":3944,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3949,"byte_end":3958,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4204,"byte_end":4219,"line_start":108,"line_end":108,"column_start":8,"column_end":23},"name":"validate_suffix","qualname":"::fmt::Format::validate_suffix","value":"pub fn validate_suffix(&[u8]) -> bool","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Check whether the buffer is valid for this format.","sig":null,"attributes":[{"value":"/ Check whether the buffer is valid for this format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4055,"byte_end":4109,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4114,"byte_end":4117,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ You may assume the buffer is a suffix of a valid buffer.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4122,"byte_end":4182,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4187,"byte_end":4196,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4516,"byte_end":4531,"line_start":118,"line_end":118,"column_start":8,"column_end":23},"name":"validate_subseq","qualname":"::fmt::Format::validate_subseq","value":"pub fn validate_subseq(&[u8]) -> bool","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Check whether the buffer is valid for this format.","sig":null,"attributes":[{"value":"/ Check whether the buffer is valid for this format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4293,"byte_end":4347,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4352,"byte_end":4355,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ You may assume the buffer is a contiguous subsequence","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4360,"byte_end":4417,"line_start":114,"line_end":114,"column_start":5,"column_end":62}},{"value":"/ of a valid buffer, but not necessarily a prefix or","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4422,"byte_end":4476,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/ a suffix.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4481,"byte_end":4494,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4499,"byte_end":4508,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4934,"byte_end":4939,"line_start":130,"line_end":130,"column_start":15,"column_end":20},"name":"fixup","qualname":"::fmt::Format::fixup","value":"pub unsafe fn fixup(&[u8], &[u8]) -> imp::Fixup","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Compute any fixup needed when concatenating buffers.","sig":null,"attributes":[{"value":"/ Compute any fixup needed when concatenating buffers.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4605,"byte_end":4661,"line_start":122,"line_end":122,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4666,"byte_end":4669,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The default is to do nothing.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4674,"byte_end":4707,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4712,"byte_end":4715,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The function is `unsafe` because it may assume the input","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4720,"byte_end":4780,"line_start":126,"line_end":126,"column_start":5,"column_end":65}},{"value":"/ buffers are already valid for the format. Also, no","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4785,"byte_end":4839,"line_start":127,"line_end":127,"column_start":5,"column_end":59}},{"value":"/ bounds-checking is performed on the return value!","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4844,"byte_end":4897,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":4902,"byte_end":4919,"line_start":129,"line_end":129,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5169,"byte_end":5177,"line_start":139,"line_end":139,"column_start":18,"column_end":26},"name":"SubsetOf","qualname":"::fmt::SubsetOf","value":"SubsetOf<Super>: Format","parent":null,"children":[{"krate":0,"index":66}],"decl_id":null,"docs":" Indicates that one format is a subset of another.","sig":null,"attributes":[{"value":"/ Indicates that one format is a subset of another.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5018,"byte_end":5071,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5072,"byte_end":5075,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ The subset format can be converted to the superset format","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5076,"byte_end":5137,"line_start":137,"line_end":137,"column_start":1,"column_end":62}},{"value":"/ for free.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5138,"byte_end":5151,"line_start":138,"line_end":138,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5532,"byte_end":5549,"line_start":150,"line_end":150,"column_start":8,"column_end":25},"name":"revalidate_subset","qualname":"::fmt::SubsetOf::revalidate_subset","value":"pub fn revalidate_subset(&[u8]) -> bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Validate the *other* direction of conversion; check if\n this buffer from the superset format conforms to the\n subset format.","sig":null,"attributes":[{"value":"/ Validate the *other* direction of conversion; check if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5224,"byte_end":5282,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ this buffer from the superset format conforms to the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5287,"byte_end":5343,"line_start":144,"line_end":144,"column_start":5,"column_end":61}},{"value":"/ subset format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5348,"byte_end":5366,"line_start":145,"line_end":145,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5371,"byte_end":5374,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The default calls `Self::validate`, but some conversions","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5379,"byte_end":5439,"line_start":147,"line_end":147,"column_start":5,"column_end":65}},{"value":"/ may implement a check which is cheaper than validating","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5444,"byte_end":5502,"line_start":148,"line_end":148,"column_start":5,"column_end":63}},{"value":"/ from scratch.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5507,"byte_end":5524,"line_start":149,"line_end":149,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":67},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5731,"byte_end":5742,"line_start":157,"line_end":157,"column_start":18,"column_end":29},"name":"SliceFormat","qualname":"::fmt::SliceFormat","value":"SliceFormat: Format + Sized","parent":null,"children":[{"krate":0,"index":68}],"decl_id":null,"docs":" Indicates a format which corresponds to a Rust slice type,\n representing exactly the same invariants.\n","sig":null,"attributes":[{"value":"/ Indicates a format which corresponds to a Rust slice type,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5605,"byte_end":5667,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/ representing exactly the same invariants.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5668,"byte_end":5713,"line_start":156,"line_end":156,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":68},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5770,"byte_end":5775,"line_start":158,"line_end":158,"column_start":10,"column_end":15},"name":"Slice","qualname":"::fmt::SliceFormat::Slice","value":"type Slice: ?Sized + Slice;","parent":{"krate":0,"index":67},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":69},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5915,"byte_end":5925,"line_start":163,"line_end":163,"column_start":18,"column_end":28},"name":"CharFormat","qualname":"::fmt::CharFormat","value":"CharFormat<'a>: Format","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"decl_id":null,"docs":" Indicates a format which contains characters from Unicode\n (all of it, or some proper subset).\n","sig":null,"attributes":[{"value":"/ Indicates a format which contains characters from Unicode","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5796,"byte_end":5857,"line_start":161,"line_end":161,"column_start":1,"column_end":62}},{"value":"/ (all of it, or some proper subset).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5858,"byte_end":5897,"line_start":162,"line_end":162,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":71},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6005,"byte_end":6009,"line_start":165,"line_end":165,"column_start":10,"column_end":14},"name":"Iter","qualname":"::fmt::CharFormat::Iter","value":"type Iter: Iterator<Item = (usize, char)>;","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Iterator for characters and their byte indices.\n","sig":null,"attributes":[{"value":"/ Iterator for characters and their byte indices.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5944,"byte_end":5995,"line_start":164,"line_end":164,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6219,"byte_end":6231,"line_start":171,"line_end":171,"column_start":15,"column_end":27},"name":"char_indices","qualname":"::fmt::CharFormat::char_indices","value":"pub unsafe fn char_indices(&'a [u8]) -> Self::Iter","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Iterate over the characters of the string and their byte\n indices.","sig":null,"attributes":[{"value":"/ Iterate over the characters of the string and their byte","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6048,"byte_end":6108,"line_start":167,"line_end":167,"column_start":5,"column_end":65}},{"value":"/ indices.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6113,"byte_end":6125,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6130,"byte_end":6133,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ You may assume the buffer is *already validated* for `Format`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6138,"byte_end":6204,"line_start":170,"line_end":170,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6416,"byte_end":6427,"line_start":176,"line_end":176,"column_start":8,"column_end":19},"name":"encode_char","qualname":"::fmt::CharFormat::encode_char","value":"pub fn encode_char<F>(char, F) -> Result<(), ()> where F: FnOnce(&[u8]) -> ()","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Encode the character as bytes and pass them to a continuation.","sig":null,"attributes":[{"value":"/ Encode the character as bytes and pass them to a continuation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6267,"byte_end":6333,"line_start":173,"line_end":173,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6338,"byte_end":6341,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(())` iff the character cannot be represented.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6346,"byte_end":6408,"line_start":175,"line_end":175,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6596,"byte_end":6601,"line_start":182,"line_end":182,"column_start":18,"column_end":23},"name":"Slice","qualname":"::fmt::Slice","value":"Slice","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" Indicates a Rust slice type that is represented in memory as bytes.\n","sig":null,"attributes":[{"value":"/ Indicates a Rust slice type that is represented in memory as bytes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6507,"byte_end":6578,"line_start":181,"line_end":181,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6654,"byte_end":6662,"line_start":184,"line_end":184,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::fmt::Slice::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Access the raw bytes of the slice.\n","sig":null,"attributes":[{"value":"/ Access the raw bytes of the slice.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6608,"byte_end":6646,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6834,"byte_end":6844,"line_start":190,"line_end":190,"column_start":15,"column_end":25},"name":"from_bytes","qualname":"::fmt::Slice::from_bytes","value":"pub unsafe fn from_bytes(&[u8]) -> &Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Convert a byte slice to this kind of slice.","sig":null,"attributes":[{"value":"/ Convert a byte slice to this kind of slice.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6685,"byte_end":6732,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6737,"byte_end":6740,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ You may assume the buffer is *already validated*","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6745,"byte_end":6797,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ for `Format`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6802,"byte_end":6819,"line_start":189,"line_end":189,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7019,"byte_end":7033,"line_start":196,"line_end":196,"column_start":15,"column_end":29},"name":"from_mut_bytes","qualname":"::fmt::Slice::from_mut_bytes","value":"pub unsafe fn from_mut_bytes(&mut [u8]) -> &mut Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Convert a byte slice to this kind of slice.","sig":null,"attributes":[{"value":"/ Convert a byte slice to this kind of slice.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6870,"byte_end":6917,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6922,"byte_end":6925,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ You may assume the buffer is *already validated*","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6930,"byte_end":6982,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/ for `Format`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":6987,"byte_end":7004,"line_start":195,"line_end":195,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":581},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7208,"byte_end":7213,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::fmt::Bytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker type for uninterpreted bytes.","sig":null,"attributes":[{"value":"/ Marker type for uninterpreted bytes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7065,"byte_end":7105,"line_start":199,"line_end":199,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7106,"byte_end":7109,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Validation will never fail for this format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7110,"byte_end":7157,"line_start":201,"line_end":201,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7760,"byte_end":7765,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"ASCII","qualname":"::fmt::ASCII","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker type for ASCII text.\n","sig":null,"attributes":[{"value":"/ Marker type for ASCII text.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7678,"byte_end":7709,"line_start":233,"line_end":233,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8806,"byte_end":8810,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"name":"UTF8","qualname":"::fmt::UTF8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker type for UTF-8 text.\n","sig":null,"attributes":[{"value":"/ Marker type for UTF-8 text.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8724,"byte_end":8755,"line_start":284,"line_end":284,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":10753,"byte_end":10757,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"name":"WTF8","qualname":"::fmt::WTF8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker type for WTF-8 text.","sig":null,"attributes":[{"value":"/ Marker type for WTF-8 text.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":10605,"byte_end":10636,"line_start":369,"line_end":369,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":10637,"byte_end":10640,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ See the [WTF-8 spec](http://simonsapin.github.io/wtf-8/).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":10641,"byte_end":10702,"line_start":371,"line_end":371,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":617},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13739,"byte_end":13745,"line_start":475,"line_end":475,"column_start":12,"column_end":18},"name":"Latin1","qualname":"::fmt::Latin1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker type for the single-byte encoding of the first 256 Unicode codepoints.","sig":null,"attributes":[{"value":"/ Marker type for the single-byte encoding of the first 256 Unicode codepoints.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13319,"byte_end":13400,"line_start":467,"line_end":467,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13401,"byte_end":13404,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ This is IANA's \"ISO-8859-1\". It's ISO's \"ISO 8859-1\" with the addition of the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13405,"byte_end":13486,"line_start":469,"line_end":469,"column_start":1,"column_end":82}},{"value":"/ C0 and C1 control characters from ECMA-48 / ISO 6429.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13487,"byte_end":13544,"line_start":470,"line_end":470,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13545,"byte_end":13548,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ Not to be confused with WHATWG's \"latin1\" or \"iso8859-1\" labels (or the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13549,"byte_end":13624,"line_start":472,"line_end":472,"column_start":1,"column_end":76}},{"value":"/ many other aliases), which actually stand for Windows-1252.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13625,"byte_end":13688,"line_start":473,"line_end":473,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":140},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":737},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":168},{"krate":0,"index":174},{"krate":0,"index":178}],"decl_id":null,"docs":" Streams of tendrils.\n","sig":null,"attributes":[{"value":"/ Streams of tendrils.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":14905,"byte_end":14929,"line_start":7,"line_end":7,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15541,"byte_end":15552,"line_start":32,"line_end":32,"column_start":11,"column_end":22},"name":"TendrilSink","qualname":"::stream::TendrilSink","value":"TendrilSink<F, A = NonAtomic>","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":166}],"decl_id":null,"docs":" Trait for types that can process a tendril.","sig":null,"attributes":[{"value":"/ Trait for types that can process a tendril.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15219,"byte_end":15266,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15267,"byte_end":15270,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is a \"push\" interface, unlike the \"pull\" interface of","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15271,"byte_end":15333,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/ `Iterator<Item=Tendril<F>>`. The push interface matches","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15334,"byte_end":15393,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ [html5ever][] and other incremental parsers with a similar","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15394,"byte_end":15456,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ architecture.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15457,"byte_end":15474,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15475,"byte_end":15478,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [html5ever]: https://github.com/servo/html5ever","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15479,"byte_end":15530,"line_start":31,"line_end":31,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15654,"byte_end":15661,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"process","qualname":"::stream::TendrilSink::process","value":"pub fn process(&mut Self, Tendril<F, A>)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Process this tendril.\n","sig":null,"attributes":[{"value":"/ Process this tendril.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15621,"byte_end":15646,"line_start":37,"line_end":37,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15746,"byte_end":15751,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"error","qualname":"::stream::TendrilSink::error","value":"pub fn error(&mut Self, Cow)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Indicates that an error has occurred.\n","sig":null,"attributes":[{"value":"/ Indicates that an error has occurred.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15697,"byte_end":15738,"line_start":40,"line_end":40,"column_start":5,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":157},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15849,"byte_end":15855,"line_start":44,"line_end":44,"column_start":10,"column_end":16},"name":"Output","qualname":"::stream::TendrilSink::Output","value":"type Output;","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" What the overall result of processing is.\n","sig":null,"attributes":[{"value":"/ What the overall result of processing is.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15794,"byte_end":15839,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15906,"byte_end":15912,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"finish","qualname":"::stream::TendrilSink::finish","value":"pub fn finish(Self) -> Self::Output","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Indicates the end of the stream.\n","sig":null,"attributes":[{"value":"/ Indicates the end of the stream.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15862,"byte_end":15898,"line_start":46,"line_end":46,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15984,"byte_end":15987,"line_start":50,"line_end":50,"column_start":8,"column_end":11},"name":"one","qualname":"::stream::TendrilSink::one","value":"pub fn one<T>(Self, T) -> Self::Output where Self: Sized,\nT: Into<Tendril<F, A>>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Process one tendril and finish.\n","sig":null,"attributes":[{"value":"/ Process one tendril and finish.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":15941,"byte_end":15976,"line_start":49,"line_end":49,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":16236,"byte_end":16245,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::TendrilSink::from_iter","value":"pub fn from_iter<I>(Self, I) -> Self::Output where Self: Sized,\nI: IntoIterator, I::Item: Into<Tendril<F, A>>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Consume an iterator of tendrils, processing each item, then finish.\n","sig":null,"attributes":[{"value":"/ Consume an iterator of tendrils, processing each item, then finish.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":16157,"byte_end":16228,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":16629,"byte_end":16638,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"read_from","qualname":"::stream::TendrilSink::read_from","value":"pub fn read_from<R>(Self, &mut R) -> io::Result<Self::Output> where\nSelf: Sized, R: io::Read, F: fmt::SliceFormat<Slice = [u8]>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Read from the given stream of bytes until exhaustion and process incrementally,\n then finish. Return `Err` at the first I/O error.\n","sig":null,"attributes":[{"value":"/ Read from the given stream of bytes until exhaustion and process incrementally,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":16480,"byte_end":16563,"line_start":72,"line_end":72,"column_start":5,"column_end":88}},{"value":"/ then finish. Return `Err` at the first I/O error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":16568,"byte_end":16621,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":17891,"byte_end":17900,"line_start":107,"line_end":107,"column_start":8,"column_end":17},"name":"from_file","qualname":"::stream::TendrilSink::from_file","value":"pub fn from_file<P>(Self, P) -> io::Result<Self::Output> where Self: Sized,\nP: AsRef<Path>, F: fmt::SliceFormat<Slice = [u8]>","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Read from the file at the given path and process incrementally,\n then finish. Return `Err` at the first I/O error.\n","sig":null,"attributes":[{"value":"/ Read from the file at the given path and process incrementally,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":17758,"byte_end":17825,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"/ then finish. Return `Err` at the first I/O error.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":17830,"byte_end":17883,"line_start":106,"line_end":106,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18441,"byte_end":18457,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"Utf8LossyDecoder","qualname":"::stream::Utf8LossyDecoder","value":"Utf8LossyDecoder { inner_sink }","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"decl_id":null,"docs":" A `TendrilSink` adaptor that takes bytes, decodes them as UTF-8,\n lossily replace ill-formed byte sequences with U+FFFD replacement characters,\n and emits Unicode (`StrTendril`).","sig":null,"attributes":[{"value":"/ A `TendrilSink` adaptor that takes bytes, decodes them as UTF-8,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18107,"byte_end":18175,"line_start":117,"line_end":117,"column_start":1,"column_end":69}},{"value":"/ lossily replace ill-formed byte sequences with U+FFFD replacement characters,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18176,"byte_end":18257,"line_start":118,"line_end":118,"column_start":1,"column_end":82}},{"value":"/ and emits Unicode (`StrTendril`).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18258,"byte_end":18295,"line_start":119,"line_end":119,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18296,"byte_end":18299,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This does not allocate memory: the output is either subtendrils on the input,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18300,"byte_end":18381,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/ on inline tendrils for a single code point.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18382,"byte_end":18429,"line_start":122,"line_end":122,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":171},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18550,"byte_end":18560,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"inner_sink","qualname":"::stream::Utf8LossyDecoder::inner_sink","value":"Sink","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18817,"byte_end":18820,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<Utf8LossyDecoder<Sink, A>>::new","value":"pub fn new(Sink) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new incremental UTF-8 decoder.\n","sig":null,"attributes":[{"value":"/ Create a new incremental UTF-8 decoder.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18748,"byte_end":18791,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18796,"byte_end":18805,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":253},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44202,"byte_end":44211,"line_start":51,"line_end":51,"column_start":18,"column_end":27},"name":"Atomicity","qualname":"::tendril::Atomicity","value":"Atomicity: 'static","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"decl_id":null,"docs":" The multithreadedness of a tendril.","sig":null,"attributes":[{"value":"/ The multithreadedness of a tendril.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":43675,"byte_end":43714,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":43715,"byte_end":43718,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Exactly two types implement this trait:","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":43719,"byte_end":43762,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":43763,"byte_end":43766,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - `Atomic`: use this in your tendril and you will have a `Send` tendril which works","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":43767,"byte_end":43854,"line_start":43,"line_end":43,"column_start":1,"column_end":88}},{"value":"/   across threads; this is akin to `Arc`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":43855,"byte_end":43899,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":43900,"byte_end":43903,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `NonAtomic`: use this in your tendril and you will have a tendril which is neither","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":43904,"byte_end":43992,"line_start":46,"line_end":46,"column_start":1,"column_end":89}},{"value":"/   `Send` nor `Sync` but should be a tad faster; this is akin to `Rc`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":43993,"byte_end":44066,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44067,"byte_end":44070,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The layout of this trait is also mandated to be that of a `usize`,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44071,"byte_end":44141,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/ for it is used for reference counting.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44142,"byte_end":44184,"line_start":50,"line_end":50,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44249,"byte_end":44252,"line_start":53,"line_end":53,"column_start":8,"column_end":11},"name":"new","qualname":"::tendril::Atomicity::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44291,"byte_end":44300,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"increment","qualname":"::tendril::Atomicity::increment","value":"pub fn increment(&Self) -> usize","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44345,"byte_end":44354,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"decrement","qualname":"::tendril::Atomicity::decrement","value":"pub fn decrement(&Self) -> usize","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44399,"byte_end":44412,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"fence_acquire","qualname":"::tendril::Atomicity::fence_acquire","value":"pub fn fence_acquire()","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44660,"byte_end":44669,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"NonAtomic","qualname":"::tendril::NonAtomic","value":"","parent":null,"children":[],"decl_id":null,"docs":" A marker of a non-atomic tendril.","sig":null,"attributes":[{"value":"/ A marker of a non-atomic tendril.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44419,"byte_end":44456,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44457,"byte_end":44460,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This is the default for the second type parameter of a `Tendril`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44461,"byte_end":44529,"line_start":67,"line_end":67,"column_start":1,"column_end":69}},{"value":"/ and so doesn't typically need to be written.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44530,"byte_end":44578,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44579,"byte_end":44582,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This is akin to using `Rc` for reference counting.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44583,"byte_end":44637,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"repr(C)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44638,"byte_end":44648,"line_start":71,"line_end":71,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":45509,"byte_end":45515,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::tendril::Atomic","value":"","parent":null,"children":[],"decl_id":null,"docs":" A marker of an atomic (and hence concurrent) tendril.","sig":null,"attributes":[{"value":"/ A marker of an atomic (and hence concurrent) tendril.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":45256,"byte_end":45313,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":45314,"byte_end":45317,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is used as the second, optional type parameter of a `Tendril`;","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":45318,"byte_end":45389,"line_start":104,"line_end":104,"column_start":1,"column_end":72}},{"value":"/ `Tendril<F, Atomic>` thus implements`Send`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":45390,"byte_end":45437,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":45438,"byte_end":45441,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This is akin to using `Arc` for reference counting.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":45442,"byte_end":45497,"line_start":107,"line_end":107,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":633},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46409,"byte_end":46420,"line_start":154,"line_end":154,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::tendril::SubtendrilError::OutOfBounds","value":"SubtendrilError::OutOfBounds","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":635},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46426,"byte_end":46442,"line_start":155,"line_end":155,"column_start":5,"column_end":21},"name":"ValidationFailed","qualname":"::tendril::SubtendrilError::ValidationFailed","value":"SubtendrilError::ValidationFailed","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":632},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46387,"byte_end":46402,"line_start":153,"line_end":153,"column_start":10,"column_end":25},"name":"SubtendrilError","qualname":"::tendril::SubtendrilError","value":"pub enum SubtendrilError { OutOfBounds, ValidationFailed, }","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":635}],"decl_id":null,"docs":" Errors that can occur when slicing a `Tendril`.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when slicing a `Tendril`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46275,"byte_end":46326,"line_start":151,"line_end":151,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47960,"byte_end":47967,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"Tendril","qualname":"::tendril::Tendril","value":"Tendril {  }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" Compact string type for zero-copy parsing.","sig":null,"attributes":[{"value":"/ Compact string type for zero-copy parsing.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46447,"byte_end":46493,"line_start":158,"line_end":158,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46494,"byte_end":46497,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ `Tendril`s have the semantics of owned strings, but are sometimes views","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46498,"byte_end":46573,"line_start":160,"line_end":160,"column_start":1,"column_end":76}},{"value":"/ into shared buffers. When you mutate a `Tendril`, an owned copy is made","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46574,"byte_end":46649,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/ if necessary. Further mutations occur in-place until the string becomes","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46650,"byte_end":46725,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/ shared, e.g. with `clone()` or `subtendril()`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46726,"byte_end":46776,"line_start":163,"line_end":163,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46777,"byte_end":46780,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Buffer sharing is accomplished through thread-local (non-atomic) reference","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46781,"byte_end":46859,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ counting, which has very low overhead. The Rust type system will prevent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46860,"byte_end":46936,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ you at compile time from sending a `Tendril` between threads. We plan to","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46937,"byte_end":47013,"line_start":167,"line_end":167,"column_start":1,"column_end":77}},{"value":"/ relax this restriction in the future; see `README.md`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47014,"byte_end":47072,"line_start":168,"line_end":168,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47073,"byte_end":47076,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ Whereas `String` allocates in the heap for any non-empty string, `Tendril`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47077,"byte_end":47155,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ can store small strings (up to 8 bytes) in-line, without a heap allocation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47156,"byte_end":47235,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ `Tendril` is also smaller than `String` on 64-bit platforms — 16 bytes","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47236,"byte_end":47312,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ versus 24.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47313,"byte_end":47327,"line_start":173,"line_end":173,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47328,"byte_end":47331,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The type parameter `F` specifies the format of the tendril, for example","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47332,"byte_end":47407,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ UTF-8 text or uninterpreted bytes. The parameter will be instantiated","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47408,"byte_end":47481,"line_start":176,"line_end":176,"column_start":1,"column_end":74}},{"value":"/ with one of the marker types from `tendril::fmt`. See the `StrTendril`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47482,"byte_end":47556,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ and `ByteTendril` type aliases for two examples.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47557,"byte_end":47609,"line_start":178,"line_end":178,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47610,"byte_end":47613,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ The type parameter `A` indicates the atomicity of the tendril; it is by","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47614,"byte_end":47689,"line_start":180,"line_end":180,"column_start":1,"column_end":76}},{"value":"/ default `NonAtomic`, but can be specified as `Atomic` to get a tendril","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47690,"byte_end":47764,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"/ which implements `Send` (viz. a thread-safe tendril).","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47765,"byte_end":47822,"line_start":182,"line_end":182,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47823,"byte_end":47826,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ The maximum length of a `Tendril` is 4 GB. The library will panic if","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47827,"byte_end":47899,"line_start":184,"line_end":184,"column_start":1,"column_end":73}},{"value":"/ you attempt to go over the limit.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47900,"byte_end":47937,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"repr(C)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":47938,"byte_end":47948,"line_start":186,"line_end":186,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":295},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48461,"byte_end":48471,"line_start":219,"line_end":219,"column_start":10,"column_end":20},"name":"StrTendril","qualname":"::tendril::StrTendril","value":"Tendril<fmt::UTF8>","parent":null,"children":[],"decl_id":null,"docs":" `Tendril` for storing native Rust strings.\n","sig":null,"attributes":[{"value":"/ `Tendril` for storing native Rust strings.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48405,"byte_end":48451,"line_start":218,"line_end":218,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":296},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48543,"byte_end":48554,"line_start":222,"line_end":222,"column_start":10,"column_end":21},"name":"ByteTendril","qualname":"::tendril::ByteTendril","value":"Tendril<fmt::Bytes>","parent":null,"children":[],"decl_id":null,"docs":" `Tendril` for storing binary data.\n","sig":null,"attributes":[{"value":"/ `Tendril` for storing binary data.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48495,"byte_end":48533,"line_start":221,"line_end":221,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55430,"byte_end":55433,"line_start":557,"line_end":557,"column_start":12,"column_end":15},"name":"new","qualname":"<Tendril<F, A>>::new","value":"pub fn new() -> Tendril<F, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty `Tendril` in any format.\n","sig":null,"attributes":[{"value":"/ Create a new, empty `Tendril` in any format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55348,"byte_end":55396,"line_start":555,"line_end":555,"column_start":5,"column_end":53}},{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55401,"byte_end":55418,"line_start":556,"line_end":556,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55592,"byte_end":55605,"line_start":563,"line_end":563,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Tendril<F, A>>::with_capacity","value":"pub fn with_capacity(u32) -> Tendril<F, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty `Tendril` with a specified capacity.\n","sig":null,"attributes":[{"value":"/ Create a new, empty `Tendril` with a specified capacity.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55506,"byte_end":55566,"line_start":561,"line_end":561,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55571,"byte_end":55580,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":56069,"byte_end":56076,"line_start":578,"line_end":578,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Tendril<F, A>>::reserve","value":"pub fn reserve(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Reserve space for additional bytes.","sig":null,"attributes":[{"value":"/ Reserve space for additional bytes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55857,"byte_end":55896,"line_start":573,"line_end":573,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55901,"byte_end":55904,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ This is only a suggestion. There are cases where `Tendril` will","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55909,"byte_end":55976,"line_start":575,"line_end":575,"column_start":5,"column_end":72}},{"value":"/ decline to allocate until the buffer is actually modified.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55981,"byte_end":56043,"line_start":576,"line_end":576,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":56048,"byte_end":56057,"line_start":577,"line_end":577,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":56830,"byte_end":56835,"line_start":602,"line_end":602,"column_start":12,"column_end":17},"name":"len32","qualname":"<Tendril<F, A>>::len32","value":"pub fn len32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the `Tendril`.","sig":null,"attributes":[{"value":"/ Get the length of the `Tendril`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":56660,"byte_end":56696,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":56701,"byte_end":56704,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This is named not to conflict with `len()` on the underlying","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":56709,"byte_end":56773,"line_start":599,"line_end":599,"column_start":5,"column_end":69}},{"value":"/ slice, if any.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":56778,"byte_end":56796,"line_start":600,"line_end":600,"column_start":5,"column_end":23}},{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":56801,"byte_end":56818,"line_start":601,"line_end":601,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":57091,"byte_end":57100,"line_start":612,"line_end":612,"column_start":12,"column_end":21},"name":"is_shared","qualname":"<Tendril<F, A>>::is_shared","value":"pub fn is_shared(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the backing buffer shared?\n","sig":null,"attributes":[{"value":"/ Is the backing buffer shared?","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":57032,"byte_end":57065,"line_start":610,"line_end":610,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":57070,"byte_end":57079,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":57300,"byte_end":57314,"line_start":620,"line_end":620,"column_start":12,"column_end":26},"name":"is_shared_with","qualname":"<Tendril<F, A>>::is_shared_with","value":"pub fn is_shared_with(&Self, &Tendril<F, A>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the backing buffer shared with this other `Tendril`?\n","sig":null,"attributes":[{"value":"/ Is the backing buffer shared with this other `Tendril`?","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":57215,"byte_end":57274,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":57279,"byte_end":57288,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":57554,"byte_end":57559,"line_start":628,"line_end":628,"column_start":12,"column_end":17},"name":"clear","qualname":"<Tendril<F, A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Truncate to length 0 without discarding any owned storage.\n","sig":null,"attributes":[{"value":"/ Truncate to length 0 without discarding any owned storage.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":57466,"byte_end":57528,"line_start":626,"line_end":626,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":57533,"byte_end":57542,"line_start":627,"line_end":627,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58138,"byte_end":58157,"line_start":645,"line_end":645,"column_start":12,"column_end":31},"name":"try_from_byte_slice","qualname":"<Tendril<F, A>>::try_from_byte_slice","value":"pub fn try_from_byte_slice(&[u8]) -> Result<Tendril<F, A>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Build a `Tendril` by copying a byte slice, if it conforms to the format.\n","sig":null,"attributes":[{"value":"/ Build a `Tendril` by copying a byte slice, if it conforms to the format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58036,"byte_end":58112,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58117,"byte_end":58126,"line_start":644,"line_end":644,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58430,"byte_end":58438,"line_start":654,"line_end":654,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Tendril<F, A>>::as_bytes","value":"pub fn as_bytes(&Self) -> &Tendril<fmt::Bytes, A>","parent":null,"children":[],"decl_id":null,"docs":" View as uninterpreted bytes.\n","sig":null,"attributes":[{"value":"/ View as uninterpreted bytes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58364,"byte_end":58396,"line_start":652,"line_end":652,"column_start":5,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58401,"byte_end":58418,"line_start":653,"line_end":653,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58597,"byte_end":58607,"line_start":660,"line_end":660,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Tendril<F, A>>::into_bytes","value":"pub fn into_bytes(Self) -> Tendril<fmt::Bytes, A>","parent":null,"children":[],"decl_id":null,"docs":" Convert into uninterpreted bytes.\n","sig":null,"attributes":[{"value":"/ Convert into uninterpreted bytes.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58526,"byte_end":58563,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58568,"byte_end":58585,"line_start":659,"line_end":659,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58899,"byte_end":58908,"line_start":669,"line_end":669,"column_start":12,"column_end":21},"name":"into_send","qualname":"<Tendril<F, A>>::into_send","value":"pub fn into_send(Self) -> SendTendril<F>","parent":null,"children":[],"decl_id":null,"docs":" Convert `self` into a type which is `Send`.","sig":null,"attributes":[{"value":"/ Convert `self` into a type which is `Send`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58693,"byte_end":58740,"line_start":664,"line_end":664,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58745,"byte_end":58748,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ If the tendril is owned or inline, this is free,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58753,"byte_end":58805,"line_start":666,"line_end":666,"column_start":5,"column_end":57}},{"value":"/ but if it's shared this will entail a copy of the contents.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58810,"byte_end":58873,"line_start":667,"line_end":667,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":58878,"byte_end":58887,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":59287,"byte_end":59298,"line_start":680,"line_end":680,"column_start":12,"column_end":23},"name":"as_superset","qualname":"<Tendril<F, A>>::as_superset","value":"pub fn as_superset<Super>(&Self) -> &Tendril<Super, A> where\nF: fmt::SubsetOf<Super>, Super: fmt::Format","parent":null,"children":[],"decl_id":null,"docs":" View as a superset format, for free.\n","sig":null,"attributes":[{"value":"/ View as a superset format, for free.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":59213,"byte_end":59253,"line_start":678,"line_end":678,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":59258,"byte_end":59275,"line_start":679,"line_end":679,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":59542,"byte_end":59555,"line_start":690,"line_end":690,"column_start":12,"column_end":25},"name":"into_superset","qualname":"<Tendril<F, A>>::into_superset","value":"pub fn into_superset<Super>(Self) -> Tendril<Super, A> where\nF: fmt::SubsetOf<Super>, Super: fmt::Format","parent":null,"children":[],"decl_id":null,"docs":" Convert into a superset format, for free.\n","sig":null,"attributes":[{"value":"/ Convert into a superset format, for free.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":59463,"byte_end":59508,"line_start":688,"line_end":688,"column_start":5,"column_end":50}},{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":59513,"byte_end":59530,"line_start":689,"line_end":689,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":59814,"byte_end":59827,"line_start":700,"line_end":700,"column_start":12,"column_end":25},"name":"try_as_subset","qualname":"<Tendril<F, A>>::try_as_subset","value":"pub fn try_as_subset<Sub>(&Self) -> Result<&Tendril<Sub, A>, ()> where\nSub: fmt::SubsetOf<F>","parent":null,"children":[],"decl_id":null,"docs":" View as a subset format, if the `Tendril` conforms to that subset.\n","sig":null,"attributes":[{"value":"/ View as a subset format, if the `Tendril` conforms to that subset.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":59718,"byte_end":59788,"line_start":698,"line_end":698,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":59793,"byte_end":59802,"line_start":699,"line_end":699,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60189,"byte_end":60204,"line_start":712,"line_end":712,"column_start":12,"column_end":27},"name":"try_into_subset","qualname":"<Tendril<F, A>>::try_into_subset","value":"pub fn try_into_subset<Sub>(Self) -> Result<Tendril<Sub, A>, Self> where\nSub: fmt::SubsetOf<F>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a subset format, if the `Tendril` conforms to that subset.\n","sig":null,"attributes":[{"value":"/ Convert into a subset format, if the `Tendril` conforms to that subset.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60088,"byte_end":60163,"line_start":710,"line_end":710,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60168,"byte_end":60177,"line_start":711,"line_end":711,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60585,"byte_end":60605,"line_start":725,"line_end":725,"column_start":12,"column_end":32},"name":"try_reinterpret_view","qualname":"<Tendril<F, A>>::try_reinterpret_view","value":"pub fn try_reinterpret_view<Other>(&Self) -> Result<&Tendril<Other, A>, ()>\nwhere Other: fmt::Format","parent":null,"children":[],"decl_id":null,"docs":" View as another format, if the bytes of the `Tendril` are valid for\n that format.\n","sig":null,"attributes":[{"value":"/ View as another format, if the bytes of the `Tendril` are valid for","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60467,"byte_end":60538,"line_start":722,"line_end":722,"column_start":5,"column_end":76}},{"value":"/ that format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60543,"byte_end":60559,"line_start":723,"line_end":723,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60564,"byte_end":60573,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61191,"byte_end":61206,"line_start":742,"line_end":742,"column_start":12,"column_end":27},"name":"try_reinterpret","qualname":"<Tendril<F, A>>::try_reinterpret","value":"pub fn try_reinterpret<Other>(Self) -> Result<Tendril<Other, A>, Self> where\nOther: fmt::Format","parent":null,"children":[],"decl_id":null,"docs":" Convert into another format, if the `Tendril` conforms to that format.","sig":null,"attributes":[{"value":"/ Convert into another format, if the `Tendril` conforms to that format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60860,"byte_end":60934,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60939,"byte_end":60942,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This only re-validates the existing bytes under the new format. It","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":60947,"byte_end":61017,"line_start":737,"line_end":737,"column_start":5,"column_end":75}},{"value":"/ will *not* change the byte content of the tendril!","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61022,"byte_end":61076,"line_start":738,"line_end":738,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61081,"byte_end":61084,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ See the `encode` and `decode` methods for character encoding conversion.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61089,"byte_end":61165,"line_start":740,"line_end":740,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61170,"byte_end":61179,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61578,"byte_end":61592,"line_start":755,"line_end":755,"column_start":12,"column_end":26},"name":"try_push_bytes","qualname":"<Tendril<F, A>>::try_push_bytes","value":"pub fn try_push_bytes(&mut Self, &[u8]) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Push some bytes onto the end of the `Tendril`, if they conform to the\n format.\n","sig":null,"attributes":[{"value":"/ Push some bytes onto the end of the `Tendril`, if they conform to the","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61463,"byte_end":61536,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61541,"byte_end":61552,"line_start":753,"line_end":753,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61557,"byte_end":61566,"line_start":754,"line_end":754,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61922,"byte_end":61934,"line_start":767,"line_end":767,"column_start":12,"column_end":24},"name":"push_tendril","qualname":"<Tendril<F, A>>::push_tendril","value":"pub fn push_tendril(&mut Self, &Tendril<F, A>)","parent":null,"children":[],"decl_id":null,"docs":" Push another `Tendril` onto the end of this one.\n","sig":null,"attributes":[{"value":"/ Push another `Tendril` onto the end of this one.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61844,"byte_end":61896,"line_start":765,"line_end":765,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":61901,"byte_end":61910,"line_start":766,"line_end":766,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":63103,"byte_end":63117,"line_start":798,"line_end":798,"column_start":12,"column_end":26},"name":"try_subtendril","qualname":"<Tendril<F, A>>::try_subtendril","value":"pub fn try_subtendril(&Self, u32, u32)\n-> Result<Tendril<F, A>, SubtendrilError>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to slice this `Tendril` as a new `Tendril`.","sig":null,"attributes":[{"value":"/ Attempt to slice this `Tendril` as a new `Tendril`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":62722,"byte_end":62777,"line_start":789,"line_end":789,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":62782,"byte_end":62785,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This will share the buffer when possible. Mutating a shared buffer","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":62790,"byte_end":62860,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/ will copy the contents.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":62865,"byte_end":62892,"line_start":792,"line_end":792,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":62897,"byte_end":62900,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ The offset and length are in bytes. The function will return","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":62905,"byte_end":62969,"line_start":794,"line_end":794,"column_start":5,"column_end":69}},{"value":"/ `Err` if these are out of bounds, or if the resulting slice","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":62974,"byte_end":63037,"line_start":795,"line_end":795,"column_start":5,"column_end":68}},{"value":"/ does not conform to the format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":63042,"byte_end":63077,"line_start":796,"line_end":796,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":63082,"byte_end":63091,"line_start":797,"line_end":797,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":63840,"byte_end":63850,"line_start":822,"line_end":822,"column_start":12,"column_end":22},"name":"subtendril","qualname":"<Tendril<F, A>>::subtendril","value":"pub fn subtendril(&Self, u32, u32) -> Tendril<F, A>","parent":null,"children":[],"decl_id":null,"docs":" Slice this `Tendril` as a new `Tendril`.","sig":null,"attributes":[{"value":"/ Slice this `Tendril` as a new `Tendril`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":63710,"byte_end":63754,"line_start":818,"line_end":818,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":63759,"byte_end":63762,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Panics on bounds or validity check failure.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":63767,"byte_end":63814,"line_start":820,"line_end":820,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":63819,"byte_end":63828,"line_start":821,"line_end":821,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64136,"byte_end":64149,"line_start":831,"line_end":831,"column_start":12,"column_end":25},"name":"try_pop_front","qualname":"<Tendril<F, A>>::try_pop_front","value":"pub fn try_pop_front(&mut Self, u32) -> Result<(), SubtendrilError>","parent":null,"children":[],"decl_id":null,"docs":" Try to drop `n` bytes from the front.","sig":null,"attributes":[{"value":"/ Try to drop `n` bytes from the front.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":63967,"byte_end":64008,"line_start":826,"line_end":826,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64013,"byte_end":64016,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the bytes are not available, or the suffix fails","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64021,"byte_end":64090,"line_start":828,"line_end":828,"column_start":5,"column_end":74}},{"value":"/ validation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64095,"byte_end":64110,"line_start":829,"line_end":829,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64115,"byte_end":64124,"line_start":830,"line_end":830,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64914,"byte_end":64923,"line_start":860,"line_end":860,"column_start":12,"column_end":21},"name":"pop_front","qualname":"<Tendril<F, A>>::pop_front","value":"pub fn pop_front(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Drop `n` bytes from the front.","sig":null,"attributes":[{"value":"/ Drop `n` bytes from the front.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64759,"byte_end":64793,"line_start":855,"line_end":855,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64798,"byte_end":64801,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Panics if the bytes are not available, or the suffix fails","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64806,"byte_end":64868,"line_start":857,"line_end":857,"column_start":5,"column_end":67}},{"value":"/ validation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64873,"byte_end":64888,"line_start":858,"line_end":858,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64893,"byte_end":64902,"line_start":859,"line_end":859,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65156,"byte_end":65168,"line_start":869,"line_end":869,"column_start":12,"column_end":24},"name":"try_pop_back","qualname":"<Tendril<F, A>>::try_pop_back","value":"pub fn try_pop_back(&mut Self, u32) -> Result<(), SubtendrilError>","parent":null,"children":[],"decl_id":null,"docs":" Drop `n` bytes from the back.","sig":null,"attributes":[{"value":"/ Drop `n` bytes from the back.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":64995,"byte_end":65028,"line_start":864,"line_end":864,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65033,"byte_end":65036,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the bytes are not available, or the prefix fails","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65041,"byte_end":65110,"line_start":866,"line_end":866,"column_start":5,"column_end":74}},{"value":"/ validation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65115,"byte_end":65130,"line_start":867,"line_end":867,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65135,"byte_end":65144,"line_start":868,"line_end":868,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65859,"byte_end":65867,"line_start":894,"line_end":894,"column_start":12,"column_end":20},"name":"pop_back","qualname":"<Tendril<F, A>>::pop_back","value":"pub fn pop_back(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Drop `n` bytes from the back.","sig":null,"attributes":[{"value":"/ Drop `n` bytes from the back.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65705,"byte_end":65738,"line_start":889,"line_end":889,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65743,"byte_end":65746,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ Panics if the bytes are not available, or the prefix fails","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65751,"byte_end":65813,"line_start":891,"line_end":891,"column_start":5,"column_end":67}},{"value":"/ validation.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65818,"byte_end":65833,"line_start":892,"line_end":892,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65838,"byte_end":65847,"line_start":893,"line_end":893,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66026,"byte_end":66061,"line_start":900,"line_end":900,"column_start":19,"column_end":54},"name":"reinterpret_view_without_validating","qualname":"<Tendril<F, A>>::reinterpret_view_without_validating","value":"pub unsafe fn reinterpret_view_without_validating<Other>(&Self)\n-> &Tendril<Other, A> where Other: fmt::Format","parent":null,"children":[],"decl_id":null,"docs":" View as another format, without validating.\n","sig":null,"attributes":[{"value":"/ View as another format, without validating.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65938,"byte_end":65985,"line_start":898,"line_end":898,"column_start":5,"column_end":52}},{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":65990,"byte_end":66007,"line_start":899,"line_end":899,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66275,"byte_end":66305,"line_start":909,"line_end":909,"column_start":19,"column_end":49},"name":"reinterpret_without_validating","qualname":"<Tendril<F, A>>::reinterpret_without_validating","value":"pub unsafe fn reinterpret_without_validating<Other>(Self) -> Tendril<Other, A>\nwhere Other: fmt::Format","parent":null,"children":[],"decl_id":null,"docs":" Convert into another format, without validating.\n","sig":null,"attributes":[{"value":"/ Convert into another format, without validating.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66182,"byte_end":66234,"line_start":907,"line_end":907,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66239,"byte_end":66256,"line_start":908,"line_end":908,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66523,"byte_end":66557,"line_start":918,"line_end":918,"column_start":19,"column_end":53},"name":"from_byte_slice_without_validating","qualname":"<Tendril<F, A>>::from_byte_slice_without_validating","value":"pub unsafe fn from_byte_slice_without_validating(&[u8]) -> Tendril<F, A>","parent":null,"children":[],"decl_id":null,"docs":" Build a `Tendril` by copying a byte slice, without validating.\n","sig":null,"attributes":[{"value":"/ Build a `Tendril` by copying a byte slice, without validating.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66424,"byte_end":66490,"line_start":916,"line_end":916,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66495,"byte_end":66504,"line_start":917,"line_end":917,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66877,"byte_end":66906,"line_start":929,"line_end":929,"column_start":19,"column_end":48},"name":"push_bytes_without_validating","qualname":"<Tendril<F, A>>::push_bytes_without_validating","value":"pub unsafe fn push_bytes_without_validating(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Push some bytes onto the end of the `Tendril`, without validating.\n","sig":null,"attributes":[{"value":"/ Push some bytes onto the end of the `Tendril`, without validating.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66774,"byte_end":66844,"line_start":927,"line_end":927,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":66849,"byte_end":66858,"line_start":928,"line_end":928,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":68839,"byte_end":68856,"line_start":985,"line_end":985,"column_start":19,"column_end":36},"name":"unsafe_subtendril","qualname":"<Tendril<F, A>>::unsafe_subtendril","value":"pub unsafe fn unsafe_subtendril(&Self, u32, u32) -> Tendril<F, A>","parent":null,"children":[],"decl_id":null,"docs":" Slice this `Tendril` as a new `Tendril`.","sig":null,"attributes":[{"value":"/ Slice this `Tendril` as a new `Tendril`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":68711,"byte_end":68755,"line_start":981,"line_end":981,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":68760,"byte_end":68763,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ Does not check validity or bounds!","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":68768,"byte_end":68806,"line_start":983,"line_end":983,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":68811,"byte_end":68820,"line_start":984,"line_end":984,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":69445,"byte_end":69461,"line_start":1004,"line_end":1004,"column_start":19,"column_end":35},"name":"unsafe_pop_front","qualname":"<Tendril<F, A>>::unsafe_pop_front","value":"pub unsafe fn unsafe_pop_front(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Drop `n` bytes from the front.","sig":null,"attributes":[{"value":"/ Drop `n` bytes from the front.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":69327,"byte_end":69361,"line_start":1000,"line_end":1000,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":69366,"byte_end":69369,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ Does not check validity or bounds!","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":69374,"byte_end":69412,"line_start":1002,"line_end":1002,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":69417,"byte_end":69426,"line_start":1003,"line_end":1003,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":70041,"byte_end":70056,"line_start":1024,"line_end":1024,"column_start":19,"column_end":34},"name":"unsafe_pop_back","qualname":"<Tendril<F, A>>::unsafe_pop_back","value":"pub unsafe fn unsafe_pop_back(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Drop `n` bytes from the back.","sig":null,"attributes":[{"value":"/ Drop `n` bytes from the back.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":69924,"byte_end":69957,"line_start":1020,"line_end":1020,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":69962,"byte_end":69965,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Does not check validity or bounds!","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":69970,"byte_end":70008,"line_start":1022,"line_end":1022,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":70013,"byte_end":70022,"line_start":1023,"line_end":1023,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75520,"byte_end":75530,"line_start":1208,"line_end":1208,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Tendril<F, A>>::from_slice","value":"pub fn from_slice(&F::Slice) -> Tendril<F, A>","parent":null,"children":[],"decl_id":null,"docs":" Build a `Tendril` by copying a slice.\n","sig":null,"attributes":[{"value":"/ Build a `Tendril` by copying a slice.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75453,"byte_end":75494,"line_start":1206,"line_end":1206,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75499,"byte_end":75508,"line_start":1207,"line_end":1207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75725,"byte_end":75735,"line_start":1214,"line_end":1214,"column_start":12,"column_end":22},"name":"push_slice","qualname":"<Tendril<F, A>>::push_slice","value":"pub fn push_slice(&mut Self, &F::Slice)","parent":null,"children":[],"decl_id":null,"docs":" Push a slice onto the end of the `Tendril`.\n","sig":null,"attributes":[{"value":"/ Push a slice onto the end of the `Tendril`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75652,"byte_end":75699,"line_start":1212,"line_end":1212,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75704,"byte_end":75713,"line_start":1213,"line_end":1213,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":669},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76402,"byte_end":76413,"line_start":1229,"line_end":1229,"column_start":12,"column_end":23},"name":"SendTendril","qualname":"::tendril::SendTendril","value":"SendTendril {  }","parent":null,"children":[{"krate":0,"index":671}],"decl_id":null,"docs":" A simple wrapper to make `Tendril` `Send`.","sig":null,"attributes":[{"value":"/ A simple wrapper to make `Tendril` `Send`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75840,"byte_end":75886,"line_start":1219,"line_end":1219,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75887,"byte_end":75890,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ Although there is a certain subset of the operations on a `Tendril` that a `SendTendril` could","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75891,"byte_end":75989,"line_start":1221,"line_end":1221,"column_start":1,"column_end":99}},{"value":"/ reasonably implement, in order to clearly separate concerns this type is deliberately","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75990,"byte_end":76079,"line_start":1222,"line_end":1222,"column_start":1,"column_end":90}},{"value":"/ minimalist, acting as a safe encapsulation around the invariants which permit `Send`ness and","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76080,"byte_end":76176,"line_start":1223,"line_end":1223,"column_start":1,"column_end":97}},{"value":"/ behaving as an opaque object.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76177,"byte_end":76210,"line_start":1224,"line_end":1224,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76211,"byte_end":76214,"line_start":1225,"line_end":1225,"column_start":1,"column_end":4}},{"value":"/ A `SendTendril` may be produced by `Tendril.into_send()` or `SendTendril::from(tendril)`,","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76215,"byte_end":76308,"line_start":1226,"line_end":1226,"column_start":1,"column_end":94}},{"value":"/ and may be returned to a `Tendril` by `Tendril::from(self)`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76309,"byte_end":76373,"line_start":1227,"line_end":1227,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":473},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77270,"byte_end":77278,"line_start":1264,"line_end":1264,"column_start":11,"column_end":19},"name":"SliceExt","qualname":"::tendril::SliceExt","value":"SliceExt<F>: fmt::Slice","parent":null,"children":[{"krate":0,"index":475}],"decl_id":null,"docs":" `Tendril`-related methods for Rust slices.\n","sig":null,"attributes":[{"value":"/ `Tendril`-related methods for Rust slices.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77213,"byte_end":77259,"line_start":1263,"line_end":1263,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77404,"byte_end":77414,"line_start":1270,"line_end":1270,"column_start":8,"column_end":18},"name":"to_tendril","qualname":"::tendril::SliceExt::to_tendril","value":"pub fn to_tendril(&Self) -> Tendril<F>","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" Make a `Tendril` from this slice.\n","sig":null,"attributes":[{"value":"/ Make a `Tendril` from this slice.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77345,"byte_end":77382,"line_start":1268,"line_end":1268,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77387,"byte_end":77396,"line_start":1269,"line_end":1269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77942,"byte_end":77956,"line_start":1289,"line_end":1289,"column_start":12,"column_end":26},"name":"pop_front_char","qualname":"<Tendril<F, A>>::pop_front_char","value":"pub fn pop_front_char<'a>(&'a mut Self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the first character, if any.\n","sig":null,"attributes":[{"value":"/ Remove and return the first character, if any.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77866,"byte_end":77916,"line_start":1287,"line_end":1287,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77921,"byte_end":77930,"line_start":1288,"line_end":1288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":79257,"byte_end":79275,"line_start":1329,"line_end":1329,"column_start":12,"column_end":30},"name":"pop_front_char_run","qualname":"<Tendril<F, A>>::pop_front_char_run","value":"pub fn pop_front_char_run<'a, C, R>(&'a mut Self, C)\n-> Option<(Tendril<F, A>, R)> where C: FnMut(char) -> R, R: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Remove and return a run of characters at the front of the `Tendril`\n which are classified the same according to the function `classify`.","sig":null,"attributes":[{"value":"/ Remove and return a run of characters at the front of the `Tendril`","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":79033,"byte_end":79104,"line_start":1324,"line_end":1324,"column_start":5,"column_end":76}},{"value":"/ which are classified the same according to the function `classify`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":79109,"byte_end":79180,"line_start":1325,"line_end":1325,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":79185,"byte_end":79188,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on an empty string.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":79193,"byte_end":79231,"line_start":1327,"line_end":1327,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":79236,"byte_end":79245,"line_start":1328,"line_end":1328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":80210,"byte_end":80223,"line_start":1358,"line_end":1358,"column_start":12,"column_end":25},"name":"try_push_char","qualname":"<Tendril<F, A>>::try_push_char","value":"pub fn try_push_char(&mut Self, char) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Push a character, if it can be represented in this format.\n","sig":null,"attributes":[{"value":"/ Push a character, if it can be represented in this format.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":80122,"byte_end":80184,"line_start":1356,"line_end":1356,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":80189,"byte_end":80198,"line_start":1357,"line_end":1357,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":491},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":80420,"byte_end":80427,"line_start":1366,"line_end":1366,"column_start":11,"column_end":18},"name":"ReadExt","qualname":"::tendril::ReadExt","value":"ReadExt: io::Read","parent":null,"children":[{"krate":0,"index":492}],"decl_id":null,"docs":" Extension trait for `io::Read`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `io::Read`.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":80374,"byte_end":80409,"line_start":1365,"line_end":1365,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":80447,"byte_end":80462,"line_start":1367,"line_end":1367,"column_start":8,"column_end":23},"name":"read_to_tendril","qualname":"::tendril::ReadExt::read_to_tendril","value":"pub fn read_to_tendril<A>(&mut Self, &mut Tendril<fmt::Bytes, A>)\n-> io::Result<usize> where A: Atomicity","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":83815,"byte_end":83833,"line_start":1491,"line_end":1491,"column_start":19,"column_end":37},"name":"push_uninitialized","qualname":"<Tendril<F, A>>::push_uninitialized","value":"pub unsafe fn push_uninitialized(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Push \"uninitialized bytes\" onto the end.","sig":null,"attributes":[{"value":"/ Push \"uninitialized bytes\" onto the end.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":83533,"byte_end":83577,"line_start":1485,"line_end":1485,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":83582,"byte_end":83585,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Really, this grows the tendril without writing anything to the new area.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":83590,"byte_end":83666,"line_start":1487,"line_end":1487,"column_start":5,"column_end":81}},{"value":"/ It's only defined for byte tendrils because it's only useful if you","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":83671,"byte_end":83742,"line_start":1488,"line_end":1488,"column_start":5,"column_end":76}},{"value":"/ plan to then mutate the buffer.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":83747,"byte_end":83782,"line_start":1489,"line_end":1489,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":83787,"byte_end":83796,"line_start":1490,"line_end":1490,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":85861,"byte_end":85870,"line_start":1577,"line_end":1577,"column_start":12,"column_end":21},"name":"push_char","qualname":"<Tendril<fmt::UTF8, A>>::push_char","value":"pub fn push_char(&mut Self, char)","parent":null,"children":[],"decl_id":null,"docs":" Push a character onto the end.\n","sig":null,"attributes":[{"value":"/ Push a character onto the end.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":85801,"byte_end":85835,"line_start":1575,"line_end":1575,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":85840,"byte_end":85849,"line_start":1576,"line_end":1576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":86094,"byte_end":86103,"line_start":1585,"line_end":1585,"column_start":12,"column_end":21},"name":"from_char","qualname":"<Tendril<fmt::UTF8, A>>::from_char","value":"pub fn from_char(char) -> Tendril<fmt::UTF8, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Tendril` from a single character.\n","sig":null,"attributes":[{"value":"/ Create a `Tendril` from a single character.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":86021,"byte_end":86068,"line_start":1583,"line_end":1583,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":86073,"byte_end":86082,"line_start":1584,"line_end":1584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":86313,"byte_end":86319,"line_start":1593,"line_end":1593,"column_start":12,"column_end":18},"name":"format","qualname":"<Tendril<fmt::UTF8, A>>::format","value":"pub fn format(strfmt::Arguments) -> Tendril<fmt::UTF8, A>","parent":null,"children":[],"decl_id":null,"docs":" Helper for the `format_tendril!` macro.\n","sig":null,"attributes":[{"value":"/ Helper for the `format_tendril!` macro.","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":86244,"byte_end":86287,"line_start":1591,"line_end":1591,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":86292,"byte_end":86301,"line_start":1592,"line_end":1592,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/utf8_decode.rs","byte_start":114629,"byte_end":114643,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"IncompleteUtf8","qualname":"::utf8_decode::IncompleteUtf8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/utf8_decode.rs","byte_start":114732,"byte_end":114749,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"decode_utf8_lossy","qualname":"<Tendril<fmt::Bytes, A>>::decode_utf8_lossy","value":"pub fn decode_utf8_lossy<F>(Self, F) -> Option<IncompleteUtf8> where\nF: FnMut(Tendril<fmt::UTF8, A>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/utf8_decode.rs","byte_start":117020,"byte_end":117032,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"try_complete","qualname":"<IncompleteUtf8>::try_complete","value":"pub fn try_complete<A, F>(&mut Self, Tendril<fmt::Bytes, A>, F)\n-> Result<Tendril<fmt::Bytes, A>, ()> where A: Atomicity,\nF: FnMut(Tendril<fmt::UTF8, A>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2528,"byte_end":2533,"line_start":46,"line_end":46,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3010,"byte_end":3031,"line_start":67,"line_end":67,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3300,"byte_end":3321,"line_start":78,"line_end":78,"column_start":14,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7239,"byte_end":7244,"line_start":205,"line_end":205,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7355,"byte_end":7360,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7791,"byte_end":7796,"line_start":237,"line_end":237,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8184,"byte_end":8189,"line_start":259,"line_end":259,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8226,"byte_end":8231,"line_start":260,"line_end":260,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8271,"byte_end":8276,"line_start":262,"line_end":262,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8836,"byte_end":8840,"line_start":288,"line_end":288,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":9774,"byte_end":9778,"line_start":328,"line_end":328,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":9811,"byte_end":9815,"line_start":330,"line_end":330,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":10221,"byte_end":10225,"line_start":351,"line_end":351,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":10969,"byte_end":10973,"line_start":383,"line_end":383,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13771,"byte_end":13777,"line_start":477,"line_end":477,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":14150,"byte_end":14156,"line_start":499,"line_end":499,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18655,"byte_end":18671,"line_start":133,"line_end":133,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":19039,"byte_end":19055,"line_start":149,"line_end":149,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/buf32.rs","byte_start":40210,"byte_end":40215,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44787,"byte_end":44796,"line_start":78,"line_end":78,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":45557,"byte_end":45563,"line_start":110,"line_end":110,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46094,"byte_end":46100,"line_start":138,"line_end":138,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48335,"byte_end":48342,"line_start":211,"line_end":211,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48600,"byte_end":48607,"line_start":224,"line_end":224,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48938,"byte_end":48945,"line_start":242,"line_end":242,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":49850,"byte_end":49857,"line_start":283,"line_end":283,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":50220,"byte_end":50227,"line_start":300,"line_end":300,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":50323,"byte_end":50330,"line_start":307,"line_end":307,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":50694,"byte_end":50701,"line_start":324,"line_end":324,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":50804,"byte_end":50811,"line_start":331,"line_end":331,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51188,"byte_end":51195,"line_start":348,"line_end":348,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51303,"byte_end":51310,"line_start":355,"line_end":355,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51580,"byte_end":51587,"line_start":370,"line_end":370,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51696,"byte_end":51703,"line_start":377,"line_end":377,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51976,"byte_end":51983,"line_start":392,"line_end":392,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":52106,"byte_end":52113,"line_start":399,"line_end":399,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":52425,"byte_end":52432,"line_start":415,"line_end":415,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":52556,"byte_end":52563,"line_start":423,"line_end":423,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":52794,"byte_end":52801,"line_start":436,"line_end":436,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":53027,"byte_end":53034,"line_start":447,"line_end":447,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":53404,"byte_end":53411,"line_start":461,"line_end":461,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":53716,"byte_end":53723,"line_start":477,"line_end":477,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":53805,"byte_end":53812,"line_start":484,"line_end":484,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":54073,"byte_end":54080,"line_start":496,"line_end":496,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":54307,"byte_end":54314,"line_start":508,"line_end":508,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":54486,"byte_end":54493,"line_start":519,"line_end":519,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55094,"byte_end":55101,"line_start":539,"line_end":539,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55284,"byte_end":55291,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75384,"byte_end":75391,"line_start":1201,"line_end":1201,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76497,"byte_end":76508,"line_start":1236,"line_end":1236,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76572,"byte_end":76583,"line_start":1238,"line_end":1238,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76776,"byte_end":76783,"line_start":1249,"line_end":1249,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77786,"byte_end":77793,"line_start":1282,"line_end":1282,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":80587,"byte_end":80588,"line_start":1372,"line_end":1372,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":82090,"byte_end":82097,"line_start":1422,"line_end":1422,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":82941,"byte_end":82948,"line_start":1465,"line_end":1465,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":84205,"byte_end":84212,"line_start":1502,"line_end":1502,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":84416,"byte_end":84423,"line_start":1512,"line_end":1512,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":84615,"byte_end":84622,"line_start":1524,"line_end":1524,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":85233,"byte_end":85240,"line_start":1556,"line_end":1556,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":86806,"byte_end":86813,"line_start":1609,"line_end":1609,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":87003,"byte_end":87010,"line_start":1620,"line_end":1620,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":87196,"byte_end":87203,"line_start":1630,"line_end":1630,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":87376,"byte_end":87382,"line_start":1641,"line_end":1641,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":87564,"byte_end":87570,"line_start":1651,"line_end":1651,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/utf8_decode.rs","byte_start":114672,"byte_end":114679,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/utf8_decode.rs","byte_start":116992,"byte_end":117006,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":888,"byte_end":891,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":21}},{"kind":"Mod","span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/lib.rs","byte_start":901,"byte_end":907,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":140}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":2528,"byte_end":2533,"line_start":46,"line_end":46,"column_start":22,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3010,"byte_end":3031,"line_start":67,"line_end":67,"column_start":27,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":3300,"byte_end":3321,"line_start":78,"line_end":78,"column_start":14,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5186,"byte_end":5192,"line_start":139,"line_end":139,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":58},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5744,"byte_end":5750,"line_start":157,"line_end":157,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":58},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5753,"byte_end":5758,"line_start":157,"line_end":157,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":5931,"byte_end":5937,"line_start":163,"line_end":163,"column_start":34,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":58},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7239,"byte_end":7244,"line_start":205,"line_end":205,"column_start":24,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":581},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7355,"byte_end":7360,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":581},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":7791,"byte_end":7796,"line_start":237,"line_end":237,"column_start":24,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":590},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8184,"byte_end":8189,"line_start":259,"line_end":259,"column_start":32,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":590},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8226,"byte_end":8231,"line_start":260,"line_end":260,"column_start":34,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":590},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8271,"byte_end":8276,"line_start":262,"line_end":262,"column_start":36,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":590},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":8836,"byte_end":8840,"line_start":288,"line_end":288,"column_start":24,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":599},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":9774,"byte_end":9778,"line_start":328,"line_end":328,"column_start":32,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":599},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":9811,"byte_end":9815,"line_start":330,"line_end":330,"column_start":29,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":599},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":10221,"byte_end":10225,"line_start":351,"line_end":351,"column_start":36,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":599},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":10969,"byte_end":10973,"line_start":383,"line_end":383,"column_start":24,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":608},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":13771,"byte_end":13777,"line_start":477,"line_end":477,"column_start":24,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":617},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/fmt.rs","byte_start":14150,"byte_end":14156,"line_start":499,"line_end":499,"column_start":36,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":617},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":18655,"byte_end":18671,"line_start":133,"line_end":133,"column_start":15,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/stream.rs","byte_start":19039,"byte_end":19055,"line_start":149,"line_end":149,"column_start":46,"column_end":62},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":168},"to":{"krate":0,"index":152}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/buf32.rs","byte_start":40210,"byte_end":40215,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":44787,"byte_end":44796,"line_start":78,"line_end":78,"column_start":27,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":258},"to":{"krate":0,"index":253}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":45557,"byte_end":45563,"line_start":110,"line_end":110,"column_start":27,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":266},"to":{"krate":0,"index":253}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":46094,"byte_end":46100,"line_start":138,"line_end":138,"column_start":9,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48335,"byte_end":48342,"line_start":211,"line_end":211,"column_start":28,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48600,"byte_end":48607,"line_start":224,"line_end":224,"column_start":22,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":48938,"byte_end":48945,"line_start":242,"line_end":242,"column_start":21,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":49850,"byte_end":49857,"line_start":283,"line_end":283,"column_start":26,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5538}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":50220,"byte_end":50227,"line_start":300,"line_end":300,"column_start":32,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":50323,"byte_end":50330,"line_start":307,"line_end":307,"column_start":24,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5538}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":50694,"byte_end":50701,"line_start":324,"line_end":324,"column_start":30,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":50804,"byte_end":50811,"line_start":331,"line_end":331,"column_start":32,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5538}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51188,"byte_end":51195,"line_start":348,"line_end":348,"column_start":38,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51303,"byte_end":51310,"line_start":355,"line_end":355,"column_start":33,"column_end":40},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5538}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51580,"byte_end":51587,"line_start":370,"line_end":370,"column_start":39,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51696,"byte_end":51703,"line_start":377,"line_end":377,"column_start":34,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5538}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":51976,"byte_end":51983,"line_start":392,"line_end":392,"column_start":40,"column_end":47},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":52106,"byte_end":52113,"line_start":399,"line_end":399,"column_start":46,"column_end":53},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5538}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":52425,"byte_end":52432,"line_start":415,"line_end":415,"column_start":52,"column_end":59},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":5525}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":52556,"byte_end":52563,"line_start":423,"line_end":423,"column_start":22,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":52794,"byte_end":52801,"line_start":436,"line_end":436,"column_start":25,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":53027,"byte_end":53034,"line_start":447,"line_end":447,"column_start":29,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1748}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":53404,"byte_end":53411,"line_start":461,"line_end":461,"column_start":26,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":53716,"byte_end":53723,"line_start":477,"line_end":477,"column_start":19,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":53805,"byte_end":53812,"line_start":484,"line_end":484,"column_start":27,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1841}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":54073,"byte_end":54080,"line_start":496,"line_end":496,"column_start":20,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":54307,"byte_end":54314,"line_start":508,"line_end":508,"column_start":24,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":54486,"byte_end":54493,"line_start":519,"line_end":519,"column_start":30,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55094,"byte_end":55101,"line_start":539,"line_end":539,"column_start":27,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":7141}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":55284,"byte_end":55291,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":75384,"byte_end":75391,"line_start":1201,"line_end":1201,"column_start":12,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76497,"byte_end":76508,"line_start":1236,"line_end":1236,"column_start":25,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76572,"byte_end":76583,"line_start":1238,"line_end":1238,"column_start":36,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":76776,"byte_end":76783,"line_start":1249,"line_end":1249,"column_start":37,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77288,"byte_end":77293,"line_start":1264,"line_end":1264,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":75},"to":{"krate":0,"index":473}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":77786,"byte_end":77793,"line_start":1282,"line_end":1282,"column_start":12,"column_end":19},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":80433,"byte_end":80437,"line_start":1366,"line_end":1366,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3193},"to":{"krate":0,"index":491}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":80587,"byte_end":80588,"line_start":1372,"line_end":1372,"column_start":21,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":495},"to":{"krate":0,"index":491}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":82090,"byte_end":82097,"line_start":1422,"line_end":1422,"column_start":23,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":281},"to":{"krate":1,"index":3254}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":82941,"byte_end":82948,"line_start":1465,"line_end":1465,"column_start":12,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":84205,"byte_end":84212,"line_start":1502,"line_end":1502,"column_start":29,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":84416,"byte_end":84423,"line_start":1512,"line_end":1512,"column_start":26,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":84615,"byte_end":84622,"line_start":1524,"line_end":1524,"column_start":27,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":6911}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":85233,"byte_end":85240,"line_start":1556,"line_end":1556,"column_start":9,"column_end":16},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":86806,"byte_end":86813,"line_start":1609,"line_end":1609,"column_start":39,"column_end":46},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":87003,"byte_end":87010,"line_start":1620,"line_end":1620,"column_start":26,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":87196,"byte_end":87203,"line_start":1630,"line_end":1630,"column_start":32,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":87376,"byte_end":87382,"line_start":1641,"line_end":1641,"column_start":41,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/tendril.rs","byte_start":87564,"byte_end":87570,"line_start":1651,"line_end":1651,"column_start":49,"column_end":55},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/utf8_decode.rs","byte_start":114672,"byte_end":114679,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hunter/.cargo/registry/src/github.com-1ecc6299db9ec823/tendril-0.4.2/src/utf8_decode.rs","byte_start":116992,"byte_end":117006,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}}]}